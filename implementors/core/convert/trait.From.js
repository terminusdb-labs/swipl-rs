(function() {var implementors = {};
implementors["swipl"] = [{"text":"impl&lt;'a&gt; <a class=\"trait\" href=\"https://doc.rust-lang.org/1.61.0/core/convert/trait.From.html\" title=\"trait core::convert::From\">From</a>&lt;&amp;'a <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.61.0/std/primitive.str.html\">str</a>&gt; for <a class=\"enum\" href=\"swipl/atom/enum.Atomable.html\" title=\"enum swipl::atom::Atomable\">Atomable</a>&lt;'a&gt;","synthetic":false,"types":["swipl::atom::Atomable"]},{"text":"impl&lt;'a&gt; <a class=\"trait\" href=\"https://doc.rust-lang.org/1.61.0/core/convert/trait.From.html\" title=\"trait core::convert::From\">From</a>&lt;<a class=\"struct\" href=\"https://doc.rust-lang.org/1.61.0/alloc/string/struct.String.html\" title=\"struct alloc::string::String\">String</a>&gt; for <a class=\"enum\" href=\"swipl/atom/enum.Atomable.html\" title=\"enum swipl::atom::Atomable\">Atomable</a>&lt;'a&gt;","synthetic":false,"types":["swipl::atom::Atomable"]},{"text":"impl <a class=\"trait\" href=\"https://doc.rust-lang.org/1.61.0/core/convert/trait.From.html\" title=\"trait core::convert::From\">From</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.61.0/std/primitive.u64.html\">u64</a>&gt; for <a class=\"enum\" href=\"swipl/dict/enum.Key.html\" title=\"enum swipl::dict::Key\">Key</a>","synthetic":false,"types":["swipl::dict::Key"]},{"text":"impl&lt;A:&nbsp;<a class=\"trait\" href=\"swipl/atom/trait.IntoAtom.html\" title=\"trait swipl::atom::IntoAtom\">IntoAtom</a>&gt; <a class=\"trait\" href=\"https://doc.rust-lang.org/1.61.0/core/convert/trait.From.html\" title=\"trait core::convert::From\">From</a>&lt;A&gt; for <a class=\"enum\" href=\"swipl/dict/enum.Key.html\" title=\"enum swipl::dict::Key\">Key</a>","synthetic":false,"types":["swipl::dict::Key"]},{"text":"impl <a class=\"trait\" href=\"https://doc.rust-lang.org/1.61.0/core/convert/trait.From.html\" title=\"trait core::convert::From\">From</a>&lt;<a class=\"struct\" href=\"swipl/result/struct.PrologException.html\" title=\"struct swipl::result::PrologException\">PrologException</a>&gt; for <a class=\"enum\" href=\"swipl/result/enum.PrologError.html\" title=\"enum swipl::result::PrologError\">PrologError</a>","synthetic":false,"types":["swipl::result::PrologError"]}];
if (window.register_implementors) {window.register_implementors(implementors);} else {window.pending_implementors = implementors;}})()