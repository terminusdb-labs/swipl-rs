var searchIndex = new Map(JSON.parse('[\
["json",{"doc":"","t":"","n":[],"q":[],"d":[],"i":[],"f":[],"c":[],"p":[],"b":[]}],\
["print_swipl_info",{"doc":"","t":"H","n":["main"],"q":[[0,"print_swipl_info"]],"d":[""],"i":[0],"f":[[[],1]],"c":[],"p":[[1,"tuple"]],"b":[]}],\
["swipl",{"doc":"swipl provides a high-level interface to SWI-Prolog. It â€¦","t":"XCQCCXCCCCCCQCCQCQCQCCCCQQQCQQQKFGKFPPMNNNNNNNNNNNHNNNNNNNNNNNNNNNNNNNHHNNNNMNNNNNNNNNNNNNNNNNNNNNNNNNNNNNKKKKKKRKKKHMMMNNNHMMHMMMHHHHHHHNNNKFRFKFGPNNNNNNNNNNNMNMNNNNNNNNNNNNNNMNMNNNNNNNNNNNNNNNNNNOOSFFKFFKIFKKFFNNNNNNNNNNNNNNNNNNNNNNNNNNOONNNNNNNNNNNNNNNNNNNNNNNNNNNNNMNNNNNNNNNNHNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNHNNNPFFPKGNNMNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNFFNHNNNNHNNNNNNNNNNNHNNNNNNNNNSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSISSSSSSSSSSSSSSSSSSSSSSSSSSISSSSSSSSSIIIISSSSPPPPPPPPPPPPSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSHIHHHHHHHIHHHHHHHIHHHFHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHIHHHHHHIHHHHHFJHIHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHIHHHHHHHHHHHHHHHHHHHHHHHHFHHHHHHHHHHHHHHHHHHHHHHHHHHHFHHHHHHFHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHFHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSHHSSSHHHJHHHHHIHIHHHHHHHJHHHHHHHHHHHHHHJHHPPPPPPPPPPPPHHHHHHHHHHHHIHHHHIIHHHHHHHHHHHHHHHHHHHHHHHISSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSHSIIIISSSFSSSSSSSSSSSSSSSSSSSSSSSSSSSHHHHHHISSSSSSSSSSSHHHHHHHHHHSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSFSISSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSFIFFFFFFFFFISSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSOOOOOOOOOOUFOIIIIOIOOISISIOOOOHOOOIOOOOIOJIOOIIIIFIOOOOOHISIISOIOIIIIIIIIIIIIIOSOSFFIOOIOHFUSIOOOOOIOIIOFOOOOOIOOFFFIFFIIOIIOOIFSOOOOOOOOOIOIIIIIIISISSIIIIIIIIIIIIIIIIIFOOOOOOOOOOSOOOOOOOOOOIIIOOOOHOOHHHHHOOHOHHOOHHHHHHOIIINNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNHHHIOOOOOOOOIHOOOHHHHIINNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNHOOOOHOONOHOOOOIHIHNIHFOOHFHOHHHHOOOHNHHNOOHHHHHHHOHHHHHHIFHHHHOOOOONNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNIHOHOHHOHNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNIIIHHOOOIHHHHHNONHHHHHHHHHHHHHHHHHHHHHHHHHHHHIOOONIIOOIHHFHHIIIIIIIIIINNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNOOFFFHHHIHHOOHHHOHFOOOOOOHHHHFOOOIHOOIHHHOOOOHFOHHHHHHOOIHHOOHHHHIIHHOOOOONNNOHIHHIHHJJJJOONHHOIHFHIFIIOOOOHHOIHHUUUUUIUUIUUIIHHHHHHOHHHIHIHOOOOHOHOOHFHOISSSHOOHHHHHIFOOOIOOOOOOOOOOOOOOOOHHHOOOOOOOOOHHHOOOOHNNNNHHHHHHHHHHHHHHHHHIHIHHHHHOOOHHHHHHHHHHHIHHHHHHHHHOOHHOOIUFIOOIFFFNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNHNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNHHHOOOOOONNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNIIIIIIIIIHIIIIIIIIIIIIOOHOHHHOOIIHIHOHHHHHHHHHHHIHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHIHHHHHHHOOOHHFUFFNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNHHHHHHHHHFNNNNNNNNNNNNNNNNNNFNNNNNNNNNNNNNNNNNNXEQQXEQQQQQEQQQQQQQFNNNNNNNNNNNNNNNNNIPPPPPPPPPIPPPPPIGFIGIHHNNNNNNNHNNNNNNNNNNHNNHNNNNNNNNNNHFFFNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNPPPEPPPPFPPEEPFKKGKPPNNNNNNNNNNCNNNNNNNMNNNNNNNNNNNNNNNNNNNNMNNNMNNNNNNCNNNNNNNNNNNNMNNNNFPGPPPIPPPPPNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNHNNNNNNNNNNFFFFFFNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNHHNNNNNNNNNNNNNNNNNNFNNNNNNNNNNNNNNNNN","n":["arc_blob","atom","atom","blob","callable","clone_blob","consts","context","dict","engine","fli","functor","functor","init","module","pred","predicate","predicates","prelude","prolog","record","result","stream","term","term","term_getable","term_putable","text","unifiable","wrapped_arc_blob","wrapped_clone_blob","AsAtom","Atom","Atomable","IntoAtom","LazyAtom","Str","String","as_atom","as_atom","as_atom","as_atom","as_atom","as_atom_ptr","as_atom_ptr","as_atom_ptr","as_atom_ptr","as_atom_t","as_ref","atom_ptr","atomable","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","clone","clone_into","deserialize","drop","eq","fmt","from","from","from","from","from","get","get","get_atom","get_atomable","hash","into","into","into","into_atom","into_atom","into_atom","into_atom","into_atom","name","name","name","name","new","new","new","owned","put","put","serialize","to_owned","to_string","try_from","try_from","try_from","try_into","try_into","try_into","type_id","type_id","type_id","unify","unify","wrap","ArcBlob","ArcBlobBase","ArcBlobImpl","CloneBlob","CloneBlobBase","CloneBlobImpl","Inner","WrappedArcBlob","WrappedArcBlobBase","WrappedArcBlobImpl","acquire_arc_blob","blob_name","blob_name","blob_name","compare","compare","compare","create_blob_definition","from_arc","get_arc","get_arc_from_term","get_blob_definition","get_blob_definition","get_blob_definition","get_cloned_from_term","put_arc_in_term","put_cloneable_in_term","release_arc_blob","release_clone_blob","unify_with_arc","unify_with_cloneable","write","write","write","Callable","CallablePredicate","ContextType","LazyCallablePredicate","OpenCall","OpenQuery","PredicateWrapError","WrongArity","as_callable","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","clone","clone_into","cut","cut","discard","discard","drop","fmt","fmt","from","from","from","from","into","into","into","into","new","new","next_solution","next_solution","open","open","open","open","to_owned","to_string","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","wrap","actual","expected","MAX_ARITY","ActivatedEngine","Context","ContextType","ExceptionTerm","Frame","FrameableContextType","GenericQueryableContext","GenericQueryableContextType","IntoPrologException","QueryableContextType","TermListIterator","Unmanaged","assert_activated","assert_no_exception","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","call_once","call_term_once","clear_exception","clear_exception","clone","clone_into","close","compound_terms","compound_terms_vec","compound_terms_vec_sized","context","context","current_output","cut","deref","deserialize_from_term","dict_entries","discard","discard","drop","drop","engine_ptr","from","from","from","from","from","from","from","from","has_exception","ignore","into","into","into","into","into","into","into","into_generic","into_iter","into_prolog_exception","new_term_ref","new_term_refs","new_term_refs_vec","next","next_solution","once","open","open_call","open_frame","open_with_module","prolog_catch_unwind","raise_exception","rewind","serialize_to_term","serialize_to_term_with_config","string_from_term","term_from_string","term_list_array","term_list_iter","term_list_vec","to_owned","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_or_die","try_or_die_generic","type_id","type_id","type_id","type_id","type_id","type_id","type_id","unify_list_functor","unmanaged_engine_context","with_exception","with_uncleared_exception","wrap_term_ref","Atom","DictBuilder","DictIterator","Int","IntoKey","Key","add_entry","add_entry_key","atom_ptr","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","clone","clone_into","default","entry","entry_key","eq","fmt","from","from","from","from","from","hash","into","into","into","into_iter","new","next","put","set_tag","set_tag_term","tag","tag_term","to_owned","try_from","try_from","try_from","try_into","try_into","try_into","type_id","type_id","type_id","unify","Engine","EngineActivation","activate","assert_some_engine_is_active","borrow","borrow","borrow_mut","borrow_mut","current_engine_ptr","default","drop","drop","engine_ptr","fmt","fmt","from","from","into","into","is_active","is_engine_active","new","some_engine_active","try_from","try_from","try_into","try_into","type_id","type_id","with_state","BIG_ENDIAN","BUF_ALLOW_STACK","BUF_DISCARDABLE","BUF_MALLOC","BUF_RING","BUF_STACK","BYTE_ORDER","CVT_ALL","CVT_ATOM","CVT_ATOMIC","CVT_EXCEPTION","CVT_FLOAT","CVT_INTEGER","CVT_LIST","CVT_MASK","CVT_NUMBER","CVT_RATIONAL","CVT_STRING","CVT_VARIABLE","CVT_VARNOFAIL","CVT_WRITE","CVT_WRITEQ","CVT_WRITE_CANONICAL","CVT_XINTEGER","EOF","EPLEXCEPTION","EXIT_FAILURE","EXIT_SUCCESS","FALSE","FD_SETSIZE","FF_FORCE","FF_KEEP","FF_MASK","FF_NOCREATE","FF_READONLY","FILE","F_LOCK","F_OK","F_TEST","F_TLOCK","F_ULOCK","HAVE_VISIBILITY_ATTRIBUTE","INT16_MAX","INT16_MIN","INT32_MAX","INT32_MIN","INT8_MAX","INT8_MIN","INTPTR_MAX","INTPTR_MIN","INT_FAST16_MAX","INT_FAST16_MIN","INT_FAST32_MAX","INT_FAST32_MIN","INT_FAST8_MAX","INT_FAST8_MIN","INT_LEAST16_MAX","INT_LEAST16_MIN","INT_LEAST32_MAX","INT_LEAST32_MIN","INT_LEAST8_MAX","INT_LEAST8_MIN","IOENC","IOENC_ENC_ANSI","IOENC_ENC_ASCII","IOENC_ENC_ISO_LATIN_1","IOENC_ENC_OCTET","IOENC_ENC_UNKNOWN","IOENC_ENC_UTF16BE","IOENC_ENC_UTF16LE","IOENC_ENC_UTF8","IOENC_ENC_WCHAR","IOFUNCTIONS","IOLOCK","IOPOS","IOSTREAM","LITTLE_ENDIAN","L_INCR","L_SET","L_XTND","None","None","None","None","None","None","None","None","None","None","None","None","OPT_ALL","OPT_INF","OPT_TYPE_MASK","PDP_ENDIAN","PLSIG_IGNORE","PLSIG_NOFRAME","PLSIG_SYNC","PLSIG_THROW","PLVERSION","PLVERSION_TAG","PL_ACTION_ABORT","PL_ACTION_ATTACH_CONSOLE","PL_ACTION_BACKTRACE","PL_ACTION_BREAK","PL_ACTION_DEBUG","PL_ACTION_FLUSH","PL_ACTION_GUIAPP","PL_ACTION_HALT","PL_ACTION_TRACE","PL_ACTION_TRADITIONAL","PL_ACTION_WRITE","PL_ARITY_AS_SIZE","PL_ASSERTA","PL_ASSERTZ","PL_ATOM","PL_BLOB","PL_BLOB_MAGIC","PL_BLOB_MAGIC_B","PL_BLOB_NOCOPY","PL_BLOB_TEXT","PL_BLOB_UNIQUE","PL_BLOB_VERSION","PL_BLOB_WCHAR","PL_BOOL","PL_BT_SAFE","PL_BT_USER","PL_BYTE","PL_CHAR","PL_CHARS","PL_CHAR_LIST","PL_CLEANUP_CANCELED","PL_CLEANUP_FAILED","PL_CLEANUP_NO_CANCEL","PL_CLEANUP_NO_RECLAIM_MEMORY","PL_CLEANUP_RECURSIVE","PL_CLEANUP_STATUS_MASK","PL_CLEANUP_SUCCESS","PL_CODE","PL_CODE_LIST","PL_COOKEDTTY","PL_CREATE_INCREMENTAL","PL_CREATE_THREAD_LOCAL","PL_CUTTED","PL_CYCLIC_TERM","PL_DICT","PL_DIFF_LIST","PL_DISPATCH_INPUT","PL_DISPATCH_INSTALLED","PL_DISPATCH_NOWAIT","PL_DISPATCH_TIMEOUT","PL_DISPATCH_WAIT","PL_DOUBLE","PL_ENGINE_INUSE","PL_ENGINE_INVAL","PL_ENGINE_SET","PL_FA_CREF","PL_FA_ISO","PL_FA_META","PL_FA_NONDETERMINISTIC","PL_FA_NOTRACE","PL_FA_SIG_ATOMIC","PL_FA_TRANSPARENT","PL_FA_VARARGS","PL_FILE_ABSOLUTE","PL_FILE_EXECUTE","PL_FILE_EXIST","PL_FILE_NOERRORS","PL_FILE_OSPATH","PL_FILE_READ","PL_FILE_SEARCH","PL_FILE_WRITE","PL_FIRST_CALL","PL_FLI_VERSION","PL_FLOAT","PL_FOR_DICT_SORTED","PL_FUNCTOR","PL_FUNCTOR_CHARS","PL_GMP_SET_ALLOC_FUNCTIONS","PL_HT_NEW","PL_HT_UPDATE","PL_INT","PL_INT64","PL_INTEGER","PL_INTPTR","PL_LIST","PL_LIST_PAIR","PL_LONG","PL_MBCHARS","PL_MBCODES","PL_MBSTRING","PL_NCHARS","PL_NIL","PL_NOTTY","PL_NOT_A_LIST","PL_NUTF8_CHARS","PL_NUTF8_CODES","PL_NUTF8_STRING","PL_NWCHARS","PL_NWCODES","PL_NWSTRING","PL_PARTIAL_LIST","PL_POINTER","PL_PRUNED","PL_QLF_LOADVERSION","PL_QLF_VERSION","PL_QUERY_ARGC","PL_QUERY_ARGV","PL_QUERY_ENCODING","PL_QUERY_GETC","PL_QUERY_HALTING","PL_QUERY_MAX_INTEGER","PL_QUERY_MAX_TAGGED_INT","PL_QUERY_MAX_THREADS","PL_QUERY_MIN_INTEGER","PL_QUERY_MIN_TAGGED_INT","PL_QUERY_USER_CPU","PL_QUERY_VERSION","PL_Q_ALLOW_YIELD","PL_Q_CATCH_EXCEPTION","PL_Q_EXT_STATUS","PL_Q_NODEBUG","PL_Q_NORMAL","PL_Q_PASS_EXCEPTION","PL_RATIONAL","PL_RAWTTY","PL_REC_VERSION","PL_REDO","PL_RESUME","PL_SHORT","PL_SIGNOFRAME","PL_SIGSYNC","PL_STRING","PL_S_EXCEPTION","PL_S_FALSE","PL_S_LAST","PL_S_NOT_INNER","PL_S_TRUE","PL_S_YIELD","PL_TERM","PL_THREAD_NOT_DETACHED","PL_THREAD_NO_DEBUG","PL_UTF8_CHARS","PL_UTF8_STRING","PL_VARIABLE","PL_VERSION_BUILT_IN","PL_VERSION_FLI","PL_VERSION_QLF","PL_VERSION_QLF_LOAD","PL_VERSION_REC","PL_VERSION_SYSTEM","PL_VERSION_VM","PL_WRT_ATTVAR_DOTS","PL_WRT_ATTVAR_IGNORE","PL_WRT_ATTVAR_MASK","PL_WRT_ATTVAR_PORTRAY","PL_WRT_ATTVAR_WRITE","PL_WRT_BACKQUOTED_STRING","PL_WRT_BACKQUOTE_IS_SYMBOL","PL_WRT_BLOB_PORTRAY","PL_WRT_BRACETERMS","PL_WRT_CHARESCAPES","PL_WRT_CHARESCAPES_UNICODE","PL_WRT_DOTLISTS","PL_WRT_IGNOREOPS","PL_WRT_NEWLINE","PL_WRT_NODICT","PL_WRT_NODOTINATOM","PL_WRT_NO_CHARESCAPES","PL_WRT_NO_CYCLES","PL_WRT_NO_LISTS","PL_WRT_NUMBERVARS","PL_WRT_PARTIAL","PL_WRT_PORTRAY","PL_WRT_QUOTED","PL_WRT_QUOTE_NON_ASCII","PL_WRT_RAT_NATURAL","PL_WRT_VARNAMES","PL_abort_hook","PL_abort_hook_t","PL_abort_unhook","PL_acquire_stream","PL_action","PL_add_hash_table","PL_add_to_protocol","PL_advance_hash_table_enum","PL_agc_hook","PL_agc_hook_t","PL_assert","PL_atom_chars","PL_atom_generator","PL_atom_generator_w","PL_atom_mbchars","PL_atom_nchars","PL_atom_wchars","PL_atomic_t","PL_backtrace","PL_backtrace_string","PL_blob_data","PL_blob_t","PL_call","PL_call_predicate","PL_can_yield","PL_changed_cwd","PL_chars_to_term","PL_check_data","PL_check_stacks","PL_cleanup","PL_cleanup_fork","PL_clear_exception","PL_clear_hash_table","PL_close_foreign_frame","PL_close_query","PL_compare","PL_cons_functor","PL_cons_functor_v","PL_cons_list","PL_context","PL_copy_term_ref","PL_create_engine","PL_current_prolog_flag","PL_current_query","PL_cut_query","PL_cvt_encoding","PL_cvt_i_address","PL_cvt_i_atom","PL_cvt_i_bool","PL_cvt_i_char","PL_cvt_i_codes","PL_cvt_i_float","PL_cvt_i_int","PL_cvt_i_int32","PL_cvt_i_int64","PL_cvt_i_llong","PL_cvt_i_long","PL_cvt_i_schar","PL_cvt_i_short","PL_cvt_i_single","PL_cvt_i_size_t","PL_cvt_i_string","PL_cvt_i_uchar","PL_cvt_i_uint","PL_cvt_i_uint32","PL_cvt_i_uint64","PL_cvt_i_ullong","PL_cvt_i_ulong","PL_cvt_i_ushort","PL_cvt_o_address","PL_cvt_o_atom","PL_cvt_o_codes","PL_cvt_o_float","PL_cvt_o_int64","PL_cvt_o_single","PL_cvt_o_string","PL_cvt_set_encoding","PL_cwd","PL_del_hash_table","PL_describe_context","PL_destroy_engine","PL_discard_foreign_frame","PL_dispatch","PL_dispatch_hook","PL_dispatch_hook_t","PL_dlclose","PL_dlerror","PL_dlopen","PL_dlsym","PL_domain_error","PL_duplicate_record","PL_engine_t","PL_erase","PL_erase_external","PL_exception","PL_existence_error","PL_exit_hook","PL_extension","PL_extensions","PL_fatal_error","PL_fid_t","PL_find_blob_type","PL_for_dict","PL_foreign_context","PL_foreign_context_address","PL_foreign_context_predicate","PL_foreign_control","PL_free","PL_free_blob","PL_free_hash_table","PL_free_hash_table_enum","PL_functor_arity","PL_functor_arity_sz","PL_functor_name","PL_get_arg","PL_get_arg_sz","PL_get_atom","PL_get_atom_chars","PL_get_atom_ex","PL_get_atom_nchars","PL_get_attr","PL_get_blob","PL_get_bool","PL_get_bool_ex","PL_get_char_ex","PL_get_chars","PL_get_compound_name_arity","PL_get_compound_name_arity_sz","PL_get_context","PL_get_delay_list","PL_get_dict_key","PL_get_file_name","PL_get_file_nameW","PL_get_float","PL_get_float_ex","PL_get_functor","PL_get_head","PL_get_int64","PL_get_int64_ex","PL_get_integer","PL_get_integer_ex","PL_get_intptr","PL_get_intptr_ex","PL_get_list","PL_get_list_chars","PL_get_list_ex","PL_get_list_nchars","PL_get_long","PL_get_long_ex","PL_get_module","PL_get_name_arity","PL_get_name_arity_sz","PL_get_nchars","PL_get_nil","PL_get_nil_ex","PL_get_pointer","PL_get_pointer_ex","PL_get_signum_ex","PL_get_size_ex","PL_get_stream","PL_get_stream_from_blob","PL_get_stream_handle","PL_get_string","PL_get_tail","PL_get_term_value","PL_get_thread_alias","PL_get_thread_id_ex","PL_get_uint64","PL_get_uint64_ex","PL_get_wchars","PL_halt","PL_handle_signals","PL_initialise","PL_initialise_hook","PL_initialise_hook_t","PL_instantiation_error","PL_interrupt","PL_is_acyclic","PL_is_atom","PL_is_atomic","PL_is_attvar","PL_is_blob","PL_is_callable","PL_is_compound","PL_is_dict","PL_is_float","PL_is_functor","PL_is_ground","PL_is_initialised","PL_is_integer","PL_is_list","PL_is_number","PL_is_pair","PL_is_rational","PL_is_string","PL_is_variable","PL_license","PL_linger","PL_load_extensions","PL_locale","PL_lookup_hash_table","PL_malloc","PL_malloc_atomic","PL_malloc_atomic_uncollectable","PL_malloc_atomic_unmanaged","PL_malloc_uncollectable","PL_malloc_unmanaged","PL_mark_string_buffers","PL_module_name","PL_new_atom","PL_new_atom_mbchars","PL_new_atom_nchars","PL_new_atom_wchars","PL_new_blob","PL_new_functor","PL_new_functor_sz","PL_new_hash_table","PL_new_hash_table_enum","PL_new_module","PL_new_nil_ref","PL_new_term_ref","PL_new_term_refs","PL_next_solution","PL_on_halt","PL_open_foreign_frame","PL_open_query","PL_open_resource","PL_option_t","PL_permission_error","PL_pred","PL_predicate","PL_predicate_info","PL_prof_call","PL_prof_exit","PL_prof_type_t","PL_prolog_debug","PL_prolog_nodebug","PL_prompt_next","PL_prompt_string","PL_put_atom","PL_put_atom_chars","PL_put_atom_nchars","PL_put_blob","PL_put_bool","PL_put_chars","PL_put_dict","PL_put_float","PL_put_functor","PL_put_int64","PL_put_integer","PL_put_list","PL_put_list_chars","PL_put_list_codes","PL_put_list_nchars","PL_put_list_ncodes","PL_put_nil","PL_put_pointer","PL_put_string_chars","PL_put_string_nchars","PL_put_term","PL_put_term_from_chars","PL_put_uint64","PL_put_variable","PL_put_wchars","PL_qlf_get_atom","PL_qlf_get_double","PL_qlf_get_int32","PL_qlf_get_int64","PL_qlf_get_uint32","PL_qlf_put_atom","PL_qlf_put_double","PL_qlf_put_int32","PL_qlf_put_int64","PL_qlf_put_uint32","PL_query","PL_query_engine","PL_quote","PL_raise","PL_raise_exception","PL_realloc","PL_record","PL_record_external","PL_recorded","PL_recorded_external","PL_register_atom","PL_register_blob_type","PL_register_extensions","PL_register_extensions_in_module","PL_register_foreign","PL_register_foreign_in_module","PL_register_profile_type","PL_release_stream","PL_release_stream_noerror","PL_release_string_buffers_from_mark","PL_representation_error","PL_reset_term_refs","PL_resource_error","PL_rewind_foreign_frame","PL_same_compound","PL_scan_options","PL_set_engine","PL_set_prolog_flag","PL_set_resource_db_mem","PL_sigaction","PL_signal","PL_skip_list","PL_step_context","PL_strip_module","PL_syntax_error","PL_term_type","PL_thread_at_exit","PL_thread_attach_engine","PL_thread_attr_t","PL_thread_destroy_engine","PL_thread_raise","PL_thread_self","PL_throw","PL_toplevel","PL_ttymode","PL_type_error","PL_unify","PL_unify_arg","PL_unify_arg_sz","PL_unify_atom","PL_unify_atom_chars","PL_unify_atom_nchars","PL_unify_blob","PL_unify_bool","PL_unify_bool_ex","PL_unify_chars","PL_unify_compound","PL_unify_float","PL_unify_functor","PL_unify_int64","PL_unify_integer","PL_unify_list","PL_unify_list_chars","PL_unify_list_codes","PL_unify_list_ex","PL_unify_list_nchars","PL_unify_list_ncodes","PL_unify_nil","PL_unify_nil_ex","PL_unify_pointer","PL_unify_stream","PL_unify_string_chars","PL_unify_string_nchars","PL_unify_term","PL_unify_thread_id","PL_unify_uint64","PL_unify_wchars","PL_unify_wchars_diff","PL_uninstantiation_error","PL_unregister_atom","PL_unregister_blob_type","PL_utf8_strlen","PL_version_info","PL_warning","PL_warningX","PL_wchars_to_term","PL_winitialise","PL_write_prompt","PL_write_term","PL_yielded","PRIX16","PRIX32","PRIX64","PRIX8","PRIXFAST16","PRIXFAST32","PRIXFAST64","PRIXFAST8","PRIXLEAST16","PRIXLEAST32","PRIXLEAST64","PRIXLEAST8","PRIXMAX","PRIXPTR","PRId16","PRId32","PRId64","PRId8","PRIdFAST16","PRIdFAST32","PRIdFAST64","PRIdFAST8","PRIdLEAST16","PRIdLEAST32","PRIdLEAST64","PRIdLEAST8","PRIdMAX","PRIdPTR","PRIi16","PRIi32","PRIi64","PRIi8","PRIiFAST16","PRIiFAST32","PRIiFAST64","PRIiFAST8","PRIiLEAST16","PRIiLEAST32","PRIiLEAST64","PRIiLEAST8","PRIiMAX","PRIiPTR","PRIo16","PRIo32","PRIo64","PRIo8","PRIoFAST16","PRIoFAST32","PRIoFAST64","PRIoFAST8","PRIoLEAST16","PRIoLEAST32","PRIoLEAST64","PRIoLEAST8","PRIoMAX","PRIoPTR","PRIu16","PRIu32","PRIu64","PRIu8","PRIuFAST16","PRIuFAST32","PRIuFAST64","PRIuFAST8","PRIuLEAST16","PRIuLEAST32","PRIuLEAST64","PRIuLEAST8","PRIuMAX","PRIuPTR","PRIx16","PRIx32","PRIx64","PRIx8","PRIxFAST16","PRIxFAST32","PRIxFAST64","PRIxFAST8","PRIxLEAST16","PRIxLEAST32","PRIxLEAST64","PRIxLEAST8","PRIxMAX","PRIxPTR","PTRDIFF_MAX","PTRDIFF_MIN","RAND_MAX","REP_FN","REP_ISO_LATIN_1","REP_MB","REP_UTF8","R_OK","SCNd16","SCNd32","SCNd64","SCNd8","SCNdFAST16","SCNdFAST32","SCNdFAST64","SCNdFAST8","SCNdLEAST16","SCNdLEAST32","SCNdLEAST64","SCNdLEAST8","SCNdMAX","SCNdPTR","SCNi16","SCNi32","SCNi64","SCNi8","SCNiFAST16","SCNiFAST32","SCNiFAST64","SCNiFAST8","SCNiLEAST16","SCNiLEAST32","SCNiLEAST64","SCNiLEAST8","SCNiMAX","SCNiPTR","SCNo16","SCNo32","SCNo64","SCNo8","SCNoFAST16","SCNoFAST32","SCNoFAST64","SCNoFAST8","SCNoLEAST16","SCNoLEAST32","SCNoLEAST64","SCNoLEAST8","SCNoMAX","SCNoPTR","SCNu16","SCNu32","SCNu64","SCNu8","SCNuFAST16","SCNuFAST32","SCNuFAST64","SCNuFAST8","SCNuLEAST16","SCNuLEAST32","SCNuLEAST64","SCNuLEAST8","SCNuMAX","SCNuPTR","SCNx16","SCNx32","SCNx64","SCNx8","SCNxFAST16","SCNxFAST32","SCNxFAST64","SCNxFAST8","SCNxLEAST16","SCNxLEAST32","SCNxLEAST64","SCNxLEAST8","SCNxMAX","SCNxPTR","SEEK_CUR","SEEK_END","SEEK_SET","SH_ALIAS","SH_ERRORS","SH_INPUT","SH_NOPAIR","SH_OUTPUT","SH_UNLOCKED","SIG_ATOMIC_MAX","SIG_ATOMIC_MIN","SIO_ADVLOCK","SIO_APPEND","SIO_BOM","SIO_BUFSIZE","SIO_CLOSE_FORCE","SIO_CLOSE_TRYLOCK","SIO_CLOSING","SIO_CMAGIC","SIO_FBUF","SIO_FEOF","SIO_FEOF2","SIO_FEOF2ERR","SIO_FERR","SIO_FILE","SIO_FLUSHOUTPUT","SIO_GETFILENO","SIO_GETPENDING","SIO_GETREPOSITION","SIO_GETSIZE","SIO_INPUT","SIO_ISATTY","SIO_LASTERROR","SIO_LBUF","SIO_LINESIZE","SIO_MAGIC","SIO_NBUF","SIO_NL_DETECT","SIO_NL_DOS","SIO_NL_POSIX","SIO_NOCLOSE","SIO_NOERROR","SIO_NOFEOF","SIO_NOLINENO","SIO_NOLINEPOS","SIO_NOMUTEX","SIO_OMAGIC","SIO_OUTPUT","SIO_RAW","SIO_RECORDPOS","SIO_REPPL","SIO_REPPLU","SIO_REPXML","SIO_RP_BLOCK","SIO_RP_NOPOS","SIO_SEEK_CUR","SIO_SEEK_END","SIO_SEEK_SET","SIO_SETENCODING","SIO_STATIC","SIO_TEXT","SIO_TIMEOUT","SIO_UPDATE","SIO_USERBUF","SIO_WARN","SIZE_MAX","SP_get_state","SP_set_state","STDERR_FILENO","STDIN_FILENO","STDOUT_FILENO","S__fillbuf","S__fupdatefilepos_getc","S__getiob","S__iob","Scanrepresent","ScheckBOM","Scleanup","Sclearerr","Sclose","Sclose_function","Sclosehook","Scontrol_function","Sdprintf","SdprintfX","Sfdopen","Sfeof","Sferror","Sfgetc","Sfgets","Sfilefunctions","Sfileno","Sflush","Sfpasteof","Sfprintf","SfprintfX","Sfputs","Sfread","Sfree","Sfwrite","Sgcclose","Sgetcode","Sgets","Sgetw","SinitStreams","Slinesize","Slock","Snew","Some","Some","Some","Some","Some","Some","Some","Some","Some","Some","Some","Some","Sopen_file","Sopen_iri_or_file","Sopen_pipe","Sopen_string","Sopenmem","Speekcode","Spending","Sprintf","Sputc","Sputcode","Sputs","Sputw","Sread_function","Sread_pending","Sreset","Sseek","Sseek64","Sseek64_function","Sseek_function","Sset_exception","Sset_filter","Sset_timeout","Ssetbuffer","Ssetenc","Sseterr","Ssetlocale","Ssize","Ssnprintf","SsnprintfX","Ssprintf","Stell","Stell64","StryLock","Sungetc","Sunit_size","Sunlock","Svdprintf","Svfprintf","Svprintf","Svsnprintf","Svsprintf","SwriteBOM","Swrite_function","TRUE","UINT16_MAX","UINT32_MAX","UINT8_MAX","UINTPTR_MAX","UINT_FAST16_MAX","UINT_FAST32_MAX","UINT_FAST8_MAX","UINT_LEAST16_MAX","UINT_LEAST32_MAX","UINT_LEAST8_MAX","WCONTINUED","WEOF","WEXITED","WINT_MAX","WINT_MIN","WNOHANG","WNOWAIT","WSTOPPED","WUNTRACED","W_OK","X_OK","_ALLOCA_H","_ATFILE_SOURCE","_BITS_BYTESWAP_H","_BITS_ENDIANNESS_H","_BITS_ENDIAN_H","_BITS_POSIX_OPT_H","_BITS_PTHREADTYPES_ARCH_H","_BITS_PTHREADTYPES_COMMON_H","_BITS_STDINT_INTN_H","_BITS_STDINT_UINTN_H","_BITS_TIME64_H","_BITS_TYPESIZES_H","_BITS_TYPES_H","_BITS_TYPES_LOCALE_T_H","_BITS_TYPES___LOCALE_T_H","_BITS_UINTN_IDENTITY_H","_BITS_WCHAR_H","_CS_GNU_LIBC_VERSION","_CS_GNU_LIBPTHREAD_VERSION","_CS_LFS64_CFLAGS","_CS_LFS64_LDFLAGS","_CS_LFS64_LIBS","_CS_LFS64_LINTFLAGS","_CS_LFS_CFLAGS","_CS_LFS_LDFLAGS","_CS_LFS_LIBS","_CS_LFS_LINTFLAGS","_CS_PATH","_CS_POSIX_V6_ILP32_OFF32_CFLAGS","_CS_POSIX_V6_ILP32_OFF32_LDFLAGS","_CS_POSIX_V6_ILP32_OFF32_LIBS","_CS_POSIX_V6_ILP32_OFF32_LINTFLAGS","_CS_POSIX_V6_ILP32_OFFBIG_CFLAGS","_CS_POSIX_V6_ILP32_OFFBIG_LDFLAGS","_CS_POSIX_V6_ILP32_OFFBIG_LIBS","_CS_POSIX_V6_ILP32_OFFBIG_LINTFLAGS","_CS_POSIX_V6_LP64_OFF64_CFLAGS","_CS_POSIX_V6_LP64_OFF64_LDFLAGS","_CS_POSIX_V6_LP64_OFF64_LIBS","_CS_POSIX_V6_LP64_OFF64_LINTFLAGS","_CS_POSIX_V6_LPBIG_OFFBIG_CFLAGS","_CS_POSIX_V6_LPBIG_OFFBIG_LDFLAGS","_CS_POSIX_V6_LPBIG_OFFBIG_LIBS","_CS_POSIX_V6_LPBIG_OFFBIG_LINTFLAGS","_CS_POSIX_V7_ILP32_OFF32_CFLAGS","_CS_POSIX_V7_ILP32_OFF32_LDFLAGS","_CS_POSIX_V7_ILP32_OFF32_LIBS","_CS_POSIX_V7_ILP32_OFF32_LINTFLAGS","_CS_POSIX_V7_ILP32_OFFBIG_CFLAGS","_CS_POSIX_V7_ILP32_OFFBIG_LDFLAGS","_CS_POSIX_V7_ILP32_OFFBIG_LIBS","_CS_POSIX_V7_ILP32_OFFBIG_LINTFLAGS","_CS_POSIX_V7_LP64_OFF64_CFLAGS","_CS_POSIX_V7_LP64_OFF64_LDFLAGS","_CS_POSIX_V7_LP64_OFF64_LIBS","_CS_POSIX_V7_LP64_OFF64_LINTFLAGS","_CS_POSIX_V7_LPBIG_OFFBIG_CFLAGS","_CS_POSIX_V7_LPBIG_OFFBIG_LDFLAGS","_CS_POSIX_V7_LPBIG_OFFBIG_LIBS","_CS_POSIX_V7_LPBIG_OFFBIG_LINTFLAGS","_CS_V5_WIDTH_RESTRICTED_ENVS","_CS_V6_ENV","_CS_V6_WIDTH_RESTRICTED_ENVS","_CS_V7_ENV","_CS_V7_WIDTH_RESTRICTED_ENVS","_CS_XBS5_ILP32_OFF32_CFLAGS","_CS_XBS5_ILP32_OFF32_LDFLAGS","_CS_XBS5_ILP32_OFF32_LIBS","_CS_XBS5_ILP32_OFF32_LINTFLAGS","_CS_XBS5_ILP32_OFFBIG_CFLAGS","_CS_XBS5_ILP32_OFFBIG_LDFLAGS","_CS_XBS5_ILP32_OFFBIG_LIBS","_CS_XBS5_ILP32_OFFBIG_LINTFLAGS","_CS_XBS5_LP64_OFF64_CFLAGS","_CS_XBS5_LP64_OFF64_LDFLAGS","_CS_XBS5_LP64_OFF64_LIBS","_CS_XBS5_LP64_OFF64_LINTFLAGS","_CS_XBS5_LPBIG_OFFBIG_CFLAGS","_CS_XBS5_LPBIG_OFFBIG_LDFLAGS","_CS_XBS5_LPBIG_OFFBIG_LIBS","_CS_XBS5_LPBIG_OFFBIG_LINTFLAGS","_DEFAULT_SOURCE","_ENDIAN_H","_Exit","_FEATURES_H","_Float32","_Float32x","_Float64","_Float64x","_GETOPT_CORE_H","_GETOPT_POSIX_H","_INTTYPES_H","_IO_FILE","_LFS64_ASYNCHRONOUS_IO","_LFS64_LARGEFILE","_LFS64_STDIO","_LFS_ASYNCHRONOUS_IO","_LFS_LARGEFILE","_PC_2_SYMLINKS","_PC_ALLOC_SIZE_MIN","_PC_ASYNC_IO","_PC_CHOWN_RESTRICTED","_PC_FILESIZEBITS","_PC_LINK_MAX","_PC_MAX_CANON","_PC_MAX_INPUT","_PC_NAME_MAX","_PC_NO_TRUNC","_PC_PATH_MAX","_PC_PIPE_BUF","_PC_PRIO_IO","_PC_REC_INCR_XFER_SIZE","_PC_REC_MAX_XFER_SIZE","_PC_REC_MIN_XFER_SIZE","_PC_REC_XFER_ALIGN","_PC_SOCK_MAXBUF","_PC_SYMLINK_MAX","_PC_SYNC_IO","_PC_VDISABLE","_PL_PREDICATE_INDICATOR","_PL_atoms","_PL_cons_small_int","_PL_get_arg","_PL_get_arg_sz","_PL_get_atomic","_PL_get_xpce_reference","_PL_opt_enum_t","_PL_opt_enum_t_OPT_ATOM","_PL_opt_enum_t_OPT_BOOL","_PL_opt_enum_t_OPT_DOUBLE","_PL_opt_enum_t_OPT_INT","_PL_opt_enum_t_OPT_INT64","_PL_opt_enum_t_OPT_LOCALE","_PL_opt_enum_t_OPT_SIZE","_PL_opt_enum_t_OPT_STRING","_PL_opt_enum_t_OPT_TERM","_PL_opt_enum_t_OPT_UINT64","_PL_opt_enum_t__OPT_END","_PL_put_atomic","_PL_put_xpce_reference_a","_PL_put_xpce_reference_i","_PL_retry","_PL_retry_address","_PL_streams","_PL_unify_atomic","_PL_unify_xpce_reference","_PL_unregister_keys","_PL_yield_address","_POSIX2_CHAR_TERM","_POSIX2_C_BIND","_POSIX2_C_DEV","_POSIX2_C_VERSION","_POSIX2_LOCALEDEF","_POSIX2_SW_DEV","_POSIX2_VERSION","_POSIX_ADVISORY_INFO","_POSIX_ASYNCHRONOUS_IO","_POSIX_ASYNC_IO","_POSIX_BARRIERS","_POSIX_CHOWN_RESTRICTED","_POSIX_CLOCK_SELECTION","_POSIX_CPUTIME","_POSIX_C_SOURCE","_POSIX_FSYNC","_POSIX_IPV6","_POSIX_JOB_CONTROL","_POSIX_MAPPED_FILES","_POSIX_MEMLOCK","_POSIX_MEMLOCK_RANGE","_POSIX_MEMORY_PROTECTION","_POSIX_MESSAGE_PASSING","_POSIX_MONOTONIC_CLOCK","_POSIX_NO_TRUNC","_POSIX_PRIORITIZED_IO","_POSIX_PRIORITY_SCHEDULING","_POSIX_RAW_SOCKETS","_POSIX_READER_WRITER_LOCKS","_POSIX_REALTIME_SIGNALS","_POSIX_REENTRANT_FUNCTIONS","_POSIX_REGEXP","_POSIX_SAVED_IDS","_POSIX_SEMAPHORES","_POSIX_SHARED_MEMORY_OBJECTS","_POSIX_SHELL","_POSIX_SOURCE","_POSIX_SPAWN","_POSIX_SPIN_LOCKS","_POSIX_SPORADIC_SERVER","_POSIX_SYNCHRONIZED_IO","_POSIX_THREADS","_POSIX_THREAD_ATTR_STACKADDR","_POSIX_THREAD_ATTR_STACKSIZE","_POSIX_THREAD_CPUTIME","_POSIX_THREAD_PRIORITY_SCHEDULING","_POSIX_THREAD_PRIO_INHERIT","_POSIX_THREAD_PRIO_PROTECT","_POSIX_THREAD_PROCESS_SHARED","_POSIX_THREAD_ROBUST_PRIO_INHERIT","_POSIX_THREAD_ROBUST_PRIO_PROTECT","_POSIX_THREAD_SAFE_FUNCTIONS","_POSIX_THREAD_SPORADIC_SERVER","_POSIX_TIMEOUTS","_POSIX_TIMERS","_POSIX_TRACE","_POSIX_TRACE_EVENT_FILTER","_POSIX_TRACE_INHERIT","_POSIX_TRACE_LOG","_POSIX_TYPED_MEMORY_OBJECTS","_POSIX_V6_LP64_OFF64","_POSIX_V6_LPBIG_OFFBIG","_POSIX_V7_LP64_OFF64","_POSIX_V7_LPBIG_OFFBIG","_POSIX_VDISABLE","_POSIX_VERSION","_SC_2_CHAR_TERM","_SC_2_C_BIND","_SC_2_C_DEV","_SC_2_C_VERSION","_SC_2_FORT_DEV","_SC_2_FORT_RUN","_SC_2_LOCALEDEF","_SC_2_PBS","_SC_2_PBS_ACCOUNTING","_SC_2_PBS_CHECKPOINT","_SC_2_PBS_LOCATE","_SC_2_PBS_MESSAGE","_SC_2_PBS_TRACK","_SC_2_SW_DEV","_SC_2_UPE","_SC_2_VERSION","_SC_ADVISORY_INFO","_SC_AIO_LISTIO_MAX","_SC_AIO_MAX","_SC_AIO_PRIO_DELTA_MAX","_SC_ARG_MAX","_SC_ASYNCHRONOUS_IO","_SC_ATEXIT_MAX","_SC_AVPHYS_PAGES","_SC_BARRIERS","_SC_BASE","_SC_BC_BASE_MAX","_SC_BC_DIM_MAX","_SC_BC_SCALE_MAX","_SC_BC_STRING_MAX","_SC_CHARCLASS_NAME_MAX","_SC_CHAR_BIT","_SC_CHAR_MAX","_SC_CHAR_MIN","_SC_CHILD_MAX","_SC_CLK_TCK","_SC_CLOCK_SELECTION","_SC_COLL_WEIGHTS_MAX","_SC_CPUTIME","_SC_C_LANG_SUPPORT","_SC_C_LANG_SUPPORT_R","_SC_DELAYTIMER_MAX","_SC_DEVICE_IO","_SC_DEVICE_SPECIFIC","_SC_DEVICE_SPECIFIC_R","_SC_EQUIV_CLASS_MAX","_SC_EXPR_NEST_MAX","_SC_FD_MGMT","_SC_FIFO","_SC_FILE_ATTRIBUTES","_SC_FILE_LOCKING","_SC_FILE_SYSTEM","_SC_FSYNC","_SC_GETGR_R_SIZE_MAX","_SC_GETPW_R_SIZE_MAX","_SC_HOST_NAME_MAX","_SC_INT_MAX","_SC_INT_MIN","_SC_IOV_MAX","_SC_IPV6","_SC_JOB_CONTROL","_SC_LEVEL1_DCACHE_ASSOC","_SC_LEVEL1_DCACHE_LINESIZE","_SC_LEVEL1_DCACHE_SIZE","_SC_LEVEL1_ICACHE_ASSOC","_SC_LEVEL1_ICACHE_LINESIZE","_SC_LEVEL1_ICACHE_SIZE","_SC_LEVEL2_CACHE_ASSOC","_SC_LEVEL2_CACHE_LINESIZE","_SC_LEVEL2_CACHE_SIZE","_SC_LEVEL3_CACHE_ASSOC","_SC_LEVEL3_CACHE_LINESIZE","_SC_LEVEL3_CACHE_SIZE","_SC_LEVEL4_CACHE_ASSOC","_SC_LEVEL4_CACHE_LINESIZE","_SC_LEVEL4_CACHE_SIZE","_SC_LINE_MAX","_SC_LOGIN_NAME_MAX","_SC_LONG_BIT","_SC_MAPPED_FILES","_SC_MB_LEN_MAX","_SC_MEMLOCK","_SC_MEMLOCK_RANGE","_SC_MEMORY_PROTECTION","_SC_MESSAGE_PASSING","_SC_MINSIGSTKSZ","_SC_MONOTONIC_CLOCK","_SC_MQ_OPEN_MAX","_SC_MQ_PRIO_MAX","_SC_MULTI_PROCESS","_SC_NETWORKING","_SC_NGROUPS_MAX","_SC_NL_ARGMAX","_SC_NL_LANGMAX","_SC_NL_MSGMAX","_SC_NL_NMAX","_SC_NL_SETMAX","_SC_NL_TEXTMAX","_SC_NPROCESSORS_CONF","_SC_NPROCESSORS_ONLN","_SC_NZERO","_SC_OPEN_MAX","_SC_PAGESIZE","_SC_PASS_MAX","_SC_PHYS_PAGES","_SC_PII","_SC_PII_INTERNET","_SC_PII_INTERNET_DGRAM","_SC_PII_INTERNET_STREAM","_SC_PII_OSI","_SC_PII_OSI_CLTS","_SC_PII_OSI_COTS","_SC_PII_OSI_M","_SC_PII_SOCKET","_SC_PII_XTI","_SC_PIPE","_SC_POLL","_SC_PRIORITIZED_IO","_SC_PRIORITY_SCHEDULING","_SC_RAW_SOCKETS","_SC_READER_WRITER_LOCKS","_SC_REALTIME_SIGNALS","_SC_REGEXP","_SC_REGEX_VERSION","_SC_RE_DUP_MAX","_SC_RTSIG_MAX","_SC_SAVED_IDS","_SC_SCHAR_MAX","_SC_SCHAR_MIN","_SC_SELECT","_SC_SEMAPHORES","_SC_SEM_NSEMS_MAX","_SC_SEM_VALUE_MAX","_SC_SHARED_MEMORY_OBJECTS","_SC_SHELL","_SC_SHRT_MAX","_SC_SHRT_MIN","_SC_SIGNALS","_SC_SIGQUEUE_MAX","_SC_SIGSTKSZ","_SC_SINGLE_PROCESS","_SC_SPAWN","_SC_SPIN_LOCKS","_SC_SPORADIC_SERVER","_SC_SSIZE_MAX","_SC_SS_REPL_MAX","_SC_STREAMS","_SC_STREAM_MAX","_SC_SYMLOOP_MAX","_SC_SYNCHRONIZED_IO","_SC_SYSTEM_DATABASE","_SC_SYSTEM_DATABASE_R","_SC_THREADS","_SC_THREAD_ATTR_STACKADDR","_SC_THREAD_ATTR_STACKSIZE","_SC_THREAD_CPUTIME","_SC_THREAD_DESTRUCTOR_ITERATIONS","_SC_THREAD_KEYS_MAX","_SC_THREAD_PRIORITY_SCHEDULING","_SC_THREAD_PRIO_INHERIT","_SC_THREAD_PRIO_PROTECT","_SC_THREAD_PROCESS_SHARED","_SC_THREAD_ROBUST_PRIO_INHERIT","_SC_THREAD_ROBUST_PRIO_PROTECT","_SC_THREAD_SAFE_FUNCTIONS","_SC_THREAD_SPORADIC_SERVER","_SC_THREAD_STACK_MIN","_SC_THREAD_THREADS_MAX","_SC_TIMEOUTS","_SC_TIMERS","_SC_TIMER_MAX","_SC_TRACE","_SC_TRACE_EVENT_FILTER","_SC_TRACE_EVENT_NAME_MAX","_SC_TRACE_INHERIT","_SC_TRACE_LOG","_SC_TRACE_NAME_MAX","_SC_TRACE_SYS_MAX","_SC_TRACE_USER_EVENT_MAX","_SC_TTY_NAME_MAX","_SC_TYPED_MEMORY_OBJECTS","_SC_TZNAME_MAX","_SC_T_IOV_MAX","_SC_UCHAR_MAX","_SC_UINT_MAX","_SC_UIO_MAXIOV","_SC_ULONG_MAX","_SC_USER_GROUPS","_SC_USER_GROUPS_R","_SC_USHRT_MAX","_SC_V6_ILP32_OFF32","_SC_V6_ILP32_OFFBIG","_SC_V6_LP64_OFF64","_SC_V6_LPBIG_OFFBIG","_SC_V7_ILP32_OFF32","_SC_V7_ILP32_OFFBIG","_SC_V7_LP64_OFF64","_SC_V7_LPBIG_OFFBIG","_SC_VERSION","_SC_WORD_BIT","_SC_XBS5_ILP32_OFF32","_SC_XBS5_ILP32_OFFBIG","_SC_XBS5_LP64_OFF64","_SC_XBS5_LPBIG_OFFBIG","_SC_XOPEN_CRYPT","_SC_XOPEN_ENH_I18N","_SC_XOPEN_LEGACY","_SC_XOPEN_REALTIME","_SC_XOPEN_REALTIME_THREADS","_SC_XOPEN_SHM","_SC_XOPEN_STREAMS","_SC_XOPEN_UNIX","_SC_XOPEN_VERSION","_SC_XOPEN_XCU_VERSION","_SC_XOPEN_XPG2","_SC_XOPEN_XPG3","_SC_XOPEN_XPG4","_STDC_PREDEF_H","_STDINT_H","_STDLIB_H","_STRUCT_TIMESPEC","_SYS_CDEFS_H","_SYS_SELECT_H","_SYS_TYPES_H","_THREAD_MUTEX_INTERNAL_H","_THREAD_SHARED_TYPES_H","_UNISTD_H","_WCHAR_H","_WINT_T","_XBS5_LP64_OFF64","_XBS5_LPBIG_OFFBIG","_XOPEN_ENH_I18N","_XOPEN_LEGACY","_XOPEN_REALTIME","_XOPEN_REALTIME_THREADS","_XOPEN_SHM","_XOPEN_UNIX","_XOPEN_VERSION","_XOPEN_XCU_VERSION","_XOPEN_XPG2","_XOPEN_XPG3","_XOPEN_XPG4","__BIG_ENDIAN","__BIT_TYPES_DEFINED__","__BYTE_ORDER","__BindgenBitfieldUnit","__FD_SETSIZE","__FILE","__FILE_defined","__FLOAT_WORD_ORDER","__GLIBC_MINOR__","__GLIBC_USE_DEPRECATED_GETS","__GLIBC_USE_DEPRECATED_SCANF","__GLIBC_USE_IEC_60559_BFP_EXT","__GLIBC_USE_IEC_60559_BFP_EXT_C2X","__GLIBC_USE_IEC_60559_EXT","__GLIBC_USE_IEC_60559_FUNCS_EXT","__GLIBC_USE_IEC_60559_FUNCS_EXT_C2X","__GLIBC_USE_IEC_60559_TYPES_EXT","__GLIBC_USE_ISOC2X","__GLIBC_USE_LIB_EXT2","__GLIBC__","__GNUC_VA_LIST","__GNU_LIBRARY__","__HAVE_DISTINCT_FLOAT128","__HAVE_DISTINCT_FLOAT128X","__HAVE_DISTINCT_FLOAT16","__HAVE_DISTINCT_FLOAT32","__HAVE_DISTINCT_FLOAT32X","__HAVE_DISTINCT_FLOAT64","__HAVE_DISTINCT_FLOAT64X","__HAVE_FLOAT128","__HAVE_FLOAT128X","__HAVE_FLOAT16","__HAVE_FLOAT32","__HAVE_FLOAT32X","__HAVE_FLOAT64","__HAVE_FLOAT64X","__HAVE_FLOAT64X_LONG_DOUBLE","__HAVE_FLOATN_NOT_TYPEDEF","__HAVE_GENERIC_SELECTION","__ILP32_OFF32_CFLAGS","__ILP32_OFF32_LDFLAGS","__ILP32_OFFBIG_CFLAGS","__ILP32_OFFBIG_LDFLAGS","__INO_T_MATCHES_INO64_T","__KERNEL_OLD_TIMEVAL_MATCHES_TIMEVAL64","__LDOUBLE_REDIRECTS_TO_FLOAT128_ABI","__LITTLE_ENDIAN","__LP64_OFF64_CFLAGS","__LP64_OFF64_LDFLAGS","__OFF_T_MATCHES_OFF64_T","__PDP_ENDIAN","__PL_PL_local_data","__PL_code","__PL_foreign_context","__PL_localFrame","__PL_module","__PL_procedure","__PL_queryFrame","__PL_queryRef","__PL_record","__PL_table","__PL_table_enum","__PL_word","__POSIX2_THIS_VERSION","__PRI64_PREFIX","__PRIPTR_PREFIX","__PTHREAD_MUTEX_HAVE_PREV","__RLIM_T_MATCHES_RLIM64_T","__SIZEOF_PTHREAD_ATTR_T","__SIZEOF_PTHREAD_BARRIERATTR_T","__SIZEOF_PTHREAD_BARRIER_T","__SIZEOF_PTHREAD_CONDATTR_T","__SIZEOF_PTHREAD_COND_T","__SIZEOF_PTHREAD_MUTEXATTR_T","__SIZEOF_PTHREAD_MUTEX_T","__SIZEOF_PTHREAD_RWLOCKATTR_T","__SIZEOF_PTHREAD_RWLOCK_T","__STATFS_MATCHES_STATFS64","__STDC_IEC_559_COMPLEX__","__STDC_IEC_559__","__STDC_IEC_60559_BFP__","__STDC_IEC_60559_COMPLEX__","__STDC_ISO_10646__","__SYSCALL_WORDSIZE","__TIMESIZE","__USE_ATFILE","__USE_FORTIFY_LEVEL","__USE_ISOC11","__USE_ISOC95","__USE_ISOC99","__USE_MISC","__USE_POSIX","__USE_POSIX199309","__USE_POSIX199506","__USE_POSIX2","__USE_POSIX_IMPLICITLY","__USE_XOPEN2K","__USE_XOPEN2K8","__WALL","__WCLONE","__WCOREFLAG","__WNOTHREAD","__WORDSIZE","__WORDSIZE_TIME64_COMPAT32","__W_CONTINUED","____FILE_defined","____gwchar_t_defined","____mbstate_t_defined","__a","__align","__align","__align","__align","__align","__align","__align","__align","__align","__atomic_wide_counter","__atomic_wide_counter__bindgen_ty_1","__bindgen_padding_0","__blkcnt64_t","__blkcnt_t","__blksize_t","__builtin_va_list","__c","__caddr_t","__clang_max_align_nonce1","__clang_max_align_nonce2","__clock_t","__clock_t_defined","__clockid_t","__clockid_t_defined","__compar_fn_t","__count","__count","__count","__ctype_b","__ctype_get_mb_cur_max","__ctype_tolower","__ctype_toupper","__cur_writer","__daddr_t","__data","__data","__data","__data","__dev_t","__elision","__environ","__fd_mask","__fds_bits","__flags","__fsblkcnt64_t","__fsblkcnt_t","__fsfilcnt64_t","__fsfilcnt_t","__fsid_t","__fsword_t","__g1_orig_size","__g1_start","__g_refs","__g_signals","__g_size","__getpgid","__gid_t","__glibc_c99_flexarr_available","__gnuc_va_list","__gwchar_t","__have_pthread_attr_t","__high","__id_t","__init","__ino64_t","__ino_t","__int16_t","__int32_t","__int64_t","__int8_t","__int_least16_t","__int_least32_t","__int_least64_t","__int_least8_t","__intmax_t","__intptr_t","__key_t","__kind","__ldiv_t_defined","__list","__lldiv_t_defined","__locale_data","__locale_struct","__locale_t","__locales","__lock","__loff_t","__low","__mbrlen","__mbstate_t","__mbstate_t__bindgen_ty_1","__mbstate_t_defined","__mode_t","__names","__next","__next","__next","__next","__nlink_t","__nusers","__off64_t","__off_t","__old_x","__once_flag","__owner","__pad1","__pad2","__pad3","__pad4","__pid_t","__prev","__prev","__pthread_cond_s","__pthread_internal_list","__pthread_internal_slist","__pthread_list_t","__pthread_mutex_s","__pthread_rwlock_arch_t","__pthread_slist_t","__quad_t","__readers","__rlim64_t","__rlim_t","__rwelision","__shared","__sig_atomic_t","__sigset_t","__sigset_t_defined","__size","__size","__size","__size","__size","__size","__size","__size","__size","__socklen_t","__spins","__ssize_t","__suseconds64_t","__suseconds_t","__syscall_slong_t","__syscall_ulong_t","__thrd_t","__time_t","__time_t_defined","__timer_t","__timer_t_defined","__timeval_defined","__tss_t","__u_char","__u_int","__u_long","__u_quad_t","__u_short","__uid_t","__uint16_t","__uint32_t","__uint64_t","__uint8_t","__uint_least16_t","__uint_least32_t","__uint_least64_t","__uint_least8_t","__uintmax_t","__useconds_t","__va_list_tag","__val","__val","__val","__val","__value","__value","__value32","__value64","__wch","__wchb","__wint_t_defined","__wrefs","__writers","__writers_futex","__wrphase_futex","__wseq","__x","_address","_address","_address","_address","_bindgen_ty_1","_bindgen_ty_2","_bindgen_ty_3","_bitfield_1","_bitfield_1","_bitfield_align_1","_bitfield_align_1","_exit","a","a","a64l","abort","abs","access","acct","acquire","activate","alarm","alias","aligned_alloc","alloca","arity","arity","at_quick_exit","atexit","atof","atoi","atol","atoll","atom_name","atom_t","blkcnt_t","blksize_t","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","brk","bsearch","btowc","buf_mark_t","buffer","buffer","bufp","bufp","bufsize","bufsize","byteno","byteno","caddr_t","calloc","cancel","charno","charno","chdir","chown","chroot","clearenv","clock_t","clockid_t","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","close","close","close","close_hook","close_hook","closefrom","closure","closure","cmp","compare","confstr","context","context","control","control","control_t","crypt","daddr_t","daemon","default","dev_t","div","div_t","downstream","downstream","drand48","drand48_data","drand48_r","dummy","dup","dup2","ecvt","ecvt_r","encoding","encoding","end_ptr","endusershell","eq","erand48","erand48_r","erased","exception","exception","execl","execle","execlp","execv","execve","execvp","exit","f","faccessat","fchdir","fchown","fchownat","fcvt","fcvt_r","fd_mask","fd_set","fdatasync","fexecve","fgetwc","fgetws","flags","flags","flags","flags","flags","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","foreign_t","fork","fp_offset","fpathconf","fptr","fputwc","fputws","fr","free","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","fsblkcnt_t","fsfilcnt_t","fsid_t","fsync","ftruncate","function","functions","functions","functor_t","fwide","fwprintf","fwscanf","fwscanf1","gcvt","get","get","get_bit","getcwd","getdomainname","getdtablesize","getegid","getentropy","getenv","geteuid","getgid","getgroups","gethostid","gethostname","getloadavg","getlogin","getlogin_r","getopt","getpagesize","getpass","getpgid","getpgrp","getpid","getppid","getsid","getsubopt","getuid","getusershell","getwc","getwchar","getwd","gid_t","gp_offset","handle","handle","hash","hash_table_enum_t","hash_table_t","i","i","id_t","imaxabs","imaxdiv","imaxdiv_t","initstate","initstate_r","ino_t","int_fast16_t","int_fast32_t","int_fast64_t","int_fast8_t","int_least16_t","int_least32_t","int_least64_t","int_least8_t","intmax_t","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","io_errno","io_errno","io_functions","io_position","io_stream","isatty","jrand48","jrand48_r","key_t","l64a","labs","lastc","lastc","lchown","lcong48","lcong48_r","ld","ldiv","ldiv_t","limitp","limitp","lineno","lineno","linepos","linepos","link","linkat","llabs","lldiv","lldiv_t","load","locale","locale","locale_t","lockf","locks","locks","loff_t","lrand48","lrand48_r","lseek","magic","magic","magic","magic","malloc","max_align_t","max_queue_size","mblen","mbrlen","mbrtowc","mbsinit","mbsnrtowcs","mbsrtowcs","mbstate","mbstate","mbstate_t","mbstowcs","mbtowc","message","message","mkdtemp","mkstemp","mkstemps","mktemp","mode_t","module_t","mrand48","mrand48_r","mutex","mutex","name","name","name","new","new_bitfield_1","newline","next","nice","nlink_t","nrand48","nrand48_r","off_t","on_exit","open_wmemstream","optarg","opterr","optind","optopt","overflow_arg_area","padding","partial_cmp","pathconf","pause","pc","pid_t","pipe","pl_context_t","pl_default_exception","pl_function_t","pl_sigaction","pl_sigaction_t","pl_wchar_t","posbuf","posbuf","position","position","posix_memalign","pread","predicate_name","predicate_t","profil","pselect","pthread_attr_t","pthread_barrier_t","pthread_barrierattr_t","pthread_cond_t","pthread_condattr_t","pthread_key_t","pthread_mutex_t","pthread_mutexattr_t","pthread_once_t","pthread_rwlock_t","pthread_rwlockattr_t","pthread_spinlock_t","pthread_t","putenv","putwc","putwchar","pwrite","qecvt","qecvt_r","qf","qfcvt","qfcvt_r","qgcvt","qid_t","qsort","quad_t","quick_exit","quot","quot","quot","quot","rand","rand_deg","rand_r","rand_sep","rand_type","random","random_data","random_r","rank","rc_cancel","rc_cancel_PL_THREAD_CANCEL_FAILED","rc_cancel_PL_THREAD_CANCEL_JOINED","rc_cancel_PL_THREAD_CANCEL_MUST_JOIN","read","read","read","readlink","readlinkat","realloc","reallocarray","realpath","record_t","recursiveMutex","references","references","reg_save_area","register_t","registered","release","release","rem","rem","rem","rem","reserved","reserved","reserved","reserved","reserved","reserved","reserved","reserved","reserved","revoke","rmdir","rpmatch","rptr","s","sa_cfunction","sa_cfunction","sa_flags","sa_flags","sa_predicate","sa_predicate","save","sbrk","seed48","seed48_r","seek","seek","seek64","seek64","select","set","set_bit","set_erased","set_newline","setdomainname","setegid","setenv","seteuid","setgid","sethostid","sethostname","setlogin","setpgid","setpgrp","setregid","setreuid","setsid","setstate","setstate_r","setuid","setusershell","sigset_t","sleep","socklen_t","srand","srand48","srand48_r","srandom","srandom_r","stack_limit","state","string","strtod","strtof","strtoimax","strtol","strtold","strtoll","strtoq","strtoul","strtoull","strtoumax","strtouq","suseconds_t","swprintf","swscanf","swscanf1","symlink","symlinkat","sync","syscall","sysconf","system","t","table_space","tcgetpgrp","tcsetpgrp","tee","tee","term_t","term_value_t","term_value_t__bindgen_ty_1","time_t","timeout","timeout","timer_t","timespec","timeval","tm","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","truncate","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","ttyname","ttyname_r","ttyslot","tv_nsec","tv_sec","tv_sec","tv_usec","type_","type_","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","u_char","u_int","u_int16_t","u_int32_t","u_int64_t","u_int8_t","u_long","u_quad_t","u_short","ualarm","uid_t","uint","uint_fast16_t","uint_fast32_t","uint_fast64_t","uint_fast8_t","uint_least16_t","uint_least32_t","uint_least64_t","uint_least8_t","uintmax_t","ulong","unbuffer","unbuffer","ungetwc","unify","unlink","unlinkat","unsetenv","upstream","upstream","useconds_t","ushort","usleep","va_list","valloc","value","vfork","vfwprintf","vfwscanf","vfwscanf1","vhangup","vswprintf","vswscanf","vswscanf1","vwprintf","vwscanf","vwscanf1","wchar_t","wcpcpy","wcpncpy","wcrtomb","wcscasecmp","wcscasecmp_l","wcscat","wcschr","wcscmp","wcscoll","wcscoll_l","wcscpy","wcscspn","wcsdup","wcsftime","wcslen","wcsncasecmp","wcsncasecmp_l","wcsncat","wcsncmp","wcsncpy","wcsnlen","wcsnrtombs","wcspbrk","wcsrchr","wcsrtombs","wcsspn","wcsstr","wcstod","wcstof","wcstoimax","wcstok","wcstol","wcstold","wcstoll","wcstombs","wcstoul","wcstoull","wcstoumax","wcsxfrm","wcsxfrm_l","wctob","wctomb","wint_t","wmemchr","wmemcmp","wmemcpy","wmemmove","wmemset","wprintf","write","write","write","write","wscanf","wscanf1","xpceref_t","xpceref_t__bindgen_ty_1","Functor","LazyFunctor","arity","as_functor","borrow","borrow","borrow_mut","borrow_mut","clone","clone_into","eq","fmt","from","from","functor_ptr","get","into","into","name","name","name_string","new","new","put","to_owned","try_from","try_from","try_into","try_into","type_id","type_id","unify","with_name","wrap","activate_main","assert_swipl_is_initialized","initialize_swipl","initialize_swipl_noengine","initialize_swipl_with_state","initialize_swipl_with_state_noengine","is_swipl_initialized","reactivate_swipl","register_foreign_in_module","Module","borrow","borrow_mut","clone","clone_into","eq","fmt","from","into","module_ptr","name","name_string","new","to_owned","try_from","try_into","type_id","with_name","wrap","Predicate","arity","borrow","borrow_mut","clone","clone_into","from","into","module","name","name_string","new","predicate_ptr","to_owned","try_from","try_into","type_id","with_name","wrap","arc_blob","atom","atom","atom","clone_blob","functor","functor","functor","pred","predicates","prolog","term","term","term","term_getable","term_putable","unifiable","wrapped_arc_blob","wrapped_clone_blob","Record","borrow","borrow_mut","clone","clone_into","drop","from","from_term","get","into","name","put","recorded","to_owned","try_from","try_into","type_id","unify","BoolPrologResult","Err","Err","Err","Err","Err","Exception","Exception","Failure","Failure","NonFailingPrologResult","Ok","Ok","Ok","Ok","Ok","OptPrologResult","PrologError","PrologException","PrologResult","PrologStringError","PrologStringResult","attempt","attempt_opt","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","eq","fail","fmt","fmt","fmt","from","from","from","from","into","into","into","into_prolog_result","is_exception","is_failure","result_to_string_result","to_string","try_from","try_from","try_from","try_into","try_into","try_into","type_id","type_id","type_id","unwrap_result","PrologStream","ReadablePrologStream","WritablePrologStream","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","drop","drop","flush","flush","from","from","from","get","get","into","into","into","name","name","new","new","read","try_from","try_from","try_from","try_into","try_into","try_into","type_id","type_id","type_id","wrap","write","write","Atom","Blob","CompoundTerm","Deserializer","Dict","Float","Integer","ListPair","Nil","Nil","Rational","Serializer","SerializerConfiguration","String","Term","TermGetable","TermPutable","TermType","Unifiable","Unknown","Variable","assert_term_handling_possible","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","clone","clone_into","cmp","de","eq","eq","fmt","fmt","from","from","from","get","get","get","get_arg","get_arg_ex","get_atom","get_atom_name","get_dict_key","get_dict_key_term","get_dict_tag","get_dict_tag_term","get_ex","get_str","into","into","into","is_atom","is_dict","is_integer","is_string","is_var","name","name","origin_engine_ptr","partial_cmp","put","put","put","put","put_val","record","reset","ser","term_ptr","term_type","to_owned","try_from","try_from","try_from","try_into","try_into","try_into","type_id","type_id","type_id","unify","unify","unify","unify","unify_arg","Deserializer","Err","Error","Message","Ok","PrologError","Result","UnexpectedType","UnificationFailed","UnsupportedValue","ValueNotOfExpectedType","ValueOutOfRange","borrow","borrow","borrow_mut","borrow_mut","custom","custom","deserialize_any","deserialize_bool","deserialize_byte_buf","deserialize_bytes","deserialize_char","deserialize_enum","deserialize_f32","deserialize_f64","deserialize_i16","deserialize_i32","deserialize_i64","deserialize_i8","deserialize_identifier","deserialize_ignored_any","deserialize_map","deserialize_newtype_struct","deserialize_option","deserialize_seq","deserialize_str","deserialize_string","deserialize_struct","deserialize_tuple","deserialize_tuple_struct","deserialize_u16","deserialize_u32","deserialize_u64","deserialize_u8","deserialize_unit","deserialize_unit_struct","fmt","fmt","from","from","from","from_term","into","into","new","to_string","try_from","try_from","try_into","try_into","type_id","type_id","SerializeMap","SerializeNamedTuple","SerializeSeq","SerializeTuple","Serializer","SerializerConfiguration","borrow","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","clone","clone_into","default","default_tag","end","end","end","end","end","end","end","fmt","from","from","from","from","from","from","into","into","into","into","into","into","new","new","new_with_config","serialize_bool","serialize_bytes","serialize_char","serialize_element","serialize_element","serialize_f32","serialize_f64","serialize_field","serialize_field","serialize_field","serialize_field","serialize_i16","serialize_i32","serialize_i64","serialize_i8","serialize_key","serialize_map","serialize_newtype_struct","serialize_newtype_variant","serialize_none","serialize_seq","serialize_some","serialize_str","serialize_struct","serialize_struct_variant","serialize_tuple","serialize_tuple_struct","serialize_tuple_variant","serialize_u16","serialize_u32","serialize_u64","serialize_u8","serialize_unit","serialize_unit_struct","serialize_unit_variant","serialize_value","set_default_tag","set_tag_struct_dicts","tag_struct_dicts","to_owned","to_term","to_term_with_config","try_from","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","type_id","type_id","PrologText","borrow","borrow_mut","clone","clone_into","cmp","deref","eq","from","get","into","into_inner","name","partial_cmp","to_owned","try_from","try_into","type_id"],"q":[[0,"swipl"],[31,"swipl::atom"],[106,"swipl::blob"],[140,"swipl::callable"],[197,"swipl::callable::PredicateWrapError"],[199,"swipl::consts"],[200,"swipl::context"],[319,"swipl::dict"],[369,"swipl::engine"],[399,"swipl::fli"],[3415,"swipl::functor"],[3449,"swipl::init"],[3458,"swipl::module"],[3477,"swipl::predicate"],[3496,"swipl::prelude"],[3515,"swipl::record"],[3533,"swipl::result"],[3590,"swipl::stream"],[3628,"swipl::term"],[3717,"swipl::term::de"],[3780,"swipl::term::ser"],[3885,"swipl::text"],[3903,"core::option"],[3904,"core::convert"],[3905,"core::result"],[3906,"serde::de"],[3907,"core::fmt"],[3908,"core::fmt"],[3909,"core::ops::function"],[3910,"core::hash"],[3911,"serde::ser"],[3912,"core::any"],[3913,"core::cmp"],[3914,"alloc::sync"],[3915,"core::marker"],[3916,"core::marker"],[3917,"core::marker"],[3918,"alloc::vec"],[3919,"serde::de"],[3920,"serde::ser"],[3921,"core::ffi"],[3922,"core::cmp"],[3923,"core::cmp"]],"d":["Define an arc blob.","Prolog atoms.","Create a static atom.","Blob support.","Support for calling into prolog or prolog-like code.","Define a clone blob.","Constants.","Prolog contexts.","Prolog dictionaries.","Prolog engines.","Re-export of the swipl-fli crate.","Prolog functors.","Create a static functor.","Prolog initialization logic.","Prolog modules.","Generate an inline callable predicate.","Prolog predicates.","Define foreign predicates written in rust for use in â€¦","Module which re-exports all public symbols in this crate, â€¦","Define prolog predicates to be used from rust code.","Records - prolog terms in heap storage.","Prolog results.","Prolog streams.","Prolog terms.","Generate a term from a rust expression.","Easily implement TermGetable.","Easily implement TermPutable.","Support for easy text extraction from prolog.","Easily implement Unifiable.","Define a wrapped arc blob.","Define a wrapped clone blob.","Trait for types which can be turned into an <code>Atom</code> from a â€¦","A wrapper for a prolog atom.","A type that allows easy conversion of strings from and to â€¦","Trait for types which can be turned into an <code>Atom</code>.","A struct which provides a way to delay and cache atom â€¦","","","Turn the borrowed object into an <code>Atom</code>.","","","","","Turn the borrowed object into an <code>atom_t</code>, and returns an â€¦","","","","","","Return the underlying <code>atom_t</code> which SWI-Prolog uses to â€¦","Wrapper for <code>Atomable::new</code>.","","","","","","","","","","","","","","Returns the argument unchanged.","","Returns the argument unchanged.","Returns the argument unchanged.","","","Get an atom out of a term.","Get an atomable out of a term.","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Turn this object into an <code>Atom</code>.","","","","","","Return the name.","","Retrieve the name of this atom, that is, the string with â€¦","Create a new Atomable out of a String or an &amp;str.","Create a new LazyAtom.","Create a new atom from the given string.","Convert this Atomable into a new Atomable which is â€¦","","","","","","","","","","","","","","","","","Wrap an <code>atom_t</code>, which is how the SWI-Prolog fli represents â€¦","A blob type whose data is shared with SWI-Prolog as an â€¦","Base type for ArcBlob.","Supertype of ArcBlob that allows implementation of <code>compare</code> â€¦","A blob type whose data is copied into SWI-Prolog and â€¦","Base type for CloneBlob.","Supertype of CloneBlob that allows implementation of â€¦","The type that the <code>WrappedArcBlob</code> is wrapping.","A blob type whose data is shared with SWI-Prolog as an â€¦","Base type for WrappedArcBlob.","Supertype of WrappedArcBlob that allows implementation of â€¦","Increment the reference count on an Arc stored in a blob.","Return the name of this blob","Return the name of this blob","","Compare two values, returning an Ordering.","Compare two values, returning an Ordering.","Compare two values, returning an Ordering.","Create a blob definition for use with the SWI-Prolog fli â€¦","Create this wrapper from an Arc.","return a borrow to the wrapped Arc.","Retrieve an arc from the given term, using the given blob â€¦","Return a blob definition for this ArcBlob.","Return a blob definition for this WrappedArcBlob.","Return a blob definition for this CloneBlob.","Retrieve a cloneable value from the given term, using the â€¦","Put an arc into the given term, using the given blob â€¦","Put a Cloneable into the given term, using the given blob â€¦","Decrement the reference count on an Arc stored in a blob.","Drop the rust value stored in a blob.","Unify the term with the given <code>Arc</code>, using the given blob â€¦","Unify the term with the given Cloneable, using the given â€¦","Write a description of this ArcBlob.","Write a description of this WrappedArcBlob.","Write a description of this ArcBlob.","Trait for things that can be called as if they are prolog â€¦","A prolog predicate which is ready to be called.","","Looks up a predicate on first call to <code>as_callable</code> and â€¦","An open call.","An open query.","Error type for turning a Predicate into a CallablePredicateâ€¦","","Return a <code>CallablePredicate</code> from the information in this â€¦","","","","","","","","","","","Cut the query, keeping all data it has created.","","Discard the query, discarding all data it has created.","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Create a new <code>LazyCallablepredicate</code> from a module, a name, â€¦","Wrap a Predicate.","Retrieve the next solution.","","","","","","","","","","","","","","","","","","","","Wrap a <code>predicate_t</code> from the SWI-Prolog fli, not checking â€¦","","","The maximum arity that prolog predicates are allowed to â€¦","Context type for an active engine. This wraps an â€¦","A context that the underlying prolog engine is in.","A type of context.","A term wrapper for the special exception term.","Context type for a prolog frame.","A trait marker for context types for which it is safe to â€¦","","","Trait for turning errors into prolog exceptions","A trait marker for context types for which it is safe to â€¦","An iterator over a term list.","Context type for an unmanaged engine.","Panics if this context is not active.","Panics if the engine is in an exceptional state.","","","","","","","","","","","","","","","Open a query, get a single result and cut.","","Clear the exception, so that the engine is no longer in an â€¦","Clear the current exception if there is any.","","","Close the frame.","Retrieve compound terms as a fixed size array.","Retrieve compound terms as a Vec.","Retrieve compound terms as a fixed size Vec.","","","Retrieve the current output stream.","Cut the query, keeping all data it has created.","","Deserialize a term into a rust value using serde.","Iterate over the entries in the dictionary referred to by â€¦","Discard the query, discarding all data it has created.","Discard the frame.","","","Returns the underlying engine pointer.","Returns the argument unchanged.","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns true if the underlying engine is in an exceptional â€¦","Retrieve one result, ignoring failures, and then cut.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","Turns this error into a prolog exception using the given â€¦","Create a new Term reference in the current context.","create an array of term references.","create a vec of term references.","","Retrieve the next solution.","Retrieve one result, and then cut.","Open a query.","Open a query for the given term using the <code>call/1</code> prolog â€¦","Open a new frame.","Open a query, optionally passing in a context module.","Call the given function, converting panics into prolog â€¦","Put the engine in an exceptional state.","Rewind the frame.","Serialize a value into a prolog term using serde.","Serialize a value into a prolog term using serde, â€¦","Turn the given string into a prolog term.","Turn the given string into a prolog term.","Retrieve a term list as a fixed-size array.","Iterate over a term list.","Retrieve a term list as a Vec.","","","","","","","","","","","","","","","","Turn a result into a <code>PrologResult</code>.","Turn a result into a <code>PrologResult</code>.","","","","","","","","Unify the term with the list functor, returning a term for â€¦","Create an unmanaged context for situations where the â€¦","Call the given function with a copy of the exception term, â€¦","Call the given function with the exception term, if it â€¦","Wrap the given term_t into a Term with a lifetime â€¦","","A builder for prolog dictionaries.","An iterator over the entries of a dict term.","","Trait for things that can behave as a key for the purpose â€¦","A key in a prolog dictionary.","Add an entry with the given key and value to the â€¦","add an entry with the given key to the dictionary. The â€¦","Returns the <code>atom_t</code> corresponding to this key, plus an â€¦","","","","","","","","","","Add an entry with the given key and value to the â€¦","add an entry with the given key to the dictionary. The â€¦","","","Returns the argument unchanged.","Returns the argument unchanged.","","","Returns the argument unchanged.","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","Create a new dictionary builder.","","","Set the dictionary tag to the given atom.","Set the dictionary tag to the given term.","Set the dictionary tag to the given atom.","Set the dictionary tag to the given term.","","","","","","","","","","","","A Prolog engine.","A prolog engine activation.","Activate this engine.","Panic if no engine is active on this thread.","","","","","Returns the current engine pointer.","","","","Returns the engine pointer of the engine associated with â€¦","","","Returns the argument unchanged.","Returns the argument unchanged.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Returns true if this engine is the engine currently active â€¦","Checks if the given engine pointer is the engine that is â€¦","Create a new prolog engine.","Returns true if some engine is currently active on this â€¦","","","","","","","Create a new prolog engine with a saved state. SWI-Prolog â€¦","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","No value.","No value.","No value.","No value.","No value.","No value.","No value.","No value.","No value.","No value.","No value.","No value.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","COMPARE\\t\\t*","","","","MODULES            *","","","","","","","","","QUINTUS/SICSTUS WRAPPER\\t*","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","DYNAMIC LINKING\\t*","","","","","","","","","","REGISTERING FOREIGNS     *","","","","","","","","","","","","","","","","","","","","","ERRORS\\t\\t*","","","","","","","","","","","TABLING            *","","","","","","","","WIDE INTEGERS\\t*","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","ATTRIBUTED VARIABLES\\t*","","","","","","","","","","","","","","","","LICENSE\\t\\t*","","","","","MEMORY ALLOCATION\\t*","","","","","","","","","","","","","","","","","","","","TERM-REFERENCES\\t*","","","","","","","","","","","","","PROFILER\\t\\t*","DEBUG\\t\\t*","","","","","","","","","","","","","","","","","","","","","","","","","","","","WIDE CHARACTER VERSIONS\\t*","","","","","","","","","","","","","","","","","RECORDED DATABASE\\t*","","","","","","","","","","","","","","","","","","","","","","","","","LISTS\\t\\tome value of type <code>T</code>.","Some value of type <code>T</code>.","Some value of type <code>T</code>.","Some value of type <code>T</code>.","Some value of type <code>T</code>.","Some value of type <code>T</code>.","Some value of type <code>T</code>.","Some value of type <code>T</code>.","Some value of type <code>T</code>.","Some value of type <code>T</code>.","Some value of type <code>T</code>.","Some value of type <code>T</codet\\t*","","","","INTERNAL FUNCTIONS\\t*","","OPTIONS\\t\\tt\\teturns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","HASH TABLES\\t\\t*","","","","","","","","","","","","","","","","","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","TRACE SUPPORT\\t*","Retrieve the default exceptiont*","","A wrapper for a prolog functor.","A struct which provides a way to delay and cache functor â€¦","Retrieve the arity of this functor.","Create a functor, or return an earlier created functor.","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Return the underlying <code>functor_t</code> which SWI-Prolog uses to â€¦","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","Retrieve the name of this functor as an atom.","Retrieve the name of this functor as a string.","Create a new LazyFunctor.","Create a new functor from the given name and arity.","","","","","","","","","","Retrieve the name of this functor as an atom and pass it â€¦","Wrap a <code>functor_t</code>, which is how the SWI-Prolog fli â€¦","Activate the main prolog engine, or panic if it has alread â€¦","Panic if SWI-Prolog has not been initialized.","Initialize SWI-Prolog.","Initialize SWI-Prolog and immediately deactivate the main â€¦","Initialize SWI-Prolog with a given saved state.","Initialize SWI-Prolog with a saved state and immediately â€¦","Check if SWI-Prolog has been initialized.","Reactivate the main engine.","Register a foreign predicate.","A wrapped fora  prolog module.","","","","","","","Returns the argument unchanged.","Calls <code>U::from(self)</code>.","Return the underlying <code>module_t</code> which SWI-Prolog uses to â€¦","Retrieve the name of this module as an atom.","Retrieve the name of this module as a string.","Create a new module from the given name.","","","","","Retrieve the name of this module as an atom and pass it â€¦","Wrap a <code>module_t</code>, which is how the SWI-Prolog fli â€¦","A wrapper for a prolog predicate.","Retrieve the arity of this predicate.","","","","","Returns the argument unchanged.","Calls <code>U::from(self)</code>.","Retrieve the module of this predicate.","Retrieve the name of this predicate as an atom.","Retrieve the name of this predicate as a string.","Create a new predicate from the given functor and module.","Return the underlying <code>predicate_t</code> which SWI-Prolog uses to â€¦","","","","","Retrieve the name of this predicate as an atom and pass it â€¦","Wrap a <code>predicate_t</code>, which is how the SWI-Prolog fli â€¦","Define an arc blob.","","Create a static atom.","Create a static atom.","Define a clone blob.","","Create a static functor.","Create a static functor.","Generate an inline callable predicate.","Define foreign predicates written in rust for use in â€¦","Define prolog predicates to be used from rust code.","","Generate a term from a rust expression.","Generate a term from a rust expression.","Easily implement TermGetable.","Easily implement TermPutable.","Easily implement Unifiable.","Define a wrapped arc blob.","Define a wrapped clone blob.","A recorded term.","","","","","","Returns the argument unchanged.","Extract a record from the given term.","","Calls <code>U::from(self)</code>.","","","Copy the recorded term into the given term reference.","","","","","","Result type for expressing failure as a boolean instead of â€¦","Contains the error value","Contains the error value","Contains the error value","Contains the error value","Contains the error value","","","","","Result type for operations that cannot fail, but can throw â€¦","Contains the success value","Contains the success value","Contains the success value","Contains the success value","Contains the success value","result type for expressing failure as an Option type â€¦","A prolog error.","Unit type for errors which can only be an exception.","The main result type that most interface functions return.","","","Transforms a <code>PrologResult&lt;()&gt;</code> into a BoolPrologResult, â€¦","Transforms a PrologResult into an OptPrologResult, â€¦","","","","","","","","Return a failure.","","","","Returns the argument unchanged.","Returns the argument unchanged.","","Returns the argument unchanged.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Turn a boolean into a prolog result.","Returns true if this error is an exception.","Returns true if this error is a failure.","","","","","","","","","","","","","A stream from prolog, used in blob writers.","A stream from prolog that can be read from.","A stream from prolog that can be directly written to.","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","Wrap a writable prolog stream.","Wrap a readable prolog stream.","","","","","","","","","","","Wrap the underlying fli object.","","","","","","","","","","","Unit struct representing an empty list in SWI-Prolog.","","","","","","A term reference.","Trait for getting data from a term reference.","Trait for putting data into a term reference.","Various types a term can be.","Trait for term unification.","","","Assert that the engine where this term was originally â€¦","","","","","","","","","","Deserialization of rust values from prolog terms.","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Get data from a term reference.","","Retrieve data from the term reference.","Retrieve data from the nth position of the given term. This","Retrieve data from the nth position of the given term. This","Retrieve an atom from this term, and call the given â€¦","Retrieve an atom from this term, and call the given â€¦","Get the value of the given key in the dictionary contained â€¦","Get the value of the given key in the dictionary contained â€¦","Get the tag of this dictionary.","Get the tag of this dictionary and put it in the given â€¦","Retrieve data from the term reference, or raise exception â€¦","Retrieve a &amp;str from this term, and call the given â€¦","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Returns true if this term reference holds an atom.","Returns true if this term reference holds a dictionary.","Returns true if this term reference holds an integer.","Returns true if this term reference holds a string.","Returns true if this term reference holds a variable.","Get the name of this data type for use in exception â€¦","","","","Put data into the term reference.","","Put data into the term reference using a borrow.","","Put data into the term reference using a copyable value.","Return a record of the term.","Reset terms created after this term, including this term â€¦","Serialization of rust values into prolog terms.","Return the underying <code>term_t</code> from the SWI-Prolog fli.","Returns the type of the value in this term.","","","","","","","","","","","Unify this data with the given term reference.","","Unify this term with some unifiable data.","","Unify the nth arg of the term with some unifiable data. â€¦","A serde deserializer for turning prolog terms into rust â€¦","Contains the error value","Error type for serialization/deserialization.","","Contains the success value","","Result type for deserialization.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","","Returns the argument unchanged.","Deserialize a term into a rust value using serde.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Create a new deserializer.","","","","","","","","","","","","A serde serializer for turning rust values into prolog â€¦","Configuration object for the serializer.","","","","","","","","","","","","","","","","Set the default tag to use for dictionaries.","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Create a new serializer with the default configuration.","Create a new SerializerConfiguration.","Create a new serializer with the given configuration.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Set the default tag to use for dictionaries.","Ensure that prolog dicts get tagged with the struct name â€¦","Ensure that prolog dicts get tagged with the struct name â€¦","","Serialize a value into a prolog term using serde.","Serialize a value into a prolog term using serde, â€¦","","","","","","","","","","","","","","","","","","","A wrapper around an owned string for which TermGetable has â€¦","","","","","","","","Returns the argument unchanged.","","Calls <code>U::from(self)</code>.","","","","","","",""],"i":[0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,3,3,1,3,4,2,2,1,4,2,2,4,3,2,0,3,4,2,3,4,2,2,2,2,2,2,2,3,3,3,4,2,3,2,0,0,2,3,4,2,21,3,3,2,2,3,3,2,2,3,4,2,3,3,2,2,2,2,3,4,2,3,4,2,3,4,2,3,2,2,0,0,0,0,0,0,32,0,0,0,0,194,32,195,24,196,26,0,32,32,0,197,198,199,0,0,0,0,0,0,0,24,196,26,0,0,48,0,0,0,0,45,40,40,44,45,41,40,44,45,41,41,41,42,44,42,44,44,45,45,40,44,45,41,40,44,45,41,40,41,42,44,48,40,40,41,41,45,40,44,45,41,40,44,45,41,40,44,45,41,41,200,200,0,0,0,0,0,0,0,0,0,0,0,0,0,43,43,54,43,65,77,56,68,55,54,43,65,77,56,68,55,43,43,54,43,55,55,43,43,43,43,43,66,43,43,54,43,43,43,43,43,56,43,54,43,43,65,77,56,68,55,43,43,54,43,65,77,56,68,55,43,68,67,43,43,43,68,43,43,43,43,43,43,0,43,43,43,43,43,43,43,43,43,55,54,43,65,77,56,68,55,54,43,65,77,56,68,55,43,43,54,43,65,77,56,68,55,43,0,43,43,43,80,0,0,80,0,0,79,79,82,79,62,80,79,62,80,80,80,79,79,79,80,80,79,62,80,80,80,80,79,62,80,62,79,62,79,79,79,79,79,80,79,62,80,79,62,80,79,62,80,79,0,0,84,0,84,64,84,64,0,84,84,64,64,84,64,84,64,84,64,84,0,84,84,84,64,84,64,84,64,84,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,201,202,203,204,205,206,207,208,209,210,211,212,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,201,202,203,204,205,206,207,208,209,210,211,212,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,152,142,143,144,145,146,147,148,149,150,0,0,123,0,0,0,0,152,0,123,123,0,0,0,0,0,213,116,138,121,0,121,121,139,0,141,145,146,147,0,138,0,0,133,139,0,0,0,0,0,0,140,140,140,140,140,0,0,0,0,0,0,135,0,152,0,0,0,0,0,0,0,0,0,0,0,0,0,138,0,138,0,0,0,0,121,138,0,135,0,0,0,0,0,121,214,215,136,137,0,138,0,0,152,0,138,139,139,139,139,0,214,136,0,0,0,0,0,0,0,0,139,0,0,139,139,0,0,0,142,143,144,145,146,147,148,149,150,0,138,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,216,217,118,130,213,116,134,134,119,119,0,140,139,139,139,140,152,155,112,156,157,0,0,0,178,86,178,86,0,106,154,0,0,0,0,0,29,108,0,95,0,0,153,107,0,0,0,0,0,0,29,0,0,0,117,118,116,119,120,121,122,123,124,125,111,126,86,127,128,129,130,131,132,133,134,135,136,137,138,139,140,141,142,143,144,145,146,147,148,149,150,151,152,91,93,103,94,104,96,106,153,107,29,109,110,95,87,90,108,115,154,102,113,155,112,156,157,117,118,116,119,120,121,122,123,124,125,111,126,86,127,128,129,130,131,132,133,134,135,136,137,138,139,140,141,142,143,144,145,146,147,148,149,150,151,152,91,93,103,94,104,96,106,153,107,29,109,110,95,87,90,108,115,154,102,113,155,112,156,157,0,0,0,0,178,86,178,86,178,86,218,126,0,0,95,218,126,0,0,0,0,0,0,117,118,116,119,120,121,122,123,124,125,111,126,86,127,128,129,130,131,132,133,134,135,136,137,138,139,140,141,142,143,144,145,146,147,148,149,150,151,152,91,93,103,94,104,96,106,153,107,29,109,110,95,87,90,108,115,154,102,113,155,112,156,157,117,118,116,119,120,121,122,123,124,125,111,126,86,127,128,129,130,131,132,133,134,135,136,137,138,139,140,141,142,143,144,145,146,147,148,149,150,151,152,91,93,103,94,104,96,106,153,107,29,109,110,95,87,90,108,115,154,102,113,155,112,156,157,0,219,111,178,86,0,178,86,117,29,0,178,86,219,111,0,0,0,0,117,0,0,0,178,86,0,0,0,108,0,0,0,0,178,86,151,0,117,0,0,86,178,86,0,0,0,0,0,0,0,106,0,0,0,0,0,0,0,0,0,0,0,0,178,86,107,29,95,117,118,120,121,122,123,124,125,111,126,86,127,128,129,130,131,132,133,135,136,137,138,139,141,151,152,91,93,103,94,104,96,153,107,29,109,110,95,87,90,108,102,113,155,112,156,157,0,0,113,0,151,0,0,102,0,117,118,116,119,120,121,122,123,124,125,111,126,86,127,128,129,130,131,132,133,134,135,136,137,138,139,140,141,142,143,144,145,146,147,148,149,150,151,152,91,93,103,94,104,96,106,153,107,29,109,110,95,87,90,108,115,154,102,113,155,112,156,157,0,0,0,0,0,107,178,86,0,0,0,0,0,0,117,108,117,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,113,178,86,117,0,0,106,154,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,117,118,116,119,120,121,122,123,124,125,111,126,86,127,128,129,130,131,132,133,134,135,136,137,138,139,140,141,142,143,144,145,146,147,148,149,150,151,152,91,93,103,94,104,96,106,153,107,29,109,110,95,87,90,108,115,154,102,113,155,112,156,157,178,86,0,0,0,0,0,0,0,0,0,178,86,0,0,0,102,0,0,178,86,218,126,218,126,0,0,0,0,0,29,178,86,0,0,178,86,0,0,0,0,178,86,29,108,0,0,95,0,0,0,0,0,0,178,86,0,0,0,178,86,0,0,0,0,0,0,0,0,178,86,153,29,109,117,86,86,29,0,0,0,0,0,0,0,0,0,0,0,113,29,117,0,0,102,0,0,0,0,0,0,0,0,178,86,178,86,0,0,107,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,102,0,0,0,0,0,0,0,124,127,128,129,0,151,0,151,151,0,0,0,29,0,0,0,0,0,219,111,0,0,0,0,0,0,0,178,86,113,0,29,29,108,124,127,128,129,218,178,220,126,86,29,110,95,102,0,0,0,151,106,220,110,220,110,220,110,29,0,0,0,219,111,219,111,0,117,117,86,86,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,95,151,109,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,106,95,0,0,178,86,0,0,0,0,178,86,0,0,0,0,117,118,116,119,120,121,122,123,124,125,111,126,86,127,128,129,130,131,132,133,134,135,136,137,138,139,140,141,142,143,144,145,146,147,148,149,150,151,152,91,93,103,94,104,96,106,153,107,29,109,110,95,87,90,108,115,154,102,113,155,112,156,157,0,117,118,116,119,120,121,122,123,124,125,111,126,86,127,128,129,130,131,132,133,134,135,136,137,138,139,140,141,142,143,144,145,146,147,148,149,150,151,152,91,93,103,94,104,96,106,153,107,29,109,110,95,87,90,108,115,154,102,113,155,112,156,157,117,118,116,119,120,121,122,123,124,125,111,126,86,127,128,129,130,131,132,133,134,135,136,137,138,139,140,141,142,143,144,145,146,147,148,149,150,151,152,91,93,103,94,104,96,106,153,107,29,109,110,95,87,90,108,115,154,102,113,155,112,156,157,0,0,0,132,131,132,131,109,115,117,118,116,119,120,121,122,123,124,125,111,126,86,127,128,129,130,131,132,133,134,135,136,137,138,139,140,141,142,143,144,145,146,147,148,149,150,151,152,91,93,103,94,104,96,106,153,107,29,109,110,95,87,90,108,115,154,102,113,155,112,156,157,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,178,86,0,108,0,0,0,178,86,0,0,0,0,0,115,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,219,111,29,0,0,0,0,0,0,168,169,169,168,169,168,168,168,168,168,169,168,168,168,169,168,168,168,168,169,168,168,168,169,168,169,168,169,168,168,168,168,0,0,0,0,0,0,0,0,0,0,49,49,49,49,49,49,49,49,49,49,49,49,49,49,49,49,49,49,0,46,46,46,46,46,46,46,46,46,46,46,46,46,46,46,46,46,46,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,172,172,172,172,172,172,172,172,172,172,172,172,172,172,172,172,172,0,17,182,173,174,176,221,76,221,76,0,17,182,173,174,176,0,0,0,0,0,0,0,0,221,76,175,221,76,175,76,0,76,76,175,221,76,76,175,221,76,175,0,76,76,0,76,221,76,175,221,76,175,221,76,175,0,0,0,0,38,59,177,38,59,177,59,177,38,59,38,59,177,59,177,38,59,177,59,177,59,177,177,38,59,177,38,59,177,38,59,177,38,38,59,179,179,179,0,179,179,179,179,0,179,179,0,0,179,0,0,0,0,0,179,179,16,181,16,179,181,16,179,16,16,16,0,16,179,16,179,181,16,179,180,181,16,16,16,16,16,16,16,16,16,16,16,181,16,179,16,16,16,16,16,180,181,16,16,81,181,16,16,16,16,16,0,16,16,16,181,16,179,181,16,179,181,16,179,183,181,16,16,16,0,60,0,72,60,72,0,72,72,72,72,72,185,72,185,72,72,72,185,185,185,185,185,185,185,185,185,185,185,185,185,185,185,185,185,185,185,185,185,185,185,185,185,185,185,185,185,72,72,185,72,72,0,185,72,185,72,185,72,185,72,185,72,0,0,0,0,0,0,191,187,188,189,190,74,191,187,188,189,190,74,74,74,74,74,187,188,189,189,190,190,190,74,191,187,188,189,190,74,191,187,188,189,190,74,191,74,191,191,191,191,187,188,191,191,189,189,190,190,191,191,191,191,190,191,191,191,191,191,191,191,191,191,191,191,191,191,191,191,191,191,191,191,190,74,74,74,74,0,0,191,187,188,189,190,74,191,187,188,189,190,74,191,187,188,189,190,74,0,193,193,193,193,193,193,193,193,193,193,193,193,193,193,193,193,193],"f":[0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[1,2],[3,2],[4,2],[2,2],[2,2],[1,[[7,[5,[6,[2]]]]]],[4,[[7,[5,[6,[2]]]]]],[2,[[7,[5,[6,[2]]]]]],[2,[[7,[5,[6,[2]]]]]],[4,5],[3,8],[2,5],[-1,3,[[9,[3]]]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[2,2],[[-1,-2],7,[],[]],[-1,[[10,[2]]],11],[2,7],[[2,2],12],[[2,13],14],[8,3],[-1,-1,[]],[15,3],[-1,-1,[]],[-1,-1,[]],[16,[[6,[3]]]],[16,[[6,[2]]]],[[16,-2],[[17,[-1]]],[],[[19,[[6,[2]]],[[18,[-1]]]]]],[[16,-2],[[17,[-1]]],[],[[19,[[6,[3]]],[[18,[-1]]]]]],[[2,-1],7,20],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[21,2],[3,2],[3,2],[2,2],[2,2],[[],8],[3,8],[[],8],[2,15],[-1,3,[[9,[3]]]],[8,4],[8,2],[3,3],[[3,16],7],[[2,16],7],[[2,-1],10,22],[-1,-2,[],[]],[2,15],[-1,[[10,[-2]]],[],[]],[-1,[[10,[-2]]],[],[]],[-1,[[10,[-2]]],[],[]],[-1,[[10,[-2]]],[],[]],[-1,[[10,[-2]]],[],[]],[-1,[[10,[-2]]],[],[]],[-1,23,[]],[-1,23,[]],[-1,23,[]],[[3,16],12],[[2,16],12],[5,2],0,0,0,0,0,0,0,0,0,0,[5,7],[[],8],[[],8],[[],8],[[24,24],25],[[-1,-1],25,[]],[[26,26],25],[[[28,[27]],12,12,12,6,6,6,6,6,6],29],[[[30,[-1]]],[[32,[],[[31,[-1]]]]],[33,34,35]],[[[32,[],[[31,[-1]]]]],[[30,[-1]]],[33,34,35]],[[16,29],[[6,[[30,[-1]]]]],[]],[[],29],[[],29],[[],29],[[16,29],[[6,[-1]]],[36,37,35]],[[16,29,[30,[-1]]],7,[]],[[16,29,-1],7,[36,37,35]],[5,7],[5,7],[[16,29,[30,[-1]]],12,[]],[[16,29,-1],12,[36,37,35]],[[24,38],[[39,[7]]]],[[-1,38],[[39,[7]]],[]],[[26,38],[[39,[7]]]],0,0,0,0,0,0,0,0,[40,41],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[41,41],[[-1,-2],7,[],[]],[[[43,[42]]],7],[[[43,[44]]],7],[[[43,[42]]],7],[[[43,[44]]],7],[44,7],[[45,13],14],[[45,13],14],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[[[6,[8]],8],40],[46,[[10,[41,45]]]],[[[43,[42]]],[[17,[12]]]],[[[43,[44]]],[[17,[12]]]],[[[48,[],[[47,[-1]]]],[43,[-2]],[6,[49]],[50,[16]]],[[43,[-1]]],42,51],[[40,[43,[-1]],[6,[49]],[50,[16]]],[[43,[44]]],51],[[40,[43,[-1]],[6,[49]],[50,[16]]],[[43,[44]]],51],[[41,[43,[-1]],[6,[49]],[50,[16]]],[[43,[-2]]],51,[]],[-1,-2,[],[]],[-1,15,[]],[-1,[[10,[-2]]],[],[]],[-1,[[10,[-2]]],[],[]],[-1,[[10,[-2]]],[],[]],[-1,[[10,[-2]]],[],[]],[-1,[[10,[-2]]],[],[]],[-1,[[10,[-2]]],[],[]],[-1,[[10,[-2]]],[],[]],[-1,[[10,[-2]]],[],[]],[-1,23,[]],[-1,23,[]],[-1,23,[]],[-1,23,[]],[52,41],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[[[43,[-1]]],7,51],[[[43,[-1]]],7,51],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[[[43,[-1]],-2,[50,[16]]],[[17,[7]]],53,48],[[[43,[-1]],16],[[17,[7]]],53],[54,7],[[[43,[-1]]],7,51],[55,55],[[-1,-2],7,[],[]],[[[43,[56]]],7],[[[43,[-1]],16],[[17,[[50,[16]]]]],53],[[[43,[-1]],16],[[17,[[57,[16]]]]],53],[[[43,[-1]],16,58],[[17,[[57,[16]]]]],53],0,0,[[[43,[-1]]],59,51],[[[43,[-1]]],7,42],[54,16],[[[43,[-1]],16],[[60,[-2]]],53,61],[[[43,[-1]],16],[[62,[-1]]],53],[[[43,[-1]]],7,42],[[[43,[56]]],7],[[[43,[-1]]],7,51],[56,7],[[[43,[-1]]],63,51],[-1,-1,[]],[64,[[43,[65]]]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[[[43,[-1]]],12,51],[[[43,[-1]]],[[17,[7]]],42],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[[[43,[-1]]],66,53],[-1,-2,[],[]],[[67,[43,[-1]]],[[17,[16]]],53],[[[43,[-1]]],16,53],[[[43,[-1]]],[[50,[16]]],53],[[[43,[-1]],58],[[57,[16]]],53],[[[68,[-1]]],[[6,[16]]],53],[[[43,[-1]]],[[17,[12]]],42],[[[43,[-1]]],[[17,[7]]],42],[[[43,[-1]],-2,[50,[16]]],43,53,48],[[[43,[-1]],16],[[43,[[0,[42]]]]],53],[[[43,[-1]]],[[43,[56]]],69],[[[43,[-1]],-2,[6,[49]],[50,[16]]],43,53,48],[-2,[[17,[-1]]],[],[[70,[],[[18,[-1]]]],71]],[[[43,[-1]],16],[[17,[-2]]],51,[]],[[[43,[56]]],[[43,[56]]]],[[[43,[-1]],16,-2],[[10,[7,72]]],53,73],[[[43,[-1]],16,-2,74],[[10,[7,72]]],53,73],[[[43,[-1]],16],[[17,[15]]],53],[[[43,[-1]],8],[[17,[16]]],53],[[[43,[-1]],16],[[50,[16]]],53],[[[43,[-1]],16],[[68,[-1]]],53],[[[43,[-1]],16],[[57,[16]]],53],[-1,-2,[],[]],[-1,[[10,[-2]]],[],[]],[-1,[[10,[-2]]],[],[]],[-1,[[10,[-2]]],[],[]],[-1,[[10,[-2]]],[],[]],[-1,[[10,[-2]]],[],[]],[-1,[[10,[-2]]],[],[]],[-1,[[10,[-2]]],[],[]],[-1,[[10,[-2]]],[],[]],[-1,[[10,[-2]]],[],[]],[-1,[[10,[-2]]],[],[]],[-1,[[10,[-2]]],[],[]],[-1,[[10,[-2]]],[],[]],[-1,[[10,[-2]]],[],[]],[-1,[[10,[-2]]],[],[]],[[[43,[-1]],[10,[-2,-3]]],[[17,[-2]]],53,[],67],[[[43,[-1]],[10,[-2,-3]]],[[17,[-2]]],53,[],75],[-1,23,[]],[-1,23,[]],[-1,23,[]],[-1,23,[]],[-1,23,[]],[-1,23,[]],[-1,23,[]],[[[43,[-1]],16],[[10,[[7,[16,16]],76]]],53],[[],[[43,[77]]]],[[[43,[-1]],-3],-2,51,[],[[70,[[6,[16]]],[[18,[-2]]]]]],[[[43,[-1]],-3],-2,51,[],[[70,[[6,[54]]],[[18,[-2]]]]]],[[[43,[-1]],78],16,51],0,0,0,0,0,0,[[79,-1,-2],7,[[9,[80]]],81],[[79,-1],7,[[9,[80]]]],[82,[[7,[5,[6,[2]]]]]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[80,80],[[-1,-2],7,[],[]],[[],79],[[79,-1,-2],79,[[9,[80]]],81],[[79,-1],79,[[9,[80]]]],[[80,80],12],[[80,13],14],[-1,-1,[]],[-1,-1,[]],[83,80],[-1,80,21],[-1,-1,[]],[[80,-1],7,20],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[[],79],[[[62,[-1]]],[[6,[-2]]],53,[]],[[79,16],7],[[79,-1],7,21],[[79,16],7],[[79,-1],79,21],[[79,16],79],[-1,-2,[],[]],[-1,[[10,[-2]]],[],[]],[-1,[[10,[-2]]],[],[]],[-1,[[10,[-2]]],[],[]],[-1,[[10,[-2]]],[],[]],[-1,[[10,[-2]]],[],[]],[-1,[[10,[-2]]],[],[]],[-1,23,[]],[-1,23,[]],[-1,23,[]],[[79,16],12],0,0,[84,64],[[],7],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[[],63],[[],84],[84,7],[64,7],[64,63],[[84,13],14],[[64,13],14],[-1,-1,[]],[-1,-1,[]],[-1,-2,[],[]],[-1,-2,[],[]],[84,12],[63,12],[[],84],[[],12],[-1,[[10,[-2]]],[],[]],[-1,[[10,[-2]]],[],[]],[-1,[[10,[-2]]],[],[]],[-1,[[10,[-2]]],[],[]],[-1,23,[]],[-1,23,[]],[[[28,[27]]],84],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[6,7],0,[6,85],[86,86],[85,85],[[87,88,88,85],88],[[89,58],7],[[90,88,88],85],[6,6],0,[[58,91,85],85],[58,89],[[89,85],89],[[85,85,58,85],85],[[58,58,89,92],85],[[58,58],89],[[58,58],85],0,[[85,85],7],[[85,85],89],[[58,58,29],88],0,[[58,91],85],[[91,85,93,58],85],[[],85],[[],7],[[89,58],85],[58,85],[[],85],[85,85],[[],7],[[],7],[87,85],[58,7],[94,85],[[58,58],85],[[58,58],85],[[58,58,58],85],[[58,58,58],85],[[],91],[58,58],[95,96],[[58,85,88],85],[[],94],[94,85],[[],85],[[58,88],85],[[58,58],85],[[58,85],85],[[58,89],85],[[58,89],85],[[58,97],85],[[58,85],85],[[58,85],85],[[58,98],85],[[58,98],85],[[58,98],85],[[58,89],85],[[58,99],85],[[58,100],85],[[58,58],85],[[58,89],85],[[58,27],85],[[58,92],85],[[58,92],85],[[58,83],85],[[58,83],85],[[58,83],85],[[58,101],85],[[88,58],85],[[58,58],85],[[89,58],85],[[97,58],85],[[98,58],85],[[100,58],85],[[89,58],85],[85,85],[[89,58],89],[[87,88],88],[[102,89,58],85],[96,85],[58,7],[[85,85],85],[6,6],0,[88,85],[[],89],[[89,85],88],[[88,89],88],[[89,58],85],[103,103],0,[103,7],[89,85],[94,58],[[89,58],85],[[6,88],7],0,0,[89,7],0,[89,29],[[58,6,88,85],85],[104,105],[104,88],[104,93],[104,85],[88,7],[58,85],[87,85],[90,7],[58,85],[58,58],[58,58],[[85,58,58],85],[[58,58,58],85],[[58,58],85],[[58,89],85],[[58,58],85],[[58,58,89],85],[[58,58],85],[[58,88,58,29],85],[[58,85],85],[[58,85],85],[[58,85,85],85],[[58,89,92],85],[[58,58,85],85],[[58,58,58],85],[[102,85],85],[58,85],[[58,58,58],85],[[58,89,85],85],[[58,85,85],85],[[58,97],85],[[58,97],85],[[58,58],85],[[58,58],85],[[58,98],85],[[58,98],85],[[58,85],85],[[58,85],85],[[58,105],85],[[58,105],85],[[58,58,58],85],[[58,89,92],85],[[58,58,58],85],[[58,58,89,92],85],[[58,98],85],[[58,98],85],[[58,91],85],[[58,58,85],85],[[58,58,58],85],[[58,58,89,92],85],[58,85],[58,85],[[58,88],85],[[58,88],85],[[58,85],85],[[58,58],85],[[58,86,85],85],[[58,86,85],85],[[58,86],85],[[58,89,58],85],[[58,58],85],[[58,106],85],[[85,58],85],[[58,85],85],[[58,83],85],[[58,83],85],[[58,58,85,92],85],[85,85],[[],85],[[85,89],85],[6,7],0,[58,85],[85,7],[58,85],[58,85],[58,85],[58,85],[[58,29],85],[58,85],[58,85],[58,85],[58,85],[[58,58],85],[58,85],[[85,89],85],[58,85],[58,85],[58,85],[58,85],[58,85],[58,85],[58,85],[[89,89],7],[88,85],[107,7],0,[[87,88],88],[58,88],[58,88],[58,88],[58,88],[58,88],[58,88],[58,7],[91,58],[89,58],[[85,58,89],58],[[58,89],58],[[58,85],58],[[88,58,29],58],[[58,85],58],[[58,58],58],[[85,6],87],[87,90],[58,91],[[],58],[[],58],[58,58],[94,85],[[6,88],7],[[],58],[[91,85,93,58],94],[[91,89,89,89],86],0,[[89,89,58],85],[[58,91],93],[[89,85,89],93],[[93,58,58,91],85],[[88,108],88],[88,7],0,[89,85],[89,85],[85,7],[85,89],[[58,58],85],[[58,89],85],[[58,58,89],85],[[58,88,58,29],85],[[58,85],85],[[58,85,58,89],85],[[58,58,58,58,58],85],[[58,97],85],[[58,58],85],[[58,98],85],[[58,98],85],[58,85],[[58,89],85],[[58,89],85],[[58,58,89],85],[[58,58,89],85],[58,85],[[58,88],85],[[58,89],85],[[58,58,89],85],[[58,58],85],[[58,85,58,89],85],[[58,83],85],[58,85],[[58,85,58,85],85],[[86,58],85],[[86,97],85],[[86,85],85],[[86,98],85],[[86,92],85],[[58,86],85],[[97,86],85],[[85,86],85],[[98,86],85],[[92,86],85],[85,105],[94,96],[[85,89],89],[85,85],[58,85],[[88,58],88],[58,103],[[58,58],89],[[103,58],85],[[89,58],85],[58,7],[29,7],[107,7],[[89,107],7],[[89,85,6,85],85],[[89,89,85,6,85],85],[108,85],[86,85],[86,85],[58,7],[89,85],[58,7],[89,85],[58,7],[[58,58],85],[[58,85,89,109],85],[[96,96],85],[[89,85],85],[[27,58],85],[[85,110,110],85],[[85,6],6],[[58,58,58],85],[102,85],[[58,91,58],85],[[89,86],85],[58,85],[[6,88,85],85],[95,85],0,[[],85],[[85,85],85],[[],85],[58,85],[[],85],[86,85],[[89,58],85],[[58,58],85],[[85,58,58],85],[[58,58,58],85],[[58,58],85],[[58,89],85],[[58,58,89],85],[[58,88,58,29],85],[[58,85],85],[[58,85],85],[[58,85,58,89],85],[[58,58],85],[[58,97],85],[[58,58],85],[[58,98],85],[[58,105],85],[[58,58,58],85],[[58,89],85],[[58,89],85],[[58,58,58],85],[[58,58,89],85],[[58,58,89],85],[58,85],[58,85],[[58,88],85],[[58,86],85],[[58,89],85],[[58,58,89],85],[58,85],[[58,85],85],[[58,83],85],[[58,85,58,85],85],[[58,58,85,58,85],85],[58,85],[58,7],[29,85],[[89,58],58],[85,92],[89,85],[89,85],[[85,58],85],[[85,85],85],[85,7],[[86,58,85,85],85],[94,58],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[[],85],[85,7],0,0,0,[86,85],[[86,85],85],[[],86],0,[[85,86],85],[86,85],[[],7],[86,7],[86,85],0,[6,85],0,[89,85],[89,85],[[85,89],86],[86,85],[86,85],[86,85],[[89,85,86],89],0,[86,85],[86,85],[86,85],[[86,89],85],[[86,89],85],[[89,86],85],[[88,58,58,86],58],[88,7],[[88,58,58,86],58],[[86,85],85],[86,85],[89,89],[86,85],[[],7],0,[86,85],[[88,85,111],86],0,0,0,0,0,0,0,0,0,0,0,0,[[89,89],86],[[89,89],86],[[89,89],86],[[86,89,58,89],86],[[89,58,89],86],[86,85],[86,58],[89,85],[[85,86],85],[[85,86],85],[89,85],[[85,86],85],0,[[86,89,58,85],105],[[],7],[[86,98,85],85],[[86,98,85],85],0,0,[[86,58],85],[[86,86],85],[[86,85],85],[[86,89,58],7],[[86,92,92],85],[[86,85,89],85],[[86,112,112],85],[86,98],[[89,58,89],85],[[89,58,89],85],[[89,89],85],[86,98],[86,98],[86,85],[[85,86],85],[86,85],[86,85],[[89,113],85],[[86,89,113],85],[[89,113],85],[[89,58,89,113],85],[[89,89,113],85],[86,85],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[85,114],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[[],58],[98,58],[[85,58,58],85],[[58,58,58],85],[58,58],[[58,115],85],0,0,0,0,0,0,0,0,0,0,0,0,[[58,58],7],[[58,58],85],[[58,58],85],[105,58],[88,58],[[],86],[[58,58],85],[[58,115],85],[[58,58],7],[88,58],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[[],58],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[85,85],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[[89,58,116],58],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[85,114],0,0,[89,98],[[],114],[85,85],[[89,85],85],[89,85],0,0,[92,92],0,[[83,83],88],[83,88],0,0,[6,85],[6,85],[89,97],[89,85],[89,98],[89,98],0,0,0,0,[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[88,85],[[88,88,58,58,6],88],[85,92],0,0,0,0,0,0,0,0,0,0,[[83,83],88],0,0,0,[89,85],[[89,92,92],85],[89,85],[[],85],0,0,[[[117,[-1]]],[[117,[-1]]],36],[118,118],[116,116],[119,119],[120,120],[121,121],[122,122],[123,123],[124,124],[125,125],[111,111],[126,126],[86,86],[127,127],[128,128],[129,129],[130,130],[131,131],[132,132],[133,133],[134,134],[135,135],[136,136],[137,137],[138,138],[139,139],[140,140],[141,141],[142,142],[143,143],[144,144],[145,145],[146,146],[147,147],[148,148],[149,149],[150,150],[151,151],[152,152],[91,91],[93,93],[103,103],[94,94],[104,104],[96,96],[106,106],[153,153],[107,107],[29,29],[109,109],[110,110],[95,95],[87,87],[90,90],[108,108],[115,115],[154,154],[102,102],[113,113],[155,155],[112,112],[156,156],[157,157],[[-1,-2],7,[],[]],[[-1,-2],7,[],[]],[[-1,-2],7,[],[]],[[-1,-2],7,[],[]],[[-1,-2],7,[],[]],[[-1,-2],7,[],[]],[[-1,-2],7,[],[]],[[-1,-2],7,[],[]],[[-1,-2],7,[],[]],[[-1,-2],7,[],[]],[[-1,-2],7,[],[]],[[-1,-2],7,[],[]],[[-1,-2],7,[],[]],[[-1,-2],7,[],[]],[[-1,-2],7,[],[]],[[-1,-2],7,[],[]],[[-1,-2],7,[],[]],[[-1,-2],7,[],[]],[[-1,-2],7,[],[]],[[-1,-2],7,[],[]],[[-1,-2],7,[],[]],[[-1,-2],7,[],[]],[[-1,-2],7,[],[]],[[-1,-2],7,[],[]],[[-1,-2],7,[],[]],[[-1,-2],7,[],[]],[[-1,-2],7,[],[]],[[-1,-2],7,[],[]],[[-1,-2],7,[],[]],[[-1,-2],7,[],[]],[[-1,-2],7,[],[]],[[-1,-2],7,[],[]],[[-1,-2],7,[],[]],[[-1,-2],7,[],[]],[[-1,-2],7,[],[]],[[-1,-2],7,[],[]],[[-1,-2],7,[],[]],[[-1,-2],7,[],[]],[[-1,-2],7,[],[]],[[-1,-2],7,[],[]],[[-1,-2],7,[],[]],[[-1,-2],7,[],[]],[[-1,-2],7,[],[]],[[-1,-2],7,[],[]],[[-1,-2],7,[],[]],[[-1,-2],7,[],[]],[[-1,-2],7,[],[]],[[-1,-2],7,[],[]],[[-1,-2],7,[],[]],[[-1,-2],7,[],[]],[[-1,-2],7,[],[]],[[-1,-2],7,[],[]],[[-1,-2],7,[],[]],[[-1,-2],7,[],[]],[[-1,-2],7,[],[]],[[-1,-2],7,[],[]],[[-1,-2],7,[],[]],[[-1,-2],7,[],[]],[[-1,-2],7,[],[]],[[-1,-2],7,[],[]],[[-1,-2],7,[],[]],[[-1,-2],7,[],[]],[[-1,-2],7,[],[]],[85,85],0,0,0,0,[85,7],0,0,[[[117,[-1]],[117,[-1]]],25,158],0,[[85,89,58],58],0,0,0,0,0,[[89,89],89],0,[[85,85],85],[[],[[117,[-1]]],159],0,[[85,85],127],0,0,0,[[],97],0,[[152,97],85],0,[85,85],[[85,85],85],[[97,85,85,85],89],[[97,85,85,85,89,58],85],0,0,0,[[],7],[[[117,[-1]],[117,[-1]]],12,160],[101,97],[[101,152,97],85],[86,92],0,0,[[89,89],85],[[89,89],85],[[89,89],85],[[89,89],85],[[89,89,89],85],[[89,89],85],[85,114],0,[[85,89,85,85],85],[85,85],[[85,92,92],85],[[85,89,92,92,85],85],[[97,85,85,85],89],[[97,85,85,85,89,58],85],0,0,[85,85],[[85,89,89],85],[120,92],[[85,85,120],85],0,0,0,0,0,[[[117,[-1]],13],[[10,[7,161]]],162],[[118,13],[[10,[7,161]]]],[[120,13],[[10,[7,161]]]],[[121,13],[[10,[7,161]]]],[[122,13],[[10,[7,161]]]],[[123,13],[[10,[7,161]]]],[[124,13],[[10,[7,161]]]],[[125,13],[[10,[7,161]]]],[[111,13],[[10,[7,161]]]],[[126,13],[[10,[7,161]]]],[[86,13],[[10,[7,161]]]],[[127,13],[[10,[7,161]]]],[[128,13],[[10,[7,161]]]],[[129,13],[[10,[7,161]]]],[[130,13],[[10,[7,161]]]],[[131,13],[[10,[7,161]]]],[[132,13],[[10,[7,161]]]],[[133,13],[[10,[7,161]]]],[[135,13],[[10,[7,161]]]],[[136,13],[[10,[7,161]]]],[[137,13],[[10,[7,161]]]],[[138,13],[[10,[7,161]]]],[[139,13],[[10,[7,161]]]],[[141,13],[[10,[7,161]]]],[[151,13],[[10,[7,161]]]],[[152,13],[[10,[7,161]]]],[[91,13],[[10,[7,161]]]],[[93,13],[[10,[7,161]]]],[[103,13],[[10,[7,161]]]],[[94,13],[[10,[7,161]]]],[[104,13],[[10,[7,161]]]],[[96,13],[[10,[7,161]]]],[[153,13],[[10,[7,161]]]],[[107,13],[[10,[7,161]]]],[[29,13],[[10,[7,161]]]],[[109,13],[[10,[7,161]]]],[[110,13],[[10,[7,161]]]],[[95,13],[[10,[7,161]]]],[[87,13],[[10,[7,161]]]],[[90,13],[[10,[7,161]]]],[[108,13],[[10,[7,161]]]],[[102,13],[[10,[7,161]]]],[[113,13],[[10,[7,161]]]],[[155,13],[[10,[7,161]]]],[[112,13],[[10,[7,161]]]],[[156,13],[[10,[7,161]]]],[[157,13],[[10,[7,161]]]],0,[[],85],0,[[85,85],98],0,[[85,120],92],[[85,120],85],0,[88,7],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],0,0,0,[85,85],[[85,98],85],0,0,0,0,[[120,85],85],[[120,85],85],[[120,85],85],[[120,85],85],[[97,85,89],89],[[[117,[-1]],58,27],83,[[163,[[28,[27]]]],[164,[[28,[27]]]]]],0,[[[117,[-1]],58],12,[[163,[[28,[27]]]],[164,[[28,[27]]]]]],[[89,58],89],[[89,58],85],[[],85],[[],92],[[88,58],85],[89,89],[[],92],[[],92],[[85,92],85],[[],98],[[89,58],85],[[97,85],85],[[],89],[[89,58],85],[[85,89,89],85],[[],85],[89,89],[85,85],[[],85],[[],85],[[],85],[85,85],[[89,89,89],85],[[],92],[[],89],[120,92],[[],92],[89,89],0,0,0,0,[[[117,[-1]],-2],7,165,20],0,0,0,0,0,[98,98],[[98,98],124],0,[[92,89,58],89],[[92,89,58,151],85],0,0,0,0,0,0,0,0,0,0,[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],0,0,0,0,0,[85,85],[101,98],[[101,152,98],85],0,[98,89],[98,98],0,0,[[89,92,92],85],[101,7],[[101,152],85],0,[[98,98],128],0,0,0,0,0,0,0,[[89,89],85],[[85,89,85,89,85],85],[98,98],[[98,98],129],0,0,0,0,0,[[85,85,98],85],0,0,0,[[],98],[[152,98],85],[[85,98,85],98],0,0,0,0,[83,88],0,0,[[89,58],85],[[89,58,116],58],[[85,89,58,116],58],[116,85],[[85,89,58,58,116],58],[[85,89,58,116],58],0,0,0,[[85,89,58],58],[[85,89,58],85],0,0,[89,89],[89,85],[[89,85],85],[89,89],0,0,[[],98],[[152,98],85],0,0,0,0,0,[-1,[[117,[-1]]],[]],[[92,92],[[117,[[50,[27]]]]]],[86,92],0,[85,85],0,[101,98],[[101,152,98],85],0,[[6,88],85],[[85,58],120],0,0,0,0,0,0,[[[117,[-1]],[117,[-1]]],[[6,[25]]],166],[[89,85],98],[[],85],0,0,[85,85],0,[[],78],0,0,0,0,0,0,0,0,[[88,58,58],85],[[85,88,58,98],105],0,0,[[101,58,58,92],85],[[85,133,133,133,132,130],85],0,0,0,0,0,0,0,0,0,0,0,0,0,[89,85],[[85,120],92],[85,92],[[85,88,58,98],105],[[167,85,85,85],89],[[167,85,85,85,89,58],85],0,[[167,85,85,85],89],[[167,85,85,85,89,58],85],[[167,85,89],89],0,[[88,58,58,6],7],0,[85,114],0,0,0,0,[[],85],0,[92,85],0,0,[[],98],0,[[151,85],85],0,0,0,0,0,[[85,88,58],105],0,0,[[89,89,58],105],[[85,89,89,58],105],[[88,83],88],[[88,58,58],88],[[89,89],89],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[89,85],[89,85],[89,85],0,0,0,0,0,0,0,0,0,[105,88],[101,101],[[101,152],85],0,0,0,0,[[85,133,133,133,131],85],[[[117,[-1]],58,27,83],7,[[163,[[28,[27]]]],[164,[[28,[27]]]]]],[[[117,[-1]],58,12],7,[[163,[[28,[27]]]],[164,[[28,[27]]]]]],[[86,92],7],[[86,92],7],[[89,58],85],[92,85],[[89,89,85],85],[92,85],[92,85],[98,85],[[89,58],85],[89,85],[[85,85],85],[[],85],[[92,92],85],[[92,92],85],[[],85],[89,89],[[89,151],85],[92,85],[[],7],0,[92,92],0,[92,7],[98,7],[[98,152],85],[92,7],[[92,151],85],0,0,0,[[89,89],97],[[89,89],100],[[89,89,85],98],[[89,89,85],98],[[89,89],167],[[89,89,85],98],[[89,89,85],98],[[89,89,85],83],[[89,89,85],83],[[89,89,85],83],[[89,89,85],83],0,[[85,58,85],85],[[85,85],85],[[85,85],85],[[89,89],85],[[89,85,89],85],[[],7],[98,98],[85,98],[89,85],0,0,[85,85],[[85,85],85],0,0,0,0,0,0,0,0,0,0,0,0,[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[[89,98],85],[-1,[[10,[-2]]],[],[]],[-1,[[10,[-2]]],[],[]],[-1,[[10,[-2]]],[],[]],[-1,[[10,[-2]]],[],[]],[-1,[[10,[-2]]],[],[]],[-1,[[10,[-2]]],[],[]],[-1,[[10,[-2]]],[],[]],[-1,[[10,[-2]]],[],[]],[-1,[[10,[-2]]],[],[]],[-1,[[10,[-2]]],[],[]],[-1,[[10,[-2]]],[],[]],[-1,[[10,[-2]]],[],[]],[-1,[[10,[-2]]],[],[]],[-1,[[10,[-2]]],[],[]],[-1,[[10,[-2]]],[],[]],[-1,[[10,[-2]]],[],[]],[-1,[[10,[-2]]],[],[]],[-1,[[10,[-2]]],[],[]],[-1,[[10,[-2]]],[],[]],[-1,[[10,[-2]]],[],[]],[-1,[[10,[-2]]],[],[]],[-1,[[10,[-2]]],[],[]],[-1,[[10,[-2]]],[],[]],[-1,[[10,[-2]]],[],[]],[-1,[[10,[-2]]],[],[]],[-1,[[10,[-2]]],[],[]],[-1,[[10,[-2]]],[],[]],[-1,[[10,[-2]]],[],[]],[-1,[[10,[-2]]],[],[]],[-1,[[10,[-2]]],[],[]],[-1,[[10,[-2]]],[],[]],[-1,[[10,[-2]]],[],[]],[-1,[[10,[-2]]],[],[]],[-1,[[10,[-2]]],[],[]],[-1,[[10,[-2]]],[],[]],[-1,[[10,[-2]]],[],[]],[-1,[[10,[-2]]],[],[]],[-1,[[10,[-2]]],[],[]],[-1,[[10,[-2]]],[],[]],[-1,[[10,[-2]]],[],[]],[-1,[[10,[-2]]],[],[]],[-1,[[10,[-2]]],[],[]],[-1,[[10,[-2]]],[],[]],[-1,[[10,[-2]]],[],[]],[-1,[[10,[-2]]],[],[]],[-1,[[10,[-2]]],[],[]],[-1,[[10,[-2]]],[],[]],[-1,[[10,[-2]]],[],[]],[-1,[[10,[-2]]],[],[]],[-1,[[10,[-2]]],[],[]],[-1,[[10,[-2]]],[],[]],[-1,[[10,[-2]]],[],[]],[-1,[[10,[-2]]],[],[]],[-1,[[10,[-2]]],[],[]],[-1,[[10,[-2]]],[],[]],[-1,[[10,[-2]]],[],[]],[-1,[[10,[-2]]],[],[]],[-1,[[10,[-2]]],[],[]],[-1,[[10,[-2]]],[],[]],[-1,[[10,[-2]]],[],[]],[-1,[[10,[-2]]],[],[]],[-1,[[10,[-2]]],[],[]],[-1,[[10,[-2]]],[],[]],[-1,[[10,[-2]]],[],[]],[-1,[[10,[-2]]],[],[]],[-1,[[10,[-2]]],[],[]],[-1,[[10,[-2]]],[],[]],[-1,[[10,[-2]]],[],[]],[-1,[[10,[-2]]],[],[]],[-1,[[10,[-2]]],[],[]],[-1,[[10,[-2]]],[],[]],[-1,[[10,[-2]]],[],[]],[-1,[[10,[-2]]],[],[]],[-1,[[10,[-2]]],[],[]],[-1,[[10,[-2]]],[],[]],[-1,[[10,[-2]]],[],[]],[-1,[[10,[-2]]],[],[]],[-1,[[10,[-2]]],[],[]],[-1,[[10,[-2]]],[],[]],[-1,[[10,[-2]]],[],[]],[-1,[[10,[-2]]],[],[]],[-1,[[10,[-2]]],[],[]],[-1,[[10,[-2]]],[],[]],[-1,[[10,[-2]]],[],[]],[-1,[[10,[-2]]],[],[]],[-1,[[10,[-2]]],[],[]],[-1,[[10,[-2]]],[],[]],[-1,[[10,[-2]]],[],[]],[-1,[[10,[-2]]],[],[]],[-1,[[10,[-2]]],[],[]],[-1,[[10,[-2]]],[],[]],[-1,[[10,[-2]]],[],[]],[-1,[[10,[-2]]],[],[]],[-1,[[10,[-2]]],[],[]],[-1,[[10,[-2]]],[],[]],[-1,[[10,[-2]]],[],[]],[-1,[[10,[-2]]],[],[]],[-1,[[10,[-2]]],[],[]],[-1,[[10,[-2]]],[],[]],[-1,[[10,[-2]]],[],[]],[-1,[[10,[-2]]],[],[]],[-1,[[10,[-2]]],[],[]],[-1,[[10,[-2]]],[],[]],[-1,[[10,[-2]]],[],[]],[-1,[[10,[-2]]],[],[]],[-1,[[10,[-2]]],[],[]],[-1,[[10,[-2]]],[],[]],[-1,[[10,[-2]]],[],[]],[-1,[[10,[-2]]],[],[]],[-1,[[10,[-2]]],[],[]],[-1,[[10,[-2]]],[],[]],[-1,[[10,[-2]]],[],[]],[-1,[[10,[-2]]],[],[]],[-1,[[10,[-2]]],[],[]],[-1,[[10,[-2]]],[],[]],[-1,[[10,[-2]]],[],[]],[-1,[[10,[-2]]],[],[]],[-1,[[10,[-2]]],[],[]],[-1,[[10,[-2]]],[],[]],[-1,[[10,[-2]]],[],[]],[-1,[[10,[-2]]],[],[]],[-1,[[10,[-2]]],[],[]],[-1,[[10,[-2]]],[],[]],[-1,[[10,[-2]]],[],[]],[-1,[[10,[-2]]],[],[]],[-1,[[10,[-2]]],[],[]],[85,89],[[85,89,58],85],[[],85],0,0,0,0,0,0,[-1,23,[]],[-1,23,[]],[-1,23,[]],[-1,23,[]],[-1,23,[]],[-1,23,[]],[-1,23,[]],[-1,23,[]],[-1,23,[]],[-1,23,[]],[-1,23,[]],[-1,23,[]],[-1,23,[]],[-1,23,[]],[-1,23,[]],[-1,23,[]],[-1,23,[]],[-1,23,[]],[-1,23,[]],[-1,23,[]],[-1,23,[]],[-1,23,[]],[-1,23,[]],[-1,23,[]],[-1,23,[]],[-1,23,[]],[-1,23,[]],[-1,23,[]],[-1,23,[]],[-1,23,[]],[-1,23,[]],[-1,23,[]],[-1,23,[]],[-1,23,[]],[-1,23,[]],[-1,23,[]],[-1,23,[]],[-1,23,[]],[-1,23,[]],[-1,23,[]],[-1,23,[]],[-1,23,[]],[-1,23,[]],[-1,23,[]],[-1,23,[]],[-1,23,[]],[-1,23,[]],[-1,23,[]],[-1,23,[]],[-1,23,[]],[-1,23,[]],[-1,23,[]],[-1,23,[]],[-1,23,[]],[-1,23,[]],[-1,23,[]],[-1,23,[]],[-1,23,[]],[-1,23,[]],[-1,23,[]],[-1,23,[]],[-1,23,[]],[-1,23,[]],0,0,0,0,0,0,0,0,0,[[92,92],92],0,0,0,0,0,0,0,0,0,0,0,0,0,0,[[92,120],92],0,[89,85],[[85,89,85],85],[89,85],0,0,0,0,[92,85],0,[58,88],0,[[],85],[[120,85,113],85],[[120,85,113],85],[[120,85,113],85],[[],85],[[85,58,85,113],85],[[85,85,113],85],[[85,85,113],85],[[85,113],85],[[85,113],85],[[85,113],85],0,[[85,85],85],[[85,85,58],85],[[89,85,116],58],[[85,85],85],[[85,85,121],85],[[85,85],85],[[85,85],85],[[85,85],85],[[85,85],85],[[85,85,121],85],[[85,85],85],[[85,85],58],[85,85],[[85,58,85,122],58],[85,83],[[85,85,58],85],[[85,85,58,121],85],[[85,85,58],85],[[85,85,83],85],[[85,85,58],85],[[85,58],58],[[89,85,58,58,116],58],[[85,85],85],[[85,85],85],[[89,85,58,116],58],[[85,85],58],[[85,85],85],[[85,85],97],[[85,85],100],[[85,85,85],98],[[85,85,85],85],[[85,85,85],98],[[85,85],167],[[85,85,85],98],[[89,85,58],58],[[85,85,85],83],[[85,85,85],83],[[85,85,85],83],[[85,85,58],58],[[85,85,58,121],58],[92,85],[[89,85],85],0,[[85,85,83],85],[[85,85,83],85],[[85,85,83],85],[[85,85,83],85],[[85,85,58],85],[85,85],[[85,88,58],105],0,0,0,[85,85],[85,85],0,0,0,0,[168,101],[169,168],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[168,168],[[-1,-2],7,[],[]],[[168,168],12],[[168,13],14],[-1,-1,[]],[-1,-1,[]],[168,170],[16,[[6,[168]]]],[-1,-2,[],[]],[-1,-2,[],[]],[[],8],[168,2],[168,15],[[8,101],169],[[-1,101],168,21],[[168,16],7],[-1,-2,[],[]],[-1,[[10,[-2]]],[],[]],[-1,[[10,[-2]]],[],[]],[-1,[[10,[-2]]],[],[]],[-1,[[10,[-2]]],[],[]],[-1,23,[]],[-1,23,[]],[[168,16],12],[[168,-2],-1,[],[[19,[2],[[18,[-1]]]]]],[170,168],[[],64],[[],7],[[],[[6,[64]]]],[[],7],[[[28,[27]]],[[6,[64]]]],[[[28,[27]]],7],[[],12],[[],64],[[[6,[8]],8,101,12,[6,[8]]],12],0,[-1,-2,[],[]],[-1,-2,[],[]],[49,49],[[-1,-2],7,[],[]],[[49,49],12],[[49,13],14],[-1,-1,[]],[-1,-2,[],[]],[49,171],[49,2],[49,15],[-1,49,21],[-1,-2,[],[]],[-1,[[10,[-2]]],[],[]],[-1,[[10,[-2]]],[],[]],[-1,23,[]],[[49,-2],-1,[],[[19,[2],[[18,[-1]]]]]],[171,49],0,[46,101],[-1,-2,[],[]],[-1,-2,[],[]],[46,46],[[-1,-2],7,[],[]],[-1,-1,[]],[-1,-2,[],[]],[46,49],[46,2],[46,15],[[168,49],46],[46,52],[-1,-2,[],[]],[-1,[[10,[-2]]],[],[]],[-1,[[10,[-2]]],[],[]],[-1,23,[]],[[46,-2],-1,[],[[19,[2],[[18,[-1]]]]]],[52,46],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[-1,-2,[],[]],[-1,-2,[],[]],[172,172],[[-1,-2],7,[],[]],[172,7],[-1,-1,[]],[16,172],[16,[[6,[172]]]],[-1,-2,[],[]],[[],8],[[172,16],7],[[172,16],[[17,[7]]]],[-1,-2,[],[]],[-1,[[10,[-2]]],[],[]],[-1,[[10,[-2]]],[],[]],[-1,23,[]],[[172,16],12],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[[[17,[7]]],173],[[[17,[-1]]],[[174,[-1]]],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[[76,76],12],[[],[[17,[7]]]],[[76,13],14],[[76,13],14],[[175,13],14],[-1,-1,[]],[-1,-1,[]],[175,76],[-1,-1,[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[12,[[17,[7]]]],[76,12],[76,12],[[[43,[-1]],[17,[-2]]],[[176,[-2]]],53,[]],[-1,15,[]],[-1,[[10,[-2]]],[],[]],[-1,[[10,[-2]]],[],[]],[-1,[[10,[-2]]],[],[]],[-1,[[10,[-2]]],[],[]],[-1,[[10,[-2]]],[],[]],[-1,[[10,[-2]]],[],[]],[-1,23,[]],[-1,23,[]],[-1,23,[]],[[[43,[-1]],[17,[-2]]],-2,53,[]],0,0,0,[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[59,7],[177,7],[38,[[39,[7]]]],[59,[[39,[7]]]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[16,[[6,[59]]]],[16,[[6,[177]]]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[[],8],[[],8],[178,59],[178,177],[[177,[28,[27]]],[[39,[58]]]],[-1,[[10,[-2]]],[],[]],[-1,[[10,[-2]]],[],[]],[-1,[[10,[-2]]],[],[]],[-1,[[10,[-2]]],[],[]],[-1,[[10,[-2]]],[],[]],[-1,[[10,[-2]]],[],[]],[-1,23,[]],[-1,23,[]],[-1,23,[]],[178,38],[[38,[28,[27]]],[[39,[58]]]],[[59,[28,[27]]],[[39,[58]]]],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[16,7],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[16,16],[[-1,-2],7,[],[]],[[16,16],25],0,[[16,16],12],[[179,179],12],[[16,13],[[10,[7,161]]]],[[179,13],14],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[16,[[6,[180]]]],[16,[[6,[181]]]],[16,[[17,[-1]]],180],[[16,58],[[17,[-1]]],180],[[16,58],[[17,[-1]]],180],[[16,-2],[[17,[-1]]],[],[[19,[[6,[2]]],[[18,[-1]]]]]],[[16,-2],[[17,[-1]]],[],[[19,[[6,[8]]],[[18,[-1]]]]]],[[16,-1],[[17,[-2]]],82,180],[[16,-1,16],[[17,[7]]],82],[16,[[17,[[6,[2]]]]]],[[16,16],[[17,[7]]]],[16,[[17,[-1]]],180],[[16,-2],[[17,[-1]]],[],[[19,[[6,[8]]],[[18,[-1]]]]]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[16,12],[16,12],[16,12],[16,12],[16,12],[[],8],[[],8],[16,63],[[16,16],[[6,[25]]]],[[81,16],7],[[181,16],7],[[16,-1],[[182,[7]]],[81,37]],[[16,16],7],[[16,-1],[[182,[7]]],81],[16,172],[16,7],0,[16,78],[16,179],[-1,-2,[],[]],[-1,[[10,[-2]]],[],[]],[-1,[[10,[-2]]],[],[]],[-1,[[10,[-2]]],[],[]],[-1,[[10,[-2]]],[],[]],[-1,[[10,[-2]]],[],[]],[-1,[[10,[-2]]],[],[]],[-1,23,[]],[-1,23,[]],[-1,23,[]],[[183,16],12],[[181,16],12],[[16,-1],[[17,[7]]],183],[[16,16],12],[[16,58,-1],[[17,[7]]],183],0,0,0,0,0,0,0,0,0,0,0,0,[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,72,184],[-1,72,184],[[[185,[-1]],-2],60,53,186],[[[185,[-1]],-2],60,53,186],[[[185,[-1]],-2],60,53,186],[[[185,[-1]],-2],60,53,186],[[[185,[-1]],-2],60,53,186],[[[185,[-1]],8,[28,[8]],-2],60,53,186],[[[185,[-1]],-2],60,53,186],[[[185,[-1]],-2],60,53,186],[[[185,[-1]],-2],60,53,186],[[[185,[-1]],-2],60,53,186],[[[185,[-1]],-2],60,53,186],[[[185,[-1]],-2],60,53,186],[[[185,[-1]],-2],60,53,186],[[[185,[-1]],-2],60,53,186],[[[185,[-1]],-2],60,53,186],[[[185,[-1]],8,-2],60,53,186],[[[185,[-1]],-2],60,53,186],[[[185,[-1]],-2],60,53,186],[[[185,[-1]],-2],60,53,186],[[[185,[-1]],-2],60,53,186],[[[185,[-1]],8,[28,[8]],-2],60,53,186],[[[185,[-1]],58,-2],60,53,186],[[[185,[-1]],8,58,-2],60,53,186],[[[185,[-1]],-2],60,53,186],[[[185,[-1]],-2],60,53,186],[[[185,[-1]],-2],60,53,186],[[[185,[-1]],-2],60,53,186],[[[185,[-1]],-2],60,53,186],[[[185,[-1]],8,-2],60,53,186],[[72,13],14],[[72,13],14],[-1,-1,[]],[175,72],[-1,-1,[]],[[[43,[-1]],16],[[60,[-2]]],53,61],[-1,-2,[],[]],[-1,-2,[],[]],[[[43,[-1]],16],[[185,[-1]]],53],[-1,15,[]],[-1,[[10,[-2]]],[],[]],[-1,[[10,[-2]]],[],[]],[-1,[[10,[-2]]],[],[]],[-1,[[10,[-2]]],[],[]],[-1,23,[]],[-1,23,[]],0,0,0,0,0,0,[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[74,74],[[-1,-2],7,[],[]],[[],74],[[74,-1],74,1],[[[187,[-1]]],[[10,[-2,-3]]],53,[],[]],[[[188,[-1]]],[[10,[-2,-3]]],53,[],[]],[[[189,[-1]]],[[10,[-2,-3]]],53,[],[]],[[[189,[-1]]],[[10,[-2,-3]]],53,[],[]],[[[190,[-1]]],[[10,[-2,-3]]],53,[],[]],[[[190,[-1]]],[[10,[-2,-3]]],53,[],[]],[[[190,[-1]]],[[10,[-2,-3]]],53,[],[]],[[74,13],14],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[[[43,[-1]],16],[[191,[-1]]],53],[[],74],[[[43,[-1]],16,74],[[191,[-1]]],53],[[[191,[-1]],12],[[10,[-2,-3]]],53,[],[]],[[[191,[-1]],[28,[27]]],[[10,[-2,-3]]],53,[],[]],[[[191,[-1]],192],[[10,[-2,-3]]],53,[],[]],[[[187,[-1]],-2],[[10,[7,-3]]],53,[73,37],[]],[[[188,[-1]],-2],[[10,[7,-3]]],53,[73,37],[]],[[[191,[-1]],100],[[10,[-2,-3]]],53,[],[]],[[[191,[-1]],97],[[10,[-2,-3]]],53,[],[]],[[[189,[-1]],-2],[[10,[7,-3]]],53,[73,37],[]],[[[189,[-1]],-2],[[10,[7,-3]]],53,[73,37],[]],[[[190,[-1]],8,-2],[[10,[7,-3]]],53,[73,37],[]],[[[190,[-1]],8,-2],[[10,[7,-3]]],53,[73,37],[]],[[[191,[-1]],99],[[10,[-2,-3]]],53,[],[]],[[[191,[-1]],85],[[10,[-2,-3]]],53,[],[]],[[[191,[-1]],98],[[10,[-2,-3]]],53,[],[]],[[[191,[-1]],89],[[10,[-2,-3]]],53,[],[]],[[[190,[-1]],-2],[[10,[7,-3]]],53,[73,37],[]],[[[191,[-1]],[6,[58]]],[[10,[-2,-3]]],53,[],[]],[[[191,[-1]],8,-2],[[10,[-3,-4]]],53,[73,37],[],[]],[[[191,[-1]],8,92,8,-2],[[10,[-3,-4]]],53,[73,37],[],[]],[[[191,[-1]]],[[10,[-2,-3]]],53,[],[]],[[[191,[-1]],[6,[58]]],[[10,[-2,-3]]],53,[],[]],[[[191,[-1]],-2],[[10,[-3,-4]]],53,[73,37],[],[]],[[[191,[-1]],8],[[10,[-2,-3]]],53,[],[]],[[[191,[-1]],8,58],[[10,[-2,-3]]],53,[],[]],[[[191,[-1]],8,92,8,58],[[10,[-2,-3]]],53,[],[]],[[[191,[-1]],58],[[10,[-2,-3]]],53,[],[]],[[[191,[-1]],8,58],[[10,[-2,-3]]],53,[],[]],[[[191,[-1]],8,92,8,58],[[10,[-2,-3]]],53,[],[]],[[[191,[-1]],101],[[10,[-2,-3]]],53,[],[]],[[[191,[-1]],92],[[10,[-2,-3]]],53,[],[]],[[[191,[-1]],83],[[10,[-2,-3]]],53,[],[]],[[[191,[-1]],27],[[10,[-2,-3]]],53,[],[]],[[[191,[-1]]],[[10,[-2,-3]]],53,[],[]],[[[191,[-1]],8],[[10,[-2,-3]]],53,[],[]],[[[191,[-1]],8,92,8],[[10,[-2,-3]]],53,[],[]],[[[190,[-1]],-2],[[10,[7,-3]]],53,[73,37],[]],[[74,-1],7,1],[74,7],[74,74],[-1,-2,[],[]],[[[43,[-1]],16,-2],[[10,[7,72]]],53,73],[[[43,[-1]],16,-2,74],[[10,[7,72]]],53,73],[-1,[[10,[-2]]],[],[]],[-1,[[10,[-2]]],[],[]],[-1,[[10,[-2]]],[],[]],[-1,[[10,[-2]]],[],[]],[-1,[[10,[-2]]],[],[]],[-1,[[10,[-2]]],[],[]],[-1,[[10,[-2]]],[],[]],[-1,[[10,[-2]]],[],[]],[-1,[[10,[-2]]],[],[]],[-1,[[10,[-2]]],[],[]],[-1,[[10,[-2]]],[],[]],[-1,[[10,[-2]]],[],[]],[-1,23,[]],[-1,23,[]],[-1,23,[]],[-1,23,[]],[-1,23,[]],[-1,23,[]],0,[-1,-2,[],[]],[-1,-2,[],[]],[193,193],[[-1,-2],7,[],[]],[[193,193],25],[193,15],[[193,193],12],[-1,-1,[]],[16,[[6,[193]]]],[-1,-2,[],[]],[193,15],[[],8],[[193,193],[[6,[25]]]],[-1,-2,[],[]],[-1,[[10,[-2]]],[],[]],[-1,[[10,[-2]]],[],[]],[-1,23,[]]],"c":[],"p":[[10,"AsAtom",31],[5,"Atom",31],[6,"Atomable",31],[5,"LazyAtom",31],[8,"atom_t",399],[6,"Option",3903],[1,"tuple"],[1,"str"],[10,"Into",3904],[6,"Result",3905],[10,"Deserializer",3906],[1,"bool"],[5,"Formatter",3907],[8,"Result",3907],[5,"String",3908],[5,"Term",3628],[8,"PrologResult",3533],[17,"Output"],[10,"Fn",3909],[10,"Hasher",3910],[10,"IntoAtom",31],[10,"Serializer",3911],[5,"TypeId",3912],[10,"ArcBlobImpl",106],[6,"Ordering",3913],[10,"CloneBlobImpl",106],[1,"u8"],[1,"slice"],[5,"PL_blob_t",399],[5,"Arc",3914],[17,"Inner"],[10,"WrappedArcBlobBase",106],[10,"Send",3915],[10,"Sync",3915],[10,"Unpin",3915],[10,"Clone",3916],[10,"Sized",3915],[5,"PrologStream",3590],[8,"Result",3917],[5,"LazyCallablePredicate",140],[5,"CallablePredicate",140],[10,"OpenCall",140],[5,"Context",200],[5,"OpenQuery",140],[6,"PredicateWrapError",140],[5,"Predicate",3477],[17,"ContextType"],[10,"Callable",140],[5,"Module",3458],[1,"array"],[10,"ContextType",200],[8,"predicate_t",399],[10,"QueryableContextType",200],[5,"ExceptionTerm",200],[5,"GenericQueryableContextType",200],[5,"Frame",200],[5,"Vec",3918],[1,"usize"],[5,"WritablePrologStream",3590],[8,"Result",3717],[10,"Deserialize",3906],[5,"DictIterator",319],[8,"PL_engine_t",399],[5,"EngineActivation",369],[5,"ActivatedEngine",200],[8,"GenericQueryableContext",200],[10,"IntoPrologException",200],[5,"TermListIterator",200],[10,"FrameableContextType",200],[10,"FnOnce",3909],[10,"UnwindSafe",3919],[6,"Error",3717],[10,"Serialize",3911],[5,"SerializerConfiguration",3780],[10,"Error",3920],[6,"PrologError",3533],[5,"Unmanaged",200],[8,"term_t",399],[5,"DictBuilder",319],[6,"Key",319],[10,"TermPutable",3628],[10,"IntoKey",319],[1,"u64"],[5,"Engine",369],[1,"i32"],[5,"io_stream",399],[5,"__PL_table",399],[6,"c_void",3921],[1,"i8"],[5,"__PL_table_enum",399],[5,"__PL_module",399],[1,"u32"],[5,"__PL_procedure",399],[5,"__PL_queryRef",399],[5,"PL_thread_attr_t",399],[5,"__PL_PL_local_data",399],[1,"f64"],[1,"i64"],[1,"i16"],[1,"f32"],[1,"u16"],[5,"pl_context_t",399],[5,"__PL_record",399],[5,"__PL_foreign_context",399],[1,"isize"],[20,"term_value_t",399],[5,"PL_extension",399],[5,"PL_prof_type_t",399],[5,"PL_option_t",399],[5,"pl_sigaction",399],[5,"io_functions",399],[5,"PL_locale",399],[5,"__va_list_tag",399],[1,"never"],[5,"xpceref_t",399],[5,"__mbstate_t",399],[5,"__BindgenBitfieldUnit",399],[5,"__fsid_t",399],[20,"__mbstate_t__bindgen_ty_1",399],[5,"_IO_FILE",399],[5,"__locale_struct",399],[5,"tm",399],[5,"max_align_t",399],[5,"imaxdiv_t",399],[5,"recursiveMutex",399],[5,"io_position",399],[5,"div_t",399],[5,"ldiv_t",399],[5,"lldiv_t",399],[5,"__sigset_t",399],[5,"timeval",399],[5,"timespec",399],[5,"fd_set",399],[20,"__atomic_wide_counter",399],[5,"__atomic_wide_counter__bindgen_ty_1",399],[5,"__pthread_internal_list",399],[5,"__pthread_internal_slist",399],[5,"__pthread_mutex_s",399],[5,"__pthread_rwlock_arch_t",399],[5,"__pthread_cond_s",399],[5,"__once_flag",399],[20,"pthread_mutexattr_t",399],[20,"pthread_condattr_t",399],[20,"pthread_attr_t",399],[20,"pthread_mutex_t",399],[20,"pthread_cond_t",399],[20,"pthread_rwlock_t",399],[20,"pthread_rwlockattr_t",399],[20,"pthread_barrier_t",399],[20,"pthread_barrierattr_t",399],[5,"random_data",399],[5,"drand48_data",399],[5,"term_value_t__bindgen_ty_1",399],[20,"xpceref_t__bindgen_ty_1",399],[5,"__locale_data",399],[5,"__PL_queryFrame",399],[5,"__PL_localFrame",399],[10,"Ord",3913],[10,"Default",3922],[10,"PartialEq",3913],[5,"Error",3907],[10,"Debug",3907],[10,"AsRef",3904],[10,"AsMut",3904],[10,"Hash",3910],[10,"PartialOrd",3913],[1,"u128"],[5,"Functor",3415],[5,"LazyFunctor",3415],[8,"functor_t",399],[8,"module_t",399],[5,"Record",3515],[8,"BoolPrologResult",3533],[8,"OptPrologResult",3533],[5,"PrologException",3533],[8,"PrologStringResult",3533],[5,"ReadablePrologStream",3590],[8,"IOSTREAM",399],[6,"TermType",3628],[10,"TermGetable",3628],[5,"Nil",3628],[8,"NonFailingPrologResult",3533],[10,"Unifiable",3628],[10,"Display",3907],[5,"Deserializer",3717],[10,"Visitor",3906],[5,"SerializeSeq",3780],[5,"SerializeTuple",3780],[5,"SerializeNamedTuple",3780],[5,"SerializeMap",3780],[5,"Serializer",3780],[1,"char"],[5,"PrologText",3885],[10,"ArcBlobBase",106],[10,"CloneBlobBase",106],[10,"WrappedArcBlobImpl",106],[10,"ArcBlob",106],[10,"WrappedArcBlob",106],[10,"CloneBlob",106],[15,"WrongArity",197],[8,"Sread_function",399],[8,"Swrite_function",399],[8,"Sseek_function",399],[8,"Sseek64_function",399],[8,"Sclose_function",399],[8,"Scontrol_function",399],[8,"__compar_fn_t",399],[8,"pl_function_t",399],[8,"PL_dispatch_hook_t",399],[8,"PL_abort_hook_t",399],[8,"PL_initialise_hook_t",399],[8,"PL_agc_hook_t",399],[8,"mbstate_t",399],[8,"__pthread_list_t",399],[8,"__pthread_slist_t",399],[8,"fsid_t",399],[8,"sigset_t",399],[8,"IOPOS",399],[8,"IOFUNCTIONS",399],[8,"pl_sigaction_t",399],[6,"PrologStringError",3533]],"b":[[41,"impl-AsAtom-for-Atom"],[42,"impl-AsAtom-for-%26Atom"],[45,"impl-AsAtom-for-Atom"],[46,"impl-AsAtom-for-%26Atom"],[63,"impl-From%3C%26str%3E-for-Atomable%3C\'a%3E"],[65,"impl-From%3CString%3E-for-Atomable%3C\'a%3E"],[77,"impl-IntoAtom-for-Atomable%3C\'a%3E"],[78,"impl-IntoAtom-for-%26Atomable%3C\'a%3E"],[79,"impl-IntoAtom-for-Atom"],[80,"impl-IntoAtom-for-%26Atom"],[81,"impl-TermGetable-for-Atomable%3C\'static%3E"],[82,"impl-Atomable%3C\'a%3E"],[83,"impl-TermGetable-for-Atom"],[84,"impl-Atom"],[164,"impl-Display-for-PredicateWrapError"],[165,"impl-Debug-for-PredicateWrapError"],[179,"impl-Callable%3CN%3E-for-LazyCallablePredicate%3CN%3E"],[180,"impl-Callable%3CN%3E-for-%26LazyCallablePredicate%3CN%3E"],[245,"impl-Context%3C\'a,+C%3E"],[246,"impl-Context%3C\'a,+Frame%3E"],[343,"impl-From%3Cu64%3E-for-Key"],[344,"impl-From%3CA%3E-for-Key"],[3433,"impl-TermGetable-for-Functor"],[3434,"impl-Functor"],[3565,"impl-Debug-for-PrologError"],[3566,"impl-Display-for-PrologError"],[3694,"impl-Term%3C\'a%3E"],[3695,"impl-TermPutable-for-Term%3C\'a%3E"],[3714,"impl-Term%3C\'a%3E"],[3715,"impl-Unifiable-for-Term%3C\'a%3E"],[3733,"impl-Error-for-Error"],[3734,"impl-Error-for-Error"],[3764,"impl-Display-for-Error"],[3765,"impl-Debug-for-Error"],[3804,"impl-SerializeTupleVariant-for-SerializeNamedTuple%3C\'a,+C%3E"],[3805,"impl-SerializeTupleStruct-for-SerializeNamedTuple%3C\'a,+C%3E"],[3806,"impl-SerializeStructVariant-for-SerializeMap%3C\'a,+C%3E"],[3807,"impl-SerializeStruct-for-SerializeMap%3C\'a,+C%3E"],[3808,"impl-SerializeMap-for-SerializeMap%3C\'a,+C%3E"],[3832,"impl-SerializeTupleVariant-for-SerializeNamedTuple%3C\'a,+C%3E"],[3833,"impl-SerializeTupleStruct-for-SerializeNamedTuple%3C\'a,+C%3E"],[3834,"impl-SerializeStructVariant-for-SerializeMap%3C\'a,+C%3E"],[3835,"impl-SerializeStruct-for-SerializeMap%3C\'a,+C%3E"]]}],\
["swipl_fli",{"doc":"Generated low-level bindings to the SWI-Prolog fli.","t":"SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSISSSSSSSSSSSSSSSSSSSSSSSSSSISSSSSSSSSIIIISSSSPPPPPPPPPPPPSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSHIHHHHHHHIHHHHHHHIHHHFHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHIHHHHHHIHHHHHFJHIHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHIHHHHHHHHHHHHHHHHHHHHHHHHFHHHHHHHHHHHHHHHHHHHHHHHHHHHFHHHHHHFHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHFHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSHHSSSHHHJHHHHHIHIHHHHHHHJHHHHHHHHHHHHHHJHHPPPPPPPPPPPPHHHHHHHHHHHHIHHHHIIHHHHHHHHHHHHHHHHHHHHHHHISSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSHSIIIISSSFSSSSSSSSSSSSSSSSSSSSSSSSSSSHHHHHHISSSSSSSSSSSHHHHHHHHHHSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSFSISSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSFIFFFFFFFFFISSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSOOOOOOOOOOUFOIIIIOIOOISISIOOOOHOOOIOOOOIOJIOOIIIIFIOOOOOHISIISOIOIIIIIIIIIIIIIOSOSFFIOOIOHFUSIOOOOOIOIIOFOOOOOIOOFFFIFFIIOIIOOIFSOOOOOOOOOIOIIIIIIISISSIIIIIIIIIIIIIIIIIFOOOOOOOOOOSOOOOOOOOOOIIIOOOOHOOHHHHHOOHOHHOOHHHHHHOIIINNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNHHHIOOOOOOOOIHOOOHHHHIINNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNHOOOOHOONOHOOOOIHIHNIHFOOHFHOHHHHOOOHNHHNOOHHHHHHHOHHHHHHIFHHHHOOOOONNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNIHOHOHHOHNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNIIIHHOOOIHHHHHNONHHHHHHHHHHHHHHHHHHHHHHHHHHHHIOOONIIOOIHHFHHIIIIIIIIIINNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNOOFFFHHHIHHOOHHHOHFOOOOOOHHHHFOOOIHOOIHHHOOOOHFOHHHHHHOOIHHOOHHHHIIHHOOOOONNNOHIHHIHHJJJJOONHHOIHFIFIIOOOOHHOIHHUUUUUIUUIUUIIHHHHHHOHHHIHIHOOOOHOHOOHFHOISSSHOOHHHHHIFOOOIOOOOOOOOOOOOOOOOHHHOOOOOOOOOHHHOOOOHNNNNHHHHHHHHHHHHHHHHHIHIHHHHHOOOHHHHHHHHHHHIHHHHHHHHHOOHHOOIUFIOOIFFFNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNHNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNHHHOOOOOONNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNIIIIIIIIIHIIIIIIIIIIIIOOHOHHHOOIIHIHOHHHHHHHHHHHIHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHIHHHHHHHOOOHHFU","n":["BIG_ENDIAN","BUF_ALLOW_STACK","BUF_DISCARDABLE","BUF_MALLOC","BUF_RING","BUF_STACK","BYTE_ORDER","CVT_ALL","CVT_ATOM","CVT_ATOMIC","CVT_EXCEPTION","CVT_FLOAT","CVT_INTEGER","CVT_LIST","CVT_MASK","CVT_NUMBER","CVT_RATIONAL","CVT_STRING","CVT_VARIABLE","CVT_VARNOFAIL","CVT_WRITE","CVT_WRITEQ","CVT_WRITE_CANONICAL","CVT_XINTEGER","EOF","EPLEXCEPTION","EXIT_FAILURE","EXIT_SUCCESS","FALSE","FD_SETSIZE","FF_FORCE","FF_KEEP","FF_MASK","FF_NOCREATE","FF_READONLY","FILE","F_LOCK","F_OK","F_TEST","F_TLOCK","F_ULOCK","HAVE_VISIBILITY_ATTRIBUTE","INT16_MAX","INT16_MIN","INT32_MAX","INT32_MIN","INT8_MAX","INT8_MIN","INTPTR_MAX","INTPTR_MIN","INT_FAST16_MAX","INT_FAST16_MIN","INT_FAST32_MAX","INT_FAST32_MIN","INT_FAST8_MAX","INT_FAST8_MIN","INT_LEAST16_MAX","INT_LEAST16_MIN","INT_LEAST32_MAX","INT_LEAST32_MIN","INT_LEAST8_MAX","INT_LEAST8_MIN","IOENC","IOENC_ENC_ANSI","IOENC_ENC_ASCII","IOENC_ENC_ISO_LATIN_1","IOENC_ENC_OCTET","IOENC_ENC_UNKNOWN","IOENC_ENC_UTF16BE","IOENC_ENC_UTF16LE","IOENC_ENC_UTF8","IOENC_ENC_WCHAR","IOFUNCTIONS","IOLOCK","IOPOS","IOSTREAM","LITTLE_ENDIAN","L_INCR","L_SET","L_XTND","None","None","None","None","None","None","None","None","None","None","None","None","OPT_ALL","OPT_INF","OPT_TYPE_MASK","PDP_ENDIAN","PLSIG_IGNORE","PLSIG_NOFRAME","PLSIG_SYNC","PLSIG_THROW","PLVERSION","PLVERSION_TAG","PL_ACTION_ABORT","PL_ACTION_ATTACH_CONSOLE","PL_ACTION_BACKTRACE","PL_ACTION_BREAK","PL_ACTION_DEBUG","PL_ACTION_FLUSH","PL_ACTION_GUIAPP","PL_ACTION_HALT","PL_ACTION_TRACE","PL_ACTION_TRADITIONAL","PL_ACTION_WRITE","PL_ARITY_AS_SIZE","PL_ASSERTA","PL_ASSERTZ","PL_ATOM","PL_BLOB","PL_BLOB_MAGIC","PL_BLOB_MAGIC_B","PL_BLOB_NOCOPY","PL_BLOB_TEXT","PL_BLOB_UNIQUE","PL_BLOB_VERSION","PL_BLOB_WCHAR","PL_BOOL","PL_BT_SAFE","PL_BT_USER","PL_BYTE","PL_CHAR","PL_CHARS","PL_CHAR_LIST","PL_CLEANUP_CANCELED","PL_CLEANUP_FAILED","PL_CLEANUP_NO_CANCEL","PL_CLEANUP_NO_RECLAIM_MEMORY","PL_CLEANUP_RECURSIVE","PL_CLEANUP_STATUS_MASK","PL_CLEANUP_SUCCESS","PL_CODE","PL_CODE_LIST","PL_COOKEDTTY","PL_CREATE_INCREMENTAL","PL_CREATE_THREAD_LOCAL","PL_CUTTED","PL_CYCLIC_TERM","PL_DICT","PL_DIFF_LIST","PL_DISPATCH_INPUT","PL_DISPATCH_INSTALLED","PL_DISPATCH_NOWAIT","PL_DISPATCH_TIMEOUT","PL_DISPATCH_WAIT","PL_DOUBLE","PL_ENGINE_INUSE","PL_ENGINE_INVAL","PL_ENGINE_SET","PL_FA_CREF","PL_FA_ISO","PL_FA_META","PL_FA_NONDETERMINISTIC","PL_FA_NOTRACE","PL_FA_SIG_ATOMIC","PL_FA_TRANSPARENT","PL_FA_VARARGS","PL_FILE_ABSOLUTE","PL_FILE_EXECUTE","PL_FILE_EXIST","PL_FILE_NOERRORS","PL_FILE_OSPATH","PL_FILE_READ","PL_FILE_SEARCH","PL_FILE_WRITE","PL_FIRST_CALL","PL_FLI_VERSION","PL_FLOAT","PL_FOR_DICT_SORTED","PL_FUNCTOR","PL_FUNCTOR_CHARS","PL_GMP_SET_ALLOC_FUNCTIONS","PL_HT_NEW","PL_HT_UPDATE","PL_INT","PL_INT64","PL_INTEGER","PL_INTPTR","PL_LIST","PL_LIST_PAIR","PL_LONG","PL_MBCHARS","PL_MBCODES","PL_MBSTRING","PL_NCHARS","PL_NIL","PL_NOTTY","PL_NOT_A_LIST","PL_NUTF8_CHARS","PL_NUTF8_CODES","PL_NUTF8_STRING","PL_NWCHARS","PL_NWCODES","PL_NWSTRING","PL_PARTIAL_LIST","PL_POINTER","PL_PRUNED","PL_QLF_LOADVERSION","PL_QLF_VERSION","PL_QUERY_ARGC","PL_QUERY_ARGV","PL_QUERY_ENCODING","PL_QUERY_GETC","PL_QUERY_HALTING","PL_QUERY_MAX_INTEGER","PL_QUERY_MAX_TAGGED_INT","PL_QUERY_MAX_THREADS","PL_QUERY_MIN_INTEGER","PL_QUERY_MIN_TAGGED_INT","PL_QUERY_USER_CPU","PL_QUERY_VERSION","PL_Q_ALLOW_YIELD","PL_Q_CATCH_EXCEPTION","PL_Q_EXT_STATUS","PL_Q_NODEBUG","PL_Q_NORMAL","PL_Q_PASS_EXCEPTION","PL_RATIONAL","PL_RAWTTY","PL_REC_VERSION","PL_REDO","PL_RESUME","PL_SHORT","PL_SIGNOFRAME","PL_SIGSYNC","PL_STRING","PL_S_EXCEPTION","PL_S_FALSE","PL_S_LAST","PL_S_NOT_INNER","PL_S_TRUE","PL_S_YIELD","PL_TERM","PL_THREAD_NOT_DETACHED","PL_THREAD_NO_DEBUG","PL_UTF8_CHARS","PL_UTF8_STRING","PL_VARIABLE","PL_VERSION_BUILT_IN","PL_VERSION_FLI","PL_VERSION_QLF","PL_VERSION_QLF_LOAD","PL_VERSION_REC","PL_VERSION_SYSTEM","PL_VERSION_VM","PL_WRT_ATTVAR_DOTS","PL_WRT_ATTVAR_IGNORE","PL_WRT_ATTVAR_MASK","PL_WRT_ATTVAR_PORTRAY","PL_WRT_ATTVAR_WRITE","PL_WRT_BACKQUOTED_STRING","PL_WRT_BACKQUOTE_IS_SYMBOL","PL_WRT_BLOB_PORTRAY","PL_WRT_BRACETERMS","PL_WRT_CHARESCAPES","PL_WRT_CHARESCAPES_UNICODE","PL_WRT_DOTLISTS","PL_WRT_IGNOREOPS","PL_WRT_NEWLINE","PL_WRT_NODICT","PL_WRT_NODOTINATOM","PL_WRT_NO_CHARESCAPES","PL_WRT_NO_CYCLES","PL_WRT_NO_LISTS","PL_WRT_NUMBERVARS","PL_WRT_PARTIAL","PL_WRT_PORTRAY","PL_WRT_QUOTED","PL_WRT_QUOTE_NON_ASCII","PL_WRT_RAT_NATURAL","PL_WRT_VARNAMES","PL_abort_hook","PL_abort_hook_t","PL_abort_unhook","PL_acquire_stream","PL_action","PL_add_hash_table","PL_add_to_protocol","PL_advance_hash_table_enum","PL_agc_hook","PL_agc_hook_t","PL_assert","PL_atom_chars","PL_atom_generator","PL_atom_generator_w","PL_atom_mbchars","PL_atom_nchars","PL_atom_wchars","PL_atomic_t","PL_backtrace","PL_backtrace_string","PL_blob_data","PL_blob_t","PL_call","PL_call_predicate","PL_can_yield","PL_changed_cwd","PL_chars_to_term","PL_check_data","PL_check_stacks","PL_cleanup","PL_cleanup_fork","PL_clear_exception","PL_clear_hash_table","PL_close_foreign_frame","PL_close_query","PL_compare","PL_cons_functor","PL_cons_functor_v","PL_cons_list","PL_context","PL_copy_term_ref","PL_create_engine","PL_current_prolog_flag","PL_current_query","PL_cut_query","PL_cvt_encoding","PL_cvt_i_address","PL_cvt_i_atom","PL_cvt_i_bool","PL_cvt_i_char","PL_cvt_i_codes","PL_cvt_i_float","PL_cvt_i_int","PL_cvt_i_int32","PL_cvt_i_int64","PL_cvt_i_llong","PL_cvt_i_long","PL_cvt_i_schar","PL_cvt_i_short","PL_cvt_i_single","PL_cvt_i_size_t","PL_cvt_i_string","PL_cvt_i_uchar","PL_cvt_i_uint","PL_cvt_i_uint32","PL_cvt_i_uint64","PL_cvt_i_ullong","PL_cvt_i_ulong","PL_cvt_i_ushort","PL_cvt_o_address","PL_cvt_o_atom","PL_cvt_o_codes","PL_cvt_o_float","PL_cvt_o_int64","PL_cvt_o_single","PL_cvt_o_string","PL_cvt_set_encoding","PL_cwd","PL_del_hash_table","PL_describe_context","PL_destroy_engine","PL_discard_foreign_frame","PL_dispatch","PL_dispatch_hook","PL_dispatch_hook_t","PL_dlclose","PL_dlerror","PL_dlopen","PL_dlsym","PL_domain_error","PL_duplicate_record","PL_engine_t","PL_erase","PL_erase_external","PL_exception","PL_existence_error","PL_exit_hook","PL_extension","PL_extensions","PL_fatal_error","PL_fid_t","PL_find_blob_type","PL_for_dict","PL_foreign_context","PL_foreign_context_address","PL_foreign_context_predicate","PL_foreign_control","PL_free","PL_free_blob","PL_free_hash_table","PL_free_hash_table_enum","PL_functor_arity","PL_functor_arity_sz","PL_functor_name","PL_get_arg","PL_get_arg_sz","PL_get_atom","PL_get_atom_chars","PL_get_atom_ex","PL_get_atom_nchars","PL_get_attr","PL_get_blob","PL_get_bool","PL_get_bool_ex","PL_get_char_ex","PL_get_chars","PL_get_compound_name_arity","PL_get_compound_name_arity_sz","PL_get_context","PL_get_delay_list","PL_get_dict_key","PL_get_file_name","PL_get_file_nameW","PL_get_float","PL_get_float_ex","PL_get_functor","PL_get_head","PL_get_int64","PL_get_int64_ex","PL_get_integer","PL_get_integer_ex","PL_get_intptr","PL_get_intptr_ex","PL_get_list","PL_get_list_chars","PL_get_list_ex","PL_get_list_nchars","PL_get_long","PL_get_long_ex","PL_get_module","PL_get_name_arity","PL_get_name_arity_sz","PL_get_nchars","PL_get_nil","PL_get_nil_ex","PL_get_pointer","PL_get_pointer_ex","PL_get_signum_ex","PL_get_size_ex","PL_get_stream","PL_get_stream_from_blob","PL_get_stream_handle","PL_get_string","PL_get_tail","PL_get_term_value","PL_get_thread_alias","PL_get_thread_id_ex","PL_get_uint64","PL_get_uint64_ex","PL_get_wchars","PL_halt","PL_handle_signals","PL_initialise","PL_initialise_hook","PL_initialise_hook_t","PL_instantiation_error","PL_interrupt","PL_is_acyclic","PL_is_atom","PL_is_atomic","PL_is_attvar","PL_is_blob","PL_is_callable","PL_is_compound","PL_is_dict","PL_is_float","PL_is_functor","PL_is_ground","PL_is_initialised","PL_is_integer","PL_is_list","PL_is_number","PL_is_pair","PL_is_rational","PL_is_string","PL_is_variable","PL_license","PL_linger","PL_load_extensions","PL_locale","PL_lookup_hash_table","PL_malloc","PL_malloc_atomic","PL_malloc_atomic_uncollectable","PL_malloc_atomic_unmanaged","PL_malloc_uncollectable","PL_malloc_unmanaged","PL_mark_string_buffers","PL_module_name","PL_new_atom","PL_new_atom_mbchars","PL_new_atom_nchars","PL_new_atom_wchars","PL_new_blob","PL_new_functor","PL_new_functor_sz","PL_new_hash_table","PL_new_hash_table_enum","PL_new_module","PL_new_nil_ref","PL_new_term_ref","PL_new_term_refs","PL_next_solution","PL_on_halt","PL_open_foreign_frame","PL_open_query","PL_open_resource","PL_option_t","PL_permission_error","PL_pred","PL_predicate","PL_predicate_info","PL_prof_call","PL_prof_exit","PL_prof_type_t","PL_prolog_debug","PL_prolog_nodebug","PL_prompt_next","PL_prompt_string","PL_put_atom","PL_put_atom_chars","PL_put_atom_nchars","PL_put_blob","PL_put_bool","PL_put_chars","PL_put_dict","PL_put_float","PL_put_functor","PL_put_int64","PL_put_integer","PL_put_list","PL_put_list_chars","PL_put_list_codes","PL_put_list_nchars","PL_put_list_ncodes","PL_put_nil","PL_put_pointer","PL_put_string_chars","PL_put_string_nchars","PL_put_term","PL_put_term_from_chars","PL_put_uint64","PL_put_variable","PL_put_wchars","PL_qlf_get_atom","PL_qlf_get_double","PL_qlf_get_int32","PL_qlf_get_int64","PL_qlf_get_uint32","PL_qlf_put_atom","PL_qlf_put_double","PL_qlf_put_int32","PL_qlf_put_int64","PL_qlf_put_uint32","PL_query","PL_query_engine","PL_quote","PL_raise","PL_raise_exception","PL_realloc","PL_record","PL_record_external","PL_recorded","PL_recorded_external","PL_register_atom","PL_register_blob_type","PL_register_extensions","PL_register_extensions_in_module","PL_register_foreign","PL_register_foreign_in_module","PL_register_profile_type","PL_release_stream","PL_release_stream_noerror","PL_release_string_buffers_from_mark","PL_representation_error","PL_reset_term_refs","PL_resource_error","PL_rewind_foreign_frame","PL_same_compound","PL_scan_options","PL_set_engine","PL_set_prolog_flag","PL_set_resource_db_mem","PL_sigaction","PL_signal","PL_skip_list","PL_step_context","PL_strip_module","PL_syntax_error","PL_term_type","PL_thread_at_exit","PL_thread_attach_engine","PL_thread_attr_t","PL_thread_destroy_engine","PL_thread_raise","PL_thread_self","PL_throw","PL_toplevel","PL_ttymode","PL_type_error","PL_unify","PL_unify_arg","PL_unify_arg_sz","PL_unify_atom","PL_unify_atom_chars","PL_unify_atom_nchars","PL_unify_blob","PL_unify_bool","PL_unify_bool_ex","PL_unify_chars","PL_unify_compound","PL_unify_float","PL_unify_functor","PL_unify_int64","PL_unify_integer","PL_unify_list","PL_unify_list_chars","PL_unify_list_codes","PL_unify_list_ex","PL_unify_list_nchars","PL_unify_list_ncodes","PL_unify_nil","PL_unify_nil_ex","PL_unify_pointer","PL_unify_stream","PL_unify_string_chars","PL_unify_string_nchars","PL_unify_term","PL_unify_thread_id","PL_unify_uint64","PL_unify_wchars","PL_unify_wchars_diff","PL_uninstantiation_error","PL_unregister_atom","PL_unregister_blob_type","PL_utf8_strlen","PL_version_info","PL_warning","PL_warningX","PL_wchars_to_term","PL_winitialise","PL_write_prompt","PL_write_term","PL_yielded","PRIX16","PRIX32","PRIX64","PRIX8","PRIXFAST16","PRIXFAST32","PRIXFAST64","PRIXFAST8","PRIXLEAST16","PRIXLEAST32","PRIXLEAST64","PRIXLEAST8","PRIXMAX","PRIXPTR","PRId16","PRId32","PRId64","PRId8","PRIdFAST16","PRIdFAST32","PRIdFAST64","PRIdFAST8","PRIdLEAST16","PRIdLEAST32","PRIdLEAST64","PRIdLEAST8","PRIdMAX","PRIdPTR","PRIi16","PRIi32","PRIi64","PRIi8","PRIiFAST16","PRIiFAST32","PRIiFAST64","PRIiFAST8","PRIiLEAST16","PRIiLEAST32","PRIiLEAST64","PRIiLEAST8","PRIiMAX","PRIiPTR","PRIo16","PRIo32","PRIo64","PRIo8","PRIoFAST16","PRIoFAST32","PRIoFAST64","PRIoFAST8","PRIoLEAST16","PRIoLEAST32","PRIoLEAST64","PRIoLEAST8","PRIoMAX","PRIoPTR","PRIu16","PRIu32","PRIu64","PRIu8","PRIuFAST16","PRIuFAST32","PRIuFAST64","PRIuFAST8","PRIuLEAST16","PRIuLEAST32","PRIuLEAST64","PRIuLEAST8","PRIuMAX","PRIuPTR","PRIx16","PRIx32","PRIx64","PRIx8","PRIxFAST16","PRIxFAST32","PRIxFAST64","PRIxFAST8","PRIxLEAST16","PRIxLEAST32","PRIxLEAST64","PRIxLEAST8","PRIxMAX","PRIxPTR","PTRDIFF_MAX","PTRDIFF_MIN","RAND_MAX","REP_FN","REP_ISO_LATIN_1","REP_MB","REP_UTF8","R_OK","SCNd16","SCNd32","SCNd64","SCNd8","SCNdFAST16","SCNdFAST32","SCNdFAST64","SCNdFAST8","SCNdLEAST16","SCNdLEAST32","SCNdLEAST64","SCNdLEAST8","SCNdMAX","SCNdPTR","SCNi16","SCNi32","SCNi64","SCNi8","SCNiFAST16","SCNiFAST32","SCNiFAST64","SCNiFAST8","SCNiLEAST16","SCNiLEAST32","SCNiLEAST64","SCNiLEAST8","SCNiMAX","SCNiPTR","SCNo16","SCNo32","SCNo64","SCNo8","SCNoFAST16","SCNoFAST32","SCNoFAST64","SCNoFAST8","SCNoLEAST16","SCNoLEAST32","SCNoLEAST64","SCNoLEAST8","SCNoMAX","SCNoPTR","SCNu16","SCNu32","SCNu64","SCNu8","SCNuFAST16","SCNuFAST32","SCNuFAST64","SCNuFAST8","SCNuLEAST16","SCNuLEAST32","SCNuLEAST64","SCNuLEAST8","SCNuMAX","SCNuPTR","SCNx16","SCNx32","SCNx64","SCNx8","SCNxFAST16","SCNxFAST32","SCNxFAST64","SCNxFAST8","SCNxLEAST16","SCNxLEAST32","SCNxLEAST64","SCNxLEAST8","SCNxMAX","SCNxPTR","SEEK_CUR","SEEK_END","SEEK_SET","SH_ALIAS","SH_ERRORS","SH_INPUT","SH_NOPAIR","SH_OUTPUT","SH_UNLOCKED","SIG_ATOMIC_MAX","SIG_ATOMIC_MIN","SIO_ADVLOCK","SIO_APPEND","SIO_BOM","SIO_BUFSIZE","SIO_CLOSE_FORCE","SIO_CLOSE_TRYLOCK","SIO_CLOSING","SIO_CMAGIC","SIO_FBUF","SIO_FEOF","SIO_FEOF2","SIO_FEOF2ERR","SIO_FERR","SIO_FILE","SIO_FLUSHOUTPUT","SIO_GETFILENO","SIO_GETPENDING","SIO_GETREPOSITION","SIO_GETSIZE","SIO_INPUT","SIO_ISATTY","SIO_LASTERROR","SIO_LBUF","SIO_LINESIZE","SIO_MAGIC","SIO_NBUF","SIO_NL_DETECT","SIO_NL_DOS","SIO_NL_POSIX","SIO_NOCLOSE","SIO_NOERROR","SIO_NOFEOF","SIO_NOLINENO","SIO_NOLINEPOS","SIO_NOMUTEX","SIO_OMAGIC","SIO_OUTPUT","SIO_RAW","SIO_RECORDPOS","SIO_REPPL","SIO_REPPLU","SIO_REPXML","SIO_RP_BLOCK","SIO_RP_NOPOS","SIO_SEEK_CUR","SIO_SEEK_END","SIO_SEEK_SET","SIO_SETENCODING","SIO_STATIC","SIO_TEXT","SIO_TIMEOUT","SIO_UPDATE","SIO_USERBUF","SIO_WARN","SIZE_MAX","SP_get_state","SP_set_state","STDERR_FILENO","STDIN_FILENO","STDOUT_FILENO","S__fillbuf","S__fupdatefilepos_getc","S__getiob","S__iob","Scanrepresent","ScheckBOM","Scleanup","Sclearerr","Sclose","Sclose_function","Sclosehook","Scontrol_function","Sdprintf","SdprintfX","Sfdopen","Sfeof","Sferror","Sfgetc","Sfgets","Sfilefunctions","Sfileno","Sflush","Sfpasteof","Sfprintf","SfprintfX","Sfputs","Sfread","Sfree","Sfwrite","Sgcclose","Sgetcode","Sgets","Sgetw","SinitStreams","Slinesize","Slock","Snew","Some","Some","Some","Some","Some","Some","Some","Some","Some","Some","Some","Some","Sopen_file","Sopen_iri_or_file","Sopen_pipe","Sopen_string","Sopenmem","Speekcode","Spending","Sprintf","Sputc","Sputcode","Sputs","Sputw","Sread_function","Sread_pending","Sreset","Sseek","Sseek64","Sseek64_function","Sseek_function","Sset_exception","Sset_filter","Sset_timeout","Ssetbuffer","Ssetenc","Sseterr","Ssetlocale","Ssize","Ssnprintf","SsnprintfX","Ssprintf","Stell","Stell64","StryLock","Sungetc","Sunit_size","Sunlock","Svdprintf","Svfprintf","Svprintf","Svsnprintf","Svsprintf","SwriteBOM","Swrite_function","TRUE","UINT16_MAX","UINT32_MAX","UINT8_MAX","UINTPTR_MAX","UINT_FAST16_MAX","UINT_FAST32_MAX","UINT_FAST8_MAX","UINT_LEAST16_MAX","UINT_LEAST32_MAX","UINT_LEAST8_MAX","WCONTINUED","WEOF","WEXITED","WINT_MAX","WINT_MIN","WNOHANG","WNOWAIT","WSTOPPED","WUNTRACED","W_OK","X_OK","_ALLOCA_H","_ATFILE_SOURCE","_BITS_BYTESWAP_H","_BITS_ENDIANNESS_H","_BITS_ENDIAN_H","_BITS_POSIX_OPT_H","_BITS_PTHREADTYPES_ARCH_H","_BITS_PTHREADTYPES_COMMON_H","_BITS_STDINT_INTN_H","_BITS_STDINT_UINTN_H","_BITS_TIME64_H","_BITS_TYPESIZES_H","_BITS_TYPES_H","_BITS_TYPES_LOCALE_T_H","_BITS_TYPES___LOCALE_T_H","_BITS_UINTN_IDENTITY_H","_BITS_WCHAR_H","_CS_GNU_LIBC_VERSION","_CS_GNU_LIBPTHREAD_VERSION","_CS_LFS64_CFLAGS","_CS_LFS64_LDFLAGS","_CS_LFS64_LIBS","_CS_LFS64_LINTFLAGS","_CS_LFS_CFLAGS","_CS_LFS_LDFLAGS","_CS_LFS_LIBS","_CS_LFS_LINTFLAGS","_CS_PATH","_CS_POSIX_V6_ILP32_OFF32_CFLAGS","_CS_POSIX_V6_ILP32_OFF32_LDFLAGS","_CS_POSIX_V6_ILP32_OFF32_LIBS","_CS_POSIX_V6_ILP32_OFF32_LINTFLAGS","_CS_POSIX_V6_ILP32_OFFBIG_CFLAGS","_CS_POSIX_V6_ILP32_OFFBIG_LDFLAGS","_CS_POSIX_V6_ILP32_OFFBIG_LIBS","_CS_POSIX_V6_ILP32_OFFBIG_LINTFLAGS","_CS_POSIX_V6_LP64_OFF64_CFLAGS","_CS_POSIX_V6_LP64_OFF64_LDFLAGS","_CS_POSIX_V6_LP64_OFF64_LIBS","_CS_POSIX_V6_LP64_OFF64_LINTFLAGS","_CS_POSIX_V6_LPBIG_OFFBIG_CFLAGS","_CS_POSIX_V6_LPBIG_OFFBIG_LDFLAGS","_CS_POSIX_V6_LPBIG_OFFBIG_LIBS","_CS_POSIX_V6_LPBIG_OFFBIG_LINTFLAGS","_CS_POSIX_V7_ILP32_OFF32_CFLAGS","_CS_POSIX_V7_ILP32_OFF32_LDFLAGS","_CS_POSIX_V7_ILP32_OFF32_LIBS","_CS_POSIX_V7_ILP32_OFF32_LINTFLAGS","_CS_POSIX_V7_ILP32_OFFBIG_CFLAGS","_CS_POSIX_V7_ILP32_OFFBIG_LDFLAGS","_CS_POSIX_V7_ILP32_OFFBIG_LIBS","_CS_POSIX_V7_ILP32_OFFBIG_LINTFLAGS","_CS_POSIX_V7_LP64_OFF64_CFLAGS","_CS_POSIX_V7_LP64_OFF64_LDFLAGS","_CS_POSIX_V7_LP64_OFF64_LIBS","_CS_POSIX_V7_LP64_OFF64_LINTFLAGS","_CS_POSIX_V7_LPBIG_OFFBIG_CFLAGS","_CS_POSIX_V7_LPBIG_OFFBIG_LDFLAGS","_CS_POSIX_V7_LPBIG_OFFBIG_LIBS","_CS_POSIX_V7_LPBIG_OFFBIG_LINTFLAGS","_CS_V5_WIDTH_RESTRICTED_ENVS","_CS_V6_ENV","_CS_V6_WIDTH_RESTRICTED_ENVS","_CS_V7_ENV","_CS_V7_WIDTH_RESTRICTED_ENVS","_CS_XBS5_ILP32_OFF32_CFLAGS","_CS_XBS5_ILP32_OFF32_LDFLAGS","_CS_XBS5_ILP32_OFF32_LIBS","_CS_XBS5_ILP32_OFF32_LINTFLAGS","_CS_XBS5_ILP32_OFFBIG_CFLAGS","_CS_XBS5_ILP32_OFFBIG_LDFLAGS","_CS_XBS5_ILP32_OFFBIG_LIBS","_CS_XBS5_ILP32_OFFBIG_LINTFLAGS","_CS_XBS5_LP64_OFF64_CFLAGS","_CS_XBS5_LP64_OFF64_LDFLAGS","_CS_XBS5_LP64_OFF64_LIBS","_CS_XBS5_LP64_OFF64_LINTFLAGS","_CS_XBS5_LPBIG_OFFBIG_CFLAGS","_CS_XBS5_LPBIG_OFFBIG_LDFLAGS","_CS_XBS5_LPBIG_OFFBIG_LIBS","_CS_XBS5_LPBIG_OFFBIG_LINTFLAGS","_DEFAULT_SOURCE","_ENDIAN_H","_Exit","_FEATURES_H","_Float32","_Float32x","_Float64","_Float64x","_GETOPT_CORE_H","_GETOPT_POSIX_H","_INTTYPES_H","_IO_FILE","_LFS64_ASYNCHRONOUS_IO","_LFS64_LARGEFILE","_LFS64_STDIO","_LFS_ASYNCHRONOUS_IO","_LFS_LARGEFILE","_PC_2_SYMLINKS","_PC_ALLOC_SIZE_MIN","_PC_ASYNC_IO","_PC_CHOWN_RESTRICTED","_PC_FILESIZEBITS","_PC_LINK_MAX","_PC_MAX_CANON","_PC_MAX_INPUT","_PC_NAME_MAX","_PC_NO_TRUNC","_PC_PATH_MAX","_PC_PIPE_BUF","_PC_PRIO_IO","_PC_REC_INCR_XFER_SIZE","_PC_REC_MAX_XFER_SIZE","_PC_REC_MIN_XFER_SIZE","_PC_REC_XFER_ALIGN","_PC_SOCK_MAXBUF","_PC_SYMLINK_MAX","_PC_SYNC_IO","_PC_VDISABLE","_PL_PREDICATE_INDICATOR","_PL_atoms","_PL_cons_small_int","_PL_get_arg","_PL_get_arg_sz","_PL_get_atomic","_PL_get_xpce_reference","_PL_opt_enum_t","_PL_opt_enum_t_OPT_ATOM","_PL_opt_enum_t_OPT_BOOL","_PL_opt_enum_t_OPT_DOUBLE","_PL_opt_enum_t_OPT_INT","_PL_opt_enum_t_OPT_INT64","_PL_opt_enum_t_OPT_LOCALE","_PL_opt_enum_t_OPT_SIZE","_PL_opt_enum_t_OPT_STRING","_PL_opt_enum_t_OPT_TERM","_PL_opt_enum_t_OPT_UINT64","_PL_opt_enum_t__OPT_END","_PL_put_atomic","_PL_put_xpce_reference_a","_PL_put_xpce_reference_i","_PL_retry","_PL_retry_address","_PL_streams","_PL_unify_atomic","_PL_unify_xpce_reference","_PL_unregister_keys","_PL_yield_address","_POSIX2_CHAR_TERM","_POSIX2_C_BIND","_POSIX2_C_DEV","_POSIX2_C_VERSION","_POSIX2_LOCALEDEF","_POSIX2_SW_DEV","_POSIX2_VERSION","_POSIX_ADVISORY_INFO","_POSIX_ASYNCHRONOUS_IO","_POSIX_ASYNC_IO","_POSIX_BARRIERS","_POSIX_CHOWN_RESTRICTED","_POSIX_CLOCK_SELECTION","_POSIX_CPUTIME","_POSIX_C_SOURCE","_POSIX_FSYNC","_POSIX_IPV6","_POSIX_JOB_CONTROL","_POSIX_MAPPED_FILES","_POSIX_MEMLOCK","_POSIX_MEMLOCK_RANGE","_POSIX_MEMORY_PROTECTION","_POSIX_MESSAGE_PASSING","_POSIX_MONOTONIC_CLOCK","_POSIX_NO_TRUNC","_POSIX_PRIORITIZED_IO","_POSIX_PRIORITY_SCHEDULING","_POSIX_RAW_SOCKETS","_POSIX_READER_WRITER_LOCKS","_POSIX_REALTIME_SIGNALS","_POSIX_REENTRANT_FUNCTIONS","_POSIX_REGEXP","_POSIX_SAVED_IDS","_POSIX_SEMAPHORES","_POSIX_SHARED_MEMORY_OBJECTS","_POSIX_SHELL","_POSIX_SOURCE","_POSIX_SPAWN","_POSIX_SPIN_LOCKS","_POSIX_SPORADIC_SERVER","_POSIX_SYNCHRONIZED_IO","_POSIX_THREADS","_POSIX_THREAD_ATTR_STACKADDR","_POSIX_THREAD_ATTR_STACKSIZE","_POSIX_THREAD_CPUTIME","_POSIX_THREAD_PRIORITY_SCHEDULING","_POSIX_THREAD_PRIO_INHERIT","_POSIX_THREAD_PRIO_PROTECT","_POSIX_THREAD_PROCESS_SHARED","_POSIX_THREAD_ROBUST_PRIO_INHERIT","_POSIX_THREAD_ROBUST_PRIO_PROTECT","_POSIX_THREAD_SAFE_FUNCTIONS","_POSIX_THREAD_SPORADIC_SERVER","_POSIX_TIMEOUTS","_POSIX_TIMERS","_POSIX_TRACE","_POSIX_TRACE_EVENT_FILTER","_POSIX_TRACE_INHERIT","_POSIX_TRACE_LOG","_POSIX_TYPED_MEMORY_OBJECTS","_POSIX_V6_LP64_OFF64","_POSIX_V6_LPBIG_OFFBIG","_POSIX_V7_LP64_OFF64","_POSIX_V7_LPBIG_OFFBIG","_POSIX_VDISABLE","_POSIX_VERSION","_SC_2_CHAR_TERM","_SC_2_C_BIND","_SC_2_C_DEV","_SC_2_C_VERSION","_SC_2_FORT_DEV","_SC_2_FORT_RUN","_SC_2_LOCALEDEF","_SC_2_PBS","_SC_2_PBS_ACCOUNTING","_SC_2_PBS_CHECKPOINT","_SC_2_PBS_LOCATE","_SC_2_PBS_MESSAGE","_SC_2_PBS_TRACK","_SC_2_SW_DEV","_SC_2_UPE","_SC_2_VERSION","_SC_ADVISORY_INFO","_SC_AIO_LISTIO_MAX","_SC_AIO_MAX","_SC_AIO_PRIO_DELTA_MAX","_SC_ARG_MAX","_SC_ASYNCHRONOUS_IO","_SC_ATEXIT_MAX","_SC_AVPHYS_PAGES","_SC_BARRIERS","_SC_BASE","_SC_BC_BASE_MAX","_SC_BC_DIM_MAX","_SC_BC_SCALE_MAX","_SC_BC_STRING_MAX","_SC_CHARCLASS_NAME_MAX","_SC_CHAR_BIT","_SC_CHAR_MAX","_SC_CHAR_MIN","_SC_CHILD_MAX","_SC_CLK_TCK","_SC_CLOCK_SELECTION","_SC_COLL_WEIGHTS_MAX","_SC_CPUTIME","_SC_C_LANG_SUPPORT","_SC_C_LANG_SUPPORT_R","_SC_DELAYTIMER_MAX","_SC_DEVICE_IO","_SC_DEVICE_SPECIFIC","_SC_DEVICE_SPECIFIC_R","_SC_EQUIV_CLASS_MAX","_SC_EXPR_NEST_MAX","_SC_FD_MGMT","_SC_FIFO","_SC_FILE_ATTRIBUTES","_SC_FILE_LOCKING","_SC_FILE_SYSTEM","_SC_FSYNC","_SC_GETGR_R_SIZE_MAX","_SC_GETPW_R_SIZE_MAX","_SC_HOST_NAME_MAX","_SC_INT_MAX","_SC_INT_MIN","_SC_IOV_MAX","_SC_IPV6","_SC_JOB_CONTROL","_SC_LEVEL1_DCACHE_ASSOC","_SC_LEVEL1_DCACHE_LINESIZE","_SC_LEVEL1_DCACHE_SIZE","_SC_LEVEL1_ICACHE_ASSOC","_SC_LEVEL1_ICACHE_LINESIZE","_SC_LEVEL1_ICACHE_SIZE","_SC_LEVEL2_CACHE_ASSOC","_SC_LEVEL2_CACHE_LINESIZE","_SC_LEVEL2_CACHE_SIZE","_SC_LEVEL3_CACHE_ASSOC","_SC_LEVEL3_CACHE_LINESIZE","_SC_LEVEL3_CACHE_SIZE","_SC_LEVEL4_CACHE_ASSOC","_SC_LEVEL4_CACHE_LINESIZE","_SC_LEVEL4_CACHE_SIZE","_SC_LINE_MAX","_SC_LOGIN_NAME_MAX","_SC_LONG_BIT","_SC_MAPPED_FILES","_SC_MB_LEN_MAX","_SC_MEMLOCK","_SC_MEMLOCK_RANGE","_SC_MEMORY_PROTECTION","_SC_MESSAGE_PASSING","_SC_MINSIGSTKSZ","_SC_MONOTONIC_CLOCK","_SC_MQ_OPEN_MAX","_SC_MQ_PRIO_MAX","_SC_MULTI_PROCESS","_SC_NETWORKING","_SC_NGROUPS_MAX","_SC_NL_ARGMAX","_SC_NL_LANGMAX","_SC_NL_MSGMAX","_SC_NL_NMAX","_SC_NL_SETMAX","_SC_NL_TEXTMAX","_SC_NPROCESSORS_CONF","_SC_NPROCESSORS_ONLN","_SC_NZERO","_SC_OPEN_MAX","_SC_PAGESIZE","_SC_PASS_MAX","_SC_PHYS_PAGES","_SC_PII","_SC_PII_INTERNET","_SC_PII_INTERNET_DGRAM","_SC_PII_INTERNET_STREAM","_SC_PII_OSI","_SC_PII_OSI_CLTS","_SC_PII_OSI_COTS","_SC_PII_OSI_M","_SC_PII_SOCKET","_SC_PII_XTI","_SC_PIPE","_SC_POLL","_SC_PRIORITIZED_IO","_SC_PRIORITY_SCHEDULING","_SC_RAW_SOCKETS","_SC_READER_WRITER_LOCKS","_SC_REALTIME_SIGNALS","_SC_REGEXP","_SC_REGEX_VERSION","_SC_RE_DUP_MAX","_SC_RTSIG_MAX","_SC_SAVED_IDS","_SC_SCHAR_MAX","_SC_SCHAR_MIN","_SC_SELECT","_SC_SEMAPHORES","_SC_SEM_NSEMS_MAX","_SC_SEM_VALUE_MAX","_SC_SHARED_MEMORY_OBJECTS","_SC_SHELL","_SC_SHRT_MAX","_SC_SHRT_MIN","_SC_SIGNALS","_SC_SIGQUEUE_MAX","_SC_SIGSTKSZ","_SC_SINGLE_PROCESS","_SC_SPAWN","_SC_SPIN_LOCKS","_SC_SPORADIC_SERVER","_SC_SSIZE_MAX","_SC_SS_REPL_MAX","_SC_STREAMS","_SC_STREAM_MAX","_SC_SYMLOOP_MAX","_SC_SYNCHRONIZED_IO","_SC_SYSTEM_DATABASE","_SC_SYSTEM_DATABASE_R","_SC_THREADS","_SC_THREAD_ATTR_STACKADDR","_SC_THREAD_ATTR_STACKSIZE","_SC_THREAD_CPUTIME","_SC_THREAD_DESTRUCTOR_ITERATIONS","_SC_THREAD_KEYS_MAX","_SC_THREAD_PRIORITY_SCHEDULING","_SC_THREAD_PRIO_INHERIT","_SC_THREAD_PRIO_PROTECT","_SC_THREAD_PROCESS_SHARED","_SC_THREAD_ROBUST_PRIO_INHERIT","_SC_THREAD_ROBUST_PRIO_PROTECT","_SC_THREAD_SAFE_FUNCTIONS","_SC_THREAD_SPORADIC_SERVER","_SC_THREAD_STACK_MIN","_SC_THREAD_THREADS_MAX","_SC_TIMEOUTS","_SC_TIMERS","_SC_TIMER_MAX","_SC_TRACE","_SC_TRACE_EVENT_FILTER","_SC_TRACE_EVENT_NAME_MAX","_SC_TRACE_INHERIT","_SC_TRACE_LOG","_SC_TRACE_NAME_MAX","_SC_TRACE_SYS_MAX","_SC_TRACE_USER_EVENT_MAX","_SC_TTY_NAME_MAX","_SC_TYPED_MEMORY_OBJECTS","_SC_TZNAME_MAX","_SC_T_IOV_MAX","_SC_UCHAR_MAX","_SC_UINT_MAX","_SC_UIO_MAXIOV","_SC_ULONG_MAX","_SC_USER_GROUPS","_SC_USER_GROUPS_R","_SC_USHRT_MAX","_SC_V6_ILP32_OFF32","_SC_V6_ILP32_OFFBIG","_SC_V6_LP64_OFF64","_SC_V6_LPBIG_OFFBIG","_SC_V7_ILP32_OFF32","_SC_V7_ILP32_OFFBIG","_SC_V7_LP64_OFF64","_SC_V7_LPBIG_OFFBIG","_SC_VERSION","_SC_WORD_BIT","_SC_XBS5_ILP32_OFF32","_SC_XBS5_ILP32_OFFBIG","_SC_XBS5_LP64_OFF64","_SC_XBS5_LPBIG_OFFBIG","_SC_XOPEN_CRYPT","_SC_XOPEN_ENH_I18N","_SC_XOPEN_LEGACY","_SC_XOPEN_REALTIME","_SC_XOPEN_REALTIME_THREADS","_SC_XOPEN_SHM","_SC_XOPEN_STREAMS","_SC_XOPEN_UNIX","_SC_XOPEN_VERSION","_SC_XOPEN_XCU_VERSION","_SC_XOPEN_XPG2","_SC_XOPEN_XPG3","_SC_XOPEN_XPG4","_STDC_PREDEF_H","_STDINT_H","_STDLIB_H","_STRUCT_TIMESPEC","_SYS_CDEFS_H","_SYS_SELECT_H","_SYS_TYPES_H","_THREAD_MUTEX_INTERNAL_H","_THREAD_SHARED_TYPES_H","_UNISTD_H","_WCHAR_H","_WINT_T","_XBS5_LP64_OFF64","_XBS5_LPBIG_OFFBIG","_XOPEN_ENH_I18N","_XOPEN_LEGACY","_XOPEN_REALTIME","_XOPEN_REALTIME_THREADS","_XOPEN_SHM","_XOPEN_UNIX","_XOPEN_VERSION","_XOPEN_XCU_VERSION","_XOPEN_XPG2","_XOPEN_XPG3","_XOPEN_XPG4","__BIG_ENDIAN","__BIT_TYPES_DEFINED__","__BYTE_ORDER","__BindgenBitfieldUnit","__FD_SETSIZE","__FILE","__FILE_defined","__FLOAT_WORD_ORDER","__GLIBC_MINOR__","__GLIBC_USE_DEPRECATED_GETS","__GLIBC_USE_DEPRECATED_SCANF","__GLIBC_USE_IEC_60559_BFP_EXT","__GLIBC_USE_IEC_60559_BFP_EXT_C2X","__GLIBC_USE_IEC_60559_EXT","__GLIBC_USE_IEC_60559_FUNCS_EXT","__GLIBC_USE_IEC_60559_FUNCS_EXT_C2X","__GLIBC_USE_IEC_60559_TYPES_EXT","__GLIBC_USE_ISOC2X","__GLIBC_USE_LIB_EXT2","__GLIBC__","__GNUC_VA_LIST","__GNU_LIBRARY__","__HAVE_DISTINCT_FLOAT128","__HAVE_DISTINCT_FLOAT128X","__HAVE_DISTINCT_FLOAT16","__HAVE_DISTINCT_FLOAT32","__HAVE_DISTINCT_FLOAT32X","__HAVE_DISTINCT_FLOAT64","__HAVE_DISTINCT_FLOAT64X","__HAVE_FLOAT128","__HAVE_FLOAT128X","__HAVE_FLOAT16","__HAVE_FLOAT32","__HAVE_FLOAT32X","__HAVE_FLOAT64","__HAVE_FLOAT64X","__HAVE_FLOAT64X_LONG_DOUBLE","__HAVE_FLOATN_NOT_TYPEDEF","__HAVE_GENERIC_SELECTION","__ILP32_OFF32_CFLAGS","__ILP32_OFF32_LDFLAGS","__ILP32_OFFBIG_CFLAGS","__ILP32_OFFBIG_LDFLAGS","__INO_T_MATCHES_INO64_T","__KERNEL_OLD_TIMEVAL_MATCHES_TIMEVAL64","__LDOUBLE_REDIRECTS_TO_FLOAT128_ABI","__LITTLE_ENDIAN","__LP64_OFF64_CFLAGS","__LP64_OFF64_LDFLAGS","__OFF_T_MATCHES_OFF64_T","__PDP_ENDIAN","__PL_PL_local_data","__PL_code","__PL_foreign_context","__PL_localFrame","__PL_module","__PL_procedure","__PL_queryFrame","__PL_queryRef","__PL_record","__PL_table","__PL_table_enum","__PL_word","__POSIX2_THIS_VERSION","__PRI64_PREFIX","__PRIPTR_PREFIX","__PTHREAD_MUTEX_HAVE_PREV","__RLIM_T_MATCHES_RLIM64_T","__SIZEOF_PTHREAD_ATTR_T","__SIZEOF_PTHREAD_BARRIERATTR_T","__SIZEOF_PTHREAD_BARRIER_T","__SIZEOF_PTHREAD_CONDATTR_T","__SIZEOF_PTHREAD_COND_T","__SIZEOF_PTHREAD_MUTEXATTR_T","__SIZEOF_PTHREAD_MUTEX_T","__SIZEOF_PTHREAD_RWLOCKATTR_T","__SIZEOF_PTHREAD_RWLOCK_T","__STATFS_MATCHES_STATFS64","__STDC_IEC_559_COMPLEX__","__STDC_IEC_559__","__STDC_IEC_60559_BFP__","__STDC_IEC_60559_COMPLEX__","__STDC_ISO_10646__","__SYSCALL_WORDSIZE","__TIMESIZE","__USE_ATFILE","__USE_FORTIFY_LEVEL","__USE_ISOC11","__USE_ISOC95","__USE_ISOC99","__USE_MISC","__USE_POSIX","__USE_POSIX199309","__USE_POSIX199506","__USE_POSIX2","__USE_POSIX_IMPLICITLY","__USE_XOPEN2K","__USE_XOPEN2K8","__WALL","__WCLONE","__WCOREFLAG","__WNOTHREAD","__WORDSIZE","__WORDSIZE_TIME64_COMPAT32","__W_CONTINUED","____FILE_defined","____gwchar_t_defined","____mbstate_t_defined","__a","__align","__align","__align","__align","__align","__align","__align","__align","__align","__atomic_wide_counter","__atomic_wide_counter__bindgen_ty_1","__bindgen_padding_0","__blkcnt64_t","__blkcnt_t","__blksize_t","__builtin_va_list","__c","__caddr_t","__clang_max_align_nonce1","__clang_max_align_nonce2","__clock_t","__clock_t_defined","__clockid_t","__clockid_t_defined","__compar_fn_t","__count","__count","__count","__ctype_b","__ctype_get_mb_cur_max","__ctype_tolower","__ctype_toupper","__cur_writer","__daddr_t","__data","__data","__data","__data","__dev_t","__elision","__environ","__fd_mask","__fds_bits","__flags","__fsblkcnt64_t","__fsblkcnt_t","__fsfilcnt64_t","__fsfilcnt_t","__fsid_t","__fsword_t","__g1_orig_size","__g1_start","__g_refs","__g_signals","__g_size","__getpgid","__gid_t","__glibc_c99_flexarr_available","__gnuc_va_list","__gwchar_t","__have_pthread_attr_t","__high","__id_t","__init","__ino64_t","__ino_t","__int16_t","__int32_t","__int64_t","__int8_t","__int_least16_t","__int_least32_t","__int_least64_t","__int_least8_t","__intmax_t","__intptr_t","__key_t","__kind","__ldiv_t_defined","__list","__lldiv_t_defined","__locale_data","__locale_struct","__locale_t","__locales","__lock","__loff_t","__low","__mbrlen","__mbstate_t","__mbstate_t__bindgen_ty_1","__mbstate_t_defined","__mode_t","__names","__next","__next","__next","__next","__nlink_t","__nusers","__off64_t","__off_t","__old_x","__once_flag","__owner","__pad1","__pad2","__pad3","__pad4","__pid_t","__prev","__prev","__pthread_cond_s","__pthread_internal_list","__pthread_internal_slist","__pthread_list_t","__pthread_mutex_s","__pthread_rwlock_arch_t","__pthread_slist_t","__quad_t","__readers","__rlim64_t","__rlim_t","__rwelision","__shared","__sig_atomic_t","__sigset_t","__sigset_t_defined","__size","__size","__size","__size","__size","__size","__size","__size","__size","__socklen_t","__spins","__ssize_t","__suseconds64_t","__suseconds_t","__syscall_slong_t","__syscall_ulong_t","__thrd_t","__time_t","__time_t_defined","__timer_t","__timer_t_defined","__timeval_defined","__tss_t","__u_char","__u_int","__u_long","__u_quad_t","__u_short","__uid_t","__uint16_t","__uint32_t","__uint64_t","__uint8_t","__uint_least16_t","__uint_least32_t","__uint_least64_t","__uint_least8_t","__uintmax_t","__useconds_t","__va_list_tag","__val","__val","__val","__val","__value","__value","__value32","__value64","__wch","__wchb","__wint_t_defined","__wrefs","__writers","__writers_futex","__wrphase_futex","__wseq","__x","_address","_address","_address","_address","_bindgen_ty_1","_bindgen_ty_2","_bindgen_ty_3","_bitfield_1","_bitfield_1","_bitfield_align_1","_bitfield_align_1","_exit","a","a","a64l","abort","abs","access","acct","acquire","activate","alarm","alias","aligned_alloc","alloca","arity","arity","at_quick_exit","atexit","atof","atoi","atol","atoll","atom_name","atom_t","blkcnt_t","blksize_t","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","brk","bsearch","btowc","buf_mark_t","buffer","buffer","bufp","bufp","bufsize","bufsize","byteno","byteno","caddr_t","calloc","cancel","charno","charno","chdir","chown","chroot","clearenv","clock_t","clockid_t","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","close","close","close","close_hook","close_hook","closefrom","closure","closure","cmp","compare","confstr","context","context","control","control","control_t","crypt","daddr_t","daemon","default","dev_t","div","div_t","downstream","downstream","drand48","drand48_data","drand48_r","dummy","dup","dup2","ecvt","ecvt_r","encoding","encoding","end_ptr","endusershell","eq","erand48","erand48_r","erased","exception","exception","execl","execle","execlp","execv","execve","execvp","exit","f","faccessat","fchdir","fchown","fchownat","fcvt","fcvt_r","fd_mask","fd_set","fdatasync","fexecve","fgetwc","fgetws","flags","flags","flags","flags","flags","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","foreign_t","fork","fp_offset","fpathconf","fptr","fputwc","fputws","fr","free","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","fsblkcnt_t","fsfilcnt_t","fsid_t","fsync","ftruncate","function","functions","functions","functor_t","fwide","fwprintf","fwscanf","fwscanf1","gcvt","get","get","get_bit","getcwd","getdomainname","getdtablesize","getegid","getentropy","getenv","geteuid","getgid","getgroups","gethostid","gethostname","getloadavg","getlogin","getlogin_r","getopt","getpagesize","getpass","getpgid","getpgrp","getpid","getppid","getsid","getsubopt","getuid","getusershell","getwc","getwchar","getwd","gid_t","gp_offset","handle","handle","hash","hash_table_enum_t","hash_table_t","i","i","id_t","imaxabs","imaxdiv","imaxdiv_t","initstate","initstate_r","ino_t","int_fast16_t","int_fast32_t","int_fast64_t","int_fast8_t","int_least16_t","int_least32_t","int_least64_t","int_least8_t","intmax_t","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","io_errno","io_errno","io_functions","io_position","io_stream","isatty","jrand48","jrand48_r","key_t","l64a","labs","lastc","lastc","lchown","lcong48","lcong48_r","ld","ldiv","ldiv_t","limitp","limitp","lineno","lineno","linepos","linepos","link","linkat","llabs","lldiv","lldiv_t","load","locale","locale","locale_t","lockf","locks","locks","loff_t","lrand48","lrand48_r","lseek","magic","magic","magic","magic","malloc","max_align_t","max_queue_size","mblen","mbrlen","mbrtowc","mbsinit","mbsnrtowcs","mbsrtowcs","mbstate","mbstate","mbstate_t","mbstowcs","mbtowc","message","message","mkdtemp","mkstemp","mkstemps","mktemp","mode_t","module_t","mrand48","mrand48_r","mutex","mutex","name","name","name","new","new_bitfield_1","newline","next","nice","nlink_t","nrand48","nrand48_r","off_t","on_exit","open_wmemstream","optarg","opterr","optind","optopt","overflow_arg_area","padding","partial_cmp","pathconf","pause","pc","pid_t","pipe","pl_context_t","pl_function_t","pl_sigaction","pl_sigaction_t","pl_wchar_t","posbuf","posbuf","position","position","posix_memalign","pread","predicate_name","predicate_t","profil","pselect","pthread_attr_t","pthread_barrier_t","pthread_barrierattr_t","pthread_cond_t","pthread_condattr_t","pthread_key_t","pthread_mutex_t","pthread_mutexattr_t","pthread_once_t","pthread_rwlock_t","pthread_rwlockattr_t","pthread_spinlock_t","pthread_t","putenv","putwc","putwchar","pwrite","qecvt","qecvt_r","qf","qfcvt","qfcvt_r","qgcvt","qid_t","qsort","quad_t","quick_exit","quot","quot","quot","quot","rand","rand_deg","rand_r","rand_sep","rand_type","random","random_data","random_r","rank","rc_cancel","rc_cancel_PL_THREAD_CANCEL_FAILED","rc_cancel_PL_THREAD_CANCEL_JOINED","rc_cancel_PL_THREAD_CANCEL_MUST_JOIN","read","read","read","readlink","readlinkat","realloc","reallocarray","realpath","record_t","recursiveMutex","references","references","reg_save_area","register_t","registered","release","release","rem","rem","rem","rem","reserved","reserved","reserved","reserved","reserved","reserved","reserved","reserved","reserved","revoke","rmdir","rpmatch","rptr","s","sa_cfunction","sa_cfunction","sa_flags","sa_flags","sa_predicate","sa_predicate","save","sbrk","seed48","seed48_r","seek","seek","seek64","seek64","select","set","set_bit","set_erased","set_newline","setdomainname","setegid","setenv","seteuid","setgid","sethostid","sethostname","setlogin","setpgid","setpgrp","setregid","setreuid","setsid","setstate","setstate_r","setuid","setusershell","sigset_t","sleep","socklen_t","srand","srand48","srand48_r","srandom","srandom_r","stack_limit","state","string","strtod","strtof","strtoimax","strtol","strtold","strtoll","strtoq","strtoul","strtoull","strtoumax","strtouq","suseconds_t","swprintf","swscanf","swscanf1","symlink","symlinkat","sync","syscall","sysconf","system","t","table_space","tcgetpgrp","tcsetpgrp","tee","tee","term_t","term_value_t","term_value_t__bindgen_ty_1","time_t","timeout","timeout","timer_t","timespec","timeval","tm","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","truncate","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","ttyname","ttyname_r","ttyslot","tv_nsec","tv_sec","tv_sec","tv_usec","type_","type_","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","u_char","u_int","u_int16_t","u_int32_t","u_int64_t","u_int8_t","u_long","u_quad_t","u_short","ualarm","uid_t","uint","uint_fast16_t","uint_fast32_t","uint_fast64_t","uint_fast8_t","uint_least16_t","uint_least32_t","uint_least64_t","uint_least8_t","uintmax_t","ulong","unbuffer","unbuffer","ungetwc","unify","unlink","unlinkat","unsetenv","upstream","upstream","useconds_t","ushort","usleep","va_list","valloc","value","vfork","vfwprintf","vfwscanf","vfwscanf1","vhangup","vswprintf","vswscanf","vswscanf1","vwprintf","vwscanf","vwscanf1","wchar_t","wcpcpy","wcpncpy","wcrtomb","wcscasecmp","wcscasecmp_l","wcscat","wcschr","wcscmp","wcscoll","wcscoll_l","wcscpy","wcscspn","wcsdup","wcsftime","wcslen","wcsncasecmp","wcsncasecmp_l","wcsncat","wcsncmp","wcsncpy","wcsnlen","wcsnrtombs","wcspbrk","wcsrchr","wcsrtombs","wcsspn","wcsstr","wcstod","wcstof","wcstoimax","wcstok","wcstol","wcstold","wcstoll","wcstombs","wcstoul","wcstoull","wcstoumax","wcsxfrm","wcsxfrm_l","wctob","wctomb","wint_t","wmemchr","wmemcmp","wmemcpy","wmemmove","wmemset","wprintf","write","write","write","write","wscanf","wscanf1","xpceref_t","xpceref_t__bindgen_ty_1"],"q":[[0,"swipl_fli"],[3015,"core::clone"],[3016,"core::cmp"],[3017,"core::cmp"],[3018,"core::cmp"],[3019,"core::fmt"],[3020,"core::fmt"],[3021,"core::convert"],[3022,"core::hash"],[3023,"core::cmp"],[3024,"core::any"]],"d":["","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","No value.","No value.","No value.","No value.","No value.","No value.","No value.","No value.","No value.","No value.","No value.","No valuet\\t*","","","","MODULES            *","","","","","","","","","QUINTUS/SICSTUS WRAPPER\\t*","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","DYNAMIC LINKING\\t*","","","","","","","","","","REGISTERING FOREIGNS     *","","","","","","","","","","","","","","","","","","","","","ERRORS\\t\\t*","","","","","","","","","","","TABLING            *","","","","","","","","WIDE INTEGERS\\t*","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","ATTRIBUTED VARIABLES\\t*","","","","","","","","","","","","","","","","LICENSE\\t\\t*","","","","","MEMORY ALLOCATION\\t*","","","","","","","","","","","","","","","","","","","","TERM-REFERENCES\\t*","","","","","","","","","","","","","PROFILER\\t\\t*","DEBUG\\t\\t*","","","","","","","","","","","","","","","","","","","","","","","","","","","","WIDE CHARACTER VERSIONS\\t*","","","","","","","","","","","","","","","","","RECORDED DATABASE\\t*","","","","","","","","","","","","","","","","","","","","","","","","","LISTS\\t\\tome value of type <code>T</code>.","Some value of type <code>T</code>.","Some value of type <code>T</code>.","Some value of type <code>T</code>.","Some value of type <code>T</code>.","Some value of type <code>T</code>.","Some value of type <code>T</code>.","Some value of type <code>T</code>.","Some value of type <code>T</code>.","Some value of type <code>T</code>.","Some value of type <code>T</code>.","Some value of type <code>T</codet\\t*","","","","INTERNAL FUNCTIONS\\t*","","OPTIONS\\t\\tt\\teturns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","HASH TABLES\\t\\t*","","","","","","","","","","","","","","","","","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","TRACE SUPPORT\\tt*",""],"i":[0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,88,89,90,91,92,93,94,95,96,97,98,99,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,88,89,90,91,92,93,94,95,96,97,98,99,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,40,30,31,32,33,34,35,36,37,38,0,0,9,0,0,0,0,40,0,9,9,0,0,0,0,0,100,4,26,7,0,7,7,27,0,29,33,34,35,0,26,0,0,21,27,0,0,0,0,0,0,28,28,28,28,28,0,0,0,0,0,0,23,0,40,0,0,0,0,0,0,0,0,0,0,0,0,0,26,0,26,0,0,0,0,7,26,0,23,0,0,0,0,0,7,101,102,24,25,0,26,0,0,40,0,26,27,27,27,27,0,101,24,0,0,0,0,0,0,0,0,27,0,0,27,27,0,0,0,30,31,32,33,34,35,36,37,38,0,26,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,103,104,3,18,100,4,22,22,5,5,0,28,27,27,27,28,40,61,62,63,64,0,0,0,105,14,105,14,0,47,58,0,0,0,0,0,50,56,0,53,0,0,48,49,0,0,0,0,0,0,50,0,0,0,1,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,1,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,0,0,0,0,105,14,105,14,105,14,106,13,0,0,53,106,13,0,0,0,0,0,0,1,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,1,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,0,107,12,105,14,0,105,14,1,50,0,105,14,107,12,0,0,0,0,1,0,0,0,105,14,0,0,0,56,0,0,0,0,105,14,39,0,1,0,0,14,105,14,0,0,0,0,0,0,0,47,0,0,0,0,0,0,0,0,0,0,0,0,105,14,49,50,53,1,3,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,23,24,25,26,27,29,39,40,41,42,43,44,45,46,48,49,50,51,52,53,54,55,56,59,60,61,62,63,64,0,0,60,0,39,0,0,59,0,1,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,0,0,0,0,0,49,105,14,0,0,0,0,0,0,1,56,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,60,105,14,1,0,0,47,58,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,105,14,0,0,0,0,0,0,0,0,0,105,14,0,0,0,59,0,0,105,14,106,13,106,13,0,0,0,0,0,50,105,14,0,0,105,14,0,0,0,0,105,14,50,56,0,0,53,0,0,0,0,0,0,105,14,0,0,0,105,14,0,0,0,0,0,0,0,0,105,14,48,50,51,1,14,14,50,0,0,0,0,0,0,0,0,0,0,0,60,50,1,0,0,59,0,0,0,0,0,0,0,105,14,105,14,0,0,49,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,59,0,0,0,0,0,0,0,10,15,16,17,0,39,0,39,39,0,0,0,50,0,0,0,0,0,107,12,0,0,0,0,0,0,0,105,14,60,0,50,50,56,10,15,16,17,106,105,108,13,14,50,52,53,59,0,0,0,39,47,108,52,108,52,108,52,50,0,0,0,107,12,107,12,0,1,1,14,14,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,53,39,51,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,47,53,0,0,105,14,0,0,0,0,105,14,0,0,0,0,1,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,0,1,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,1,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,0,0,0,20,19,20,19,51,57,1,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,105,14,0,56,0,0,0,105,14,0,0,0,0,0,57,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,107,12,50,0,0,0,0],"f":[0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[[[1,[-1]]],[[1,[-1]]],2],[3,3],[4,4],[5,5],[6,6],[7,7],[8,8],[9,9],[10,10],[11,11],[12,12],[13,13],[14,14],[15,15],[16,16],[17,17],[18,18],[19,19],[20,20],[21,21],[22,22],[23,23],[24,24],[25,25],[26,26],[27,27],[28,28],[29,29],[30,30],[31,31],[32,32],[33,33],[34,34],[35,35],[36,36],[37,37],[38,38],[39,39],[40,40],[41,41],[42,42],[43,43],[44,44],[45,45],[46,46],[47,47],[48,48],[49,49],[50,50],[51,51],[52,52],[53,53],[54,54],[55,55],[56,56],[57,57],[58,58],[59,59],[60,60],[61,61],[62,62],[63,63],[64,64],[[-1,-2],65,[],[]],[[-1,-2],65,[],[]],[[-1,-2],65,[],[]],[[-1,-2],65,[],[]],[[-1,-2],65,[],[]],[[-1,-2],65,[],[]],[[-1,-2],65,[],[]],[[-1,-2],65,[],[]],[[-1,-2],65,[],[]],[[-1,-2],65,[],[]],[[-1,-2],65,[],[]],[[-1,-2],65,[],[]],[[-1,-2],65,[],[]],[[-1,-2],65,[],[]],[[-1,-2],65,[],[]],[[-1,-2],65,[],[]],[[-1,-2],65,[],[]],[[-1,-2],65,[],[]],[[-1,-2],65,[],[]],[[-1,-2],65,[],[]],[[-1,-2],65,[],[]],[[-1,-2],65,[],[]],[[-1,-2],65,[],[]],[[-1,-2],65,[],[]],[[-1,-2],65,[],[]],[[-1,-2],65,[],[]],[[-1,-2],65,[],[]],[[-1,-2],65,[],[]],[[-1,-2],65,[],[]],[[-1,-2],65,[],[]],[[-1,-2],65,[],[]],[[-1,-2],65,[],[]],[[-1,-2],65,[],[]],[[-1,-2],65,[],[]],[[-1,-2],65,[],[]],[[-1,-2],65,[],[]],[[-1,-2],65,[],[]],[[-1,-2],65,[],[]],[[-1,-2],65,[],[]],[[-1,-2],65,[],[]],[[-1,-2],65,[],[]],[[-1,-2],65,[],[]],[[-1,-2],65,[],[]],[[-1,-2],65,[],[]],[[-1,-2],65,[],[]],[[-1,-2],65,[],[]],[[-1,-2],65,[],[]],[[-1,-2],65,[],[]],[[-1,-2],65,[],[]],[[-1,-2],65,[],[]],[[-1,-2],65,[],[]],[[-1,-2],65,[],[]],[[-1,-2],65,[],[]],[[-1,-2],65,[],[]],[[-1,-2],65,[],[]],[[-1,-2],65,[],[]],[[-1,-2],65,[],[]],[[-1,-2],65,[],[]],[[-1,-2],65,[],[]],[[-1,-2],65,[],[]],[[-1,-2],65,[],[]],[[-1,-2],65,[],[]],[[-1,-2],65,[],[]],0,0,0,0,0,0,0,0,[[[1,[-1]],[1,[-1]]],66,67],0,0,0,0,0,0,0,0,0,0,[[],[[1,[-1]]],68],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[[[1,[-1]],[1,[-1]]],69,70],0,0,[14,71],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[[[1,[-1]],72],73,74],[[3,72],73],[[6,72],73],[[7,72],73],[[8,72],73],[[9,72],73],[[10,72],73],[[11,72],73],[[12,72],73],[[13,72],73],[[14,72],73],[[15,72],73],[[16,72],73],[[17,72],73],[[18,72],73],[[19,72],73],[[20,72],73],[[21,72],73],[[23,72],73],[[24,72],73],[[25,72],73],[[26,72],73],[[27,72],73],[[29,72],73],[[39,72],73],[[40,72],73],[[41,72],73],[[42,72],73],[[43,72],73],[[44,72],73],[[45,72],73],[[46,72],73],[[48,72],73],[[49,72],73],[[50,72],73],[[51,72],73],[[52,72],73],[[53,72],73],[[54,72],73],[[55,72],73],[[56,72],73],[[59,72],73],[[60,72],73],[[61,72],73],[[62,72],73],[[63,72],73],[[64,72],73],0,0,0,0,0,0,0,0,0,[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],0,0,0,0,0,0,0,0,0,0,0,0,0,0,[[[1,[-1]],75,76],77,[[79,[[78,[76]]]],[80,[[78,[76]]]]]],0,[[[1,[-1]],75],69,[[79,[[78,[76]]]],[80,[[78,[76]]]]]],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[[[1,[-1]],-2],65,81,82],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[-1,[[1,[-1]]],[]],[[71,71],[[1,[[83,[76]]]]]],[14,71],0,0,0,0,0,0,0,0,0,0,0,0,0,0,[[[1,[-1]],[1,[-1]]],[[84,[66]]],85],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[[[1,[-1]],75,76,77],65,[[79,[[78,[76]]]],[80,[[78,[76]]]]]],[[[1,[-1]],75,69],65,[[79,[[78,[76]]]],[80,[[78,[76]]]]]],[[14,71],65],[[14,71],65],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],0,[-1,[[86,[-2]]],[],[]],[-1,[[86,[-2]]],[],[]],[-1,[[86,[-2]]],[],[]],[-1,[[86,[-2]]],[],[]],[-1,[[86,[-2]]],[],[]],[-1,[[86,[-2]]],[],[]],[-1,[[86,[-2]]],[],[]],[-1,[[86,[-2]]],[],[]],[-1,[[86,[-2]]],[],[]],[-1,[[86,[-2]]],[],[]],[-1,[[86,[-2]]],[],[]],[-1,[[86,[-2]]],[],[]],[-1,[[86,[-2]]],[],[]],[-1,[[86,[-2]]],[],[]],[-1,[[86,[-2]]],[],[]],[-1,[[86,[-2]]],[],[]],[-1,[[86,[-2]]],[],[]],[-1,[[86,[-2]]],[],[]],[-1,[[86,[-2]]],[],[]],[-1,[[86,[-2]]],[],[]],[-1,[[86,[-2]]],[],[]],[-1,[[86,[-2]]],[],[]],[-1,[[86,[-2]]],[],[]],[-1,[[86,[-2]]],[],[]],[-1,[[86,[-2]]],[],[]],[-1,[[86,[-2]]],[],[]],[-1,[[86,[-2]]],[],[]],[-1,[[86,[-2]]],[],[]],[-1,[[86,[-2]]],[],[]],[-1,[[86,[-2]]],[],[]],[-1,[[86,[-2]]],[],[]],[-1,[[86,[-2]]],[],[]],[-1,[[86,[-2]]],[],[]],[-1,[[86,[-2]]],[],[]],[-1,[[86,[-2]]],[],[]],[-1,[[86,[-2]]],[],[]],[-1,[[86,[-2]]],[],[]],[-1,[[86,[-2]]],[],[]],[-1,[[86,[-2]]],[],[]],[-1,[[86,[-2]]],[],[]],[-1,[[86,[-2]]],[],[]],[-1,[[86,[-2]]],[],[]],[-1,[[86,[-2]]],[],[]],[-1,[[86,[-2]]],[],[]],[-1,[[86,[-2]]],[],[]],[-1,[[86,[-2]]],[],[]],[-1,[[86,[-2]]],[],[]],[-1,[[86,[-2]]],[],[]],[-1,[[86,[-2]]],[],[]],[-1,[[86,[-2]]],[],[]],[-1,[[86,[-2]]],[],[]],[-1,[[86,[-2]]],[],[]],[-1,[[86,[-2]]],[],[]],[-1,[[86,[-2]]],[],[]],[-1,[[86,[-2]]],[],[]],[-1,[[86,[-2]]],[],[]],[-1,[[86,[-2]]],[],[]],[-1,[[86,[-2]]],[],[]],[-1,[[86,[-2]]],[],[]],[-1,[[86,[-2]]],[],[]],[-1,[[86,[-2]]],[],[]],[-1,[[86,[-2]]],[],[]],[-1,[[86,[-2]]],[],[]],[-1,[[86,[-2]]],[],[]],[-1,[[86,[-2]]],[],[]],[-1,[[86,[-2]]],[],[]],[-1,[[86,[-2]]],[],[]],[-1,[[86,[-2]]],[],[]],[-1,[[86,[-2]]],[],[]],[-1,[[86,[-2]]],[],[]],[-1,[[86,[-2]]],[],[]],[-1,[[86,[-2]]],[],[]],[-1,[[86,[-2]]],[],[]],[-1,[[86,[-2]]],[],[]],[-1,[[86,[-2]]],[],[]],[-1,[[86,[-2]]],[],[]],[-1,[[86,[-2]]],[],[]],[-1,[[86,[-2]]],[],[]],[-1,[[86,[-2]]],[],[]],[-1,[[86,[-2]]],[],[]],[-1,[[86,[-2]]],[],[]],[-1,[[86,[-2]]],[],[]],[-1,[[86,[-2]]],[],[]],[-1,[[86,[-2]]],[],[]],[-1,[[86,[-2]]],[],[]],[-1,[[86,[-2]]],[],[]],[-1,[[86,[-2]]],[],[]],[-1,[[86,[-2]]],[],[]],[-1,[[86,[-2]]],[],[]],[-1,[[86,[-2]]],[],[]],[-1,[[86,[-2]]],[],[]],[-1,[[86,[-2]]],[],[]],[-1,[[86,[-2]]],[],[]],[-1,[[86,[-2]]],[],[]],[-1,[[86,[-2]]],[],[]],[-1,[[86,[-2]]],[],[]],[-1,[[86,[-2]]],[],[]],[-1,[[86,[-2]]],[],[]],[-1,[[86,[-2]]],[],[]],[-1,[[86,[-2]]],[],[]],[-1,[[86,[-2]]],[],[]],[-1,[[86,[-2]]],[],[]],[-1,[[86,[-2]]],[],[]],[-1,[[86,[-2]]],[],[]],[-1,[[86,[-2]]],[],[]],[-1,[[86,[-2]]],[],[]],[-1,[[86,[-2]]],[],[]],[-1,[[86,[-2]]],[],[]],[-1,[[86,[-2]]],[],[]],[-1,[[86,[-2]]],[],[]],[-1,[[86,[-2]]],[],[]],[-1,[[86,[-2]]],[],[]],[-1,[[86,[-2]]],[],[]],[-1,[[86,[-2]]],[],[]],[-1,[[86,[-2]]],[],[]],[-1,[[86,[-2]]],[],[]],[-1,[[86,[-2]]],[],[]],[-1,[[86,[-2]]],[],[]],[-1,[[86,[-2]]],[],[]],[-1,[[86,[-2]]],[],[]],[-1,[[86,[-2]]],[],[]],[-1,[[86,[-2]]],[],[]],[-1,[[86,[-2]]],[],[]],[-1,[[86,[-2]]],[],[]],[-1,[[86,[-2]]],[],[]],[-1,[[86,[-2]]],[],[]],0,0,0,0,0,0,0,0,0,[-1,87,[]],[-1,87,[]],[-1,87,[]],[-1,87,[]],[-1,87,[]],[-1,87,[]],[-1,87,[]],[-1,87,[]],[-1,87,[]],[-1,87,[]],[-1,87,[]],[-1,87,[]],[-1,87,[]],[-1,87,[]],[-1,87,[]],[-1,87,[]],[-1,87,[]],[-1,87,[]],[-1,87,[]],[-1,87,[]],[-1,87,[]],[-1,87,[]],[-1,87,[]],[-1,87,[]],[-1,87,[]],[-1,87,[]],[-1,87,[]],[-1,87,[]],[-1,87,[]],[-1,87,[]],[-1,87,[]],[-1,87,[]],[-1,87,[]],[-1,87,[]],[-1,87,[]],[-1,87,[]],[-1,87,[]],[-1,87,[]],[-1,87,[]],[-1,87,[]],[-1,87,[]],[-1,87,[]],[-1,87,[]],[-1,87,[]],[-1,87,[]],[-1,87,[]],[-1,87,[]],[-1,87,[]],[-1,87,[]],[-1,87,[]],[-1,87,[]],[-1,87,[]],[-1,87,[]],[-1,87,[]],[-1,87,[]],[-1,87,[]],[-1,87,[]],[-1,87,[]],[-1,87,[]],[-1,87,[]],[-1,87,[]],[-1,87,[]],[-1,87,[]],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0],"c":[],"p":[[5,"__BindgenBitfieldUnit",0],[10,"Clone",3015],[5,"__fsid_t",0],[5,"__mbstate_t",0],[20,"__mbstate_t__bindgen_ty_1",0],[5,"_IO_FILE",0],[5,"__locale_struct",0],[5,"tm",0],[5,"max_align_t",0],[5,"imaxdiv_t",0],[5,"recursiveMutex",0],[5,"io_functions",0],[5,"io_position",0],[5,"io_stream",0],[5,"div_t",0],[5,"ldiv_t",0],[5,"lldiv_t",0],[5,"__sigset_t",0],[5,"timeval",0],[5,"timespec",0],[5,"fd_set",0],[20,"__atomic_wide_counter",0],[5,"__atomic_wide_counter__bindgen_ty_1",0],[5,"__pthread_internal_list",0],[5,"__pthread_internal_slist",0],[5,"__pthread_mutex_s",0],[5,"__pthread_rwlock_arch_t",0],[5,"__pthread_cond_s",0],[5,"__once_flag",0],[20,"pthread_mutexattr_t",0],[20,"pthread_condattr_t",0],[20,"pthread_attr_t",0],[20,"pthread_mutex_t",0],[20,"pthread_cond_t",0],[20,"pthread_rwlock_t",0],[20,"pthread_rwlockattr_t",0],[20,"pthread_barrier_t",0],[20,"pthread_barrierattr_t",0],[5,"random_data",0],[5,"drand48_data",0],[5,"__PL_module",0],[5,"__PL_procedure",0],[5,"__PL_record",0],[5,"__PL_queryRef",0],[5,"__PL_foreign_context",0],[5,"__PL_PL_local_data",0],[20,"term_value_t",0],[5,"term_value_t__bindgen_ty_1",0],[5,"PL_extension",0],[5,"PL_blob_t",0],[5,"PL_option_t",0],[5,"pl_sigaction",0],[5,"PL_thread_attr_t",0],[5,"__PL_table",0],[5,"__PL_table_enum",0],[5,"PL_prof_type_t",0],[5,"xpceref_t",0],[20,"xpceref_t__bindgen_ty_1",0],[5,"pl_context_t",0],[5,"__va_list_tag",0],[5,"__locale_data",0],[5,"PL_locale",0],[5,"__PL_queryFrame",0],[5,"__PL_localFrame",0],[1,"tuple"],[6,"Ordering",3016],[10,"Ord",3016],[10,"Default",3017],[1,"bool"],[10,"PartialEq",3016],[8,"c_uint",3018],[5,"Formatter",3019],[8,"Result",3019],[10,"Debug",3019],[1,"usize"],[1,"u8"],[1,"u64"],[1,"slice"],[10,"AsRef",3020],[10,"AsMut",3020],[10,"Hash",3021],[10,"Hasher",3021],[1,"array"],[6,"Option",3022],[10,"PartialOrd",3016],[6,"Result",3023],[5,"TypeId",3024],[8,"Sread_function",0],[8,"Swrite_function",0],[8,"Sseek_function",0],[8,"Sseek64_function",0],[8,"Sclose_function",0],[8,"Scontrol_function",0],[8,"__compar_fn_t",0],[8,"pl_function_t",0],[8,"PL_dispatch_hook_t",0],[8,"PL_abort_hook_t",0],[8,"PL_initialise_hook_t",0],[8,"PL_agc_hook_t",0],[8,"mbstate_t",0],[8,"__pthread_list_t",0],[8,"__pthread_slist_t",0],[8,"fsid_t",0],[8,"sigset_t",0],[8,"IOSTREAM",0],[8,"IOPOS",0],[8,"IOFUNCTIONS",0],[8,"pl_sigaction_t",0]],"b":[]}],\
["swipl_info",{"doc":"A helper crate to retrieve information about the installed â€¦","t":"FONNONNHONOOOOONNNO","n":["SwiplInfo","arch","borrow","borrow_mut","cflags","fmt","from","get_swipl_info","header_dir","into","ldflags","lib_dir","lib_name","pack_so_dir","swi_home","try_from","try_into","type_id","version"],"q":[[0,"swipl_info"],[19,"core::fmt"],[20,"core::fmt"],[21,"core::any"]],"d":["Struct containing information about a SWI-Prolog â€¦","The current architecture","","","The cflags that swipl advises should be used in module â€¦","","Returns the argument unchanged.","Retrieve information about the installed swipl environment.","The directory with the header files","Calls <code>U::from(self)</code>.","The ldflags that swipl advises should be used in module â€¦","The directory with the dynamic libraries","The swipl lib name on this platform","The directory subpath where dynamic libraries live","The main directory where SWI-Prolog is located","","","","The SWI-Prolog version as an integer"],"i":[0,1,1,1,1,1,1,0,1,1,1,1,1,1,1,1,1,1,1],"f":[0,0,[-1,-2,[],[]],[-1,-2,[],[]],0,[[1,2],3],[-1,-1,[]],[[],1],0,[-1,-2,[],[]],0,0,0,0,0,[-1,[[4,[-2]]],[],[]],[-1,[[4,[-2]]],[],[]],[-1,5,[]],0],"c":[],"p":[[5,"SwiplInfo",0],[5,"Formatter",19],[8,"Result",19],[6,"Result",20],[5,"TypeId",21]],"b":[]}],\
["swipl_macros",{"doc":"swipl-macros provides procedural macros for the swipl â€¦","t":"XQXQQQQQQQ","n":["arc_blob","atom","clone_blob","functor","pred","predicates","prolog","term","wrapped_arc_blob","wrapped_clone_blob"],"q":[[0,"swipl_macros"]],"d":["Define an arc blob.","Create a static atom.","Define a clone blob.","Create a static functor.","Generate an inline callable predicate.","Define foreign predicates written in rust for use in â€¦","Define prolog predicates to be used from rust code.","Generate a term from a rust expression.","Define a wrapped arc blob.","Define a wrapped clone blob."],"i":[0,0,0,0,0,0,0,0,0,0],"f":[0,0,0,0,0,0,0,0,0,0],"c":[],"p":[],"b":[]}]\
]'));
if (typeof exports !== 'undefined') exports.searchIndex = searchIndex;
else if (window.initSearch) window.initSearch(searchIndex);
